[
  {
    "objectID": "labs/lab-4.html",
    "href": "labs/lab-4.html",
    "title": "Lab 4 - Merge Conflicts and Misrepresentation",
    "section": "",
    "text": "Important\n\n\n\nThis lab is due Monday, February 27th at 5:00pm."
  },
  {
    "objectID": "labs/lab-4.html#why-teams-rationale",
    "href": "labs/lab-4.html#why-teams-rationale",
    "title": "Lab 4 - Merge Conflicts and Misrepresentation",
    "section": "Why Teams: Rationale",
    "text": "Why Teams: Rationale\nIn the real world, data scientists and statisticians often work in research teams. It is a skill to be able to communicate and work together on common projects. Thus, the remaining labs + your project will be team based.\nTeams work better when members have a common understanding of the team‚Äôs goals and expectations for collaboration. The purpose of this activity is to help your team making a plan for working together during lab and outside of the scheduled lab time.\nEach team member will have some ideas about how a team should operate. These ideas may be very different. This is your opportunity to share your thoughts and ideas to promote optimal team function and prevent misunderstandings in the future."
  },
  {
    "objectID": "labs/lab-4.html#team-name",
    "href": "labs/lab-4.html#team-name",
    "title": "Lab 4 - Merge Conflicts and Misrepresentation",
    "section": "Team Name",
    "text": "Team Name\nDiscuss with your group a team name to be called. Your GitHub repos will be created for this team name moving forward. Report your team name to your Lab Leader before moving on."
  },
  {
    "objectID": "labs/lab-4.html#instructions",
    "href": "labs/lab-4.html#instructions",
    "title": "Lab 4 - Merge Conflicts and Misrepresentation",
    "section": "Instructions",
    "text": "Instructions\nBefore completing the lab today, you will complete a team agreement. Discuss each of the items below with all in-person team members. If necessary, also follow up this week with any missing team members.\nHave one person act as the recorder and type the team‚Äôs decisions in the team-agreement.qmd file.\nBe sure the team agrees on an item before it is added to the document.\nOnce the document is complete, the recorder should render, commit, and push the team agreement to GitHub. All team members can refer to this document throughout the semester."
  },
  {
    "objectID": "labs/lab-4.html#team-agreement",
    "href": "labs/lab-4.html#team-agreement",
    "title": "Lab 4 - Merge Conflicts and Misrepresentation",
    "section": "Team Agreement",
    "text": "Team Agreement\n\nWeekly meetings\nIdentify a 1 - 2 hour weekly block outside of lab where the team can meet to work on assignments. All team members should block off this time on their calendar in case the group needs to meet to finish lab or work on the project.\n\n\nMeeting ‚Äúlocation‚Äù\nHow the team will meet to work together (e.g.¬†in-person, Zoom, Facetime, Google Hangouts). Be sure every member is able to access the virtual meeting space, if needed. If you are unable to find a weekly time when the team can meet, briefly outline a plan to work on assignments outside of lab. Otherwise, you can delete this item.\n\n\nPrimary method of communication\nThe team‚Äôs primary method of communication outside of meetings (e.g.¬†Slack, text messages, etc.)\n\n\nHow should someone notify the other members if they are unable to attend lab or a scheduled team meeting?\n\n\nBy when should everyone have their portion of the lab completed?\nKeep in mind your team may want to have time to review the lab before turning it in to make sure it is a cohesive write up.\n\n\nAny other items the team would like to discuss or plan.\n\n\nMissing Teammates\nIf you are missing teammates for today‚Äôs lab, it is your responsibility to reach out, say hello, and communicate with them that they must contribute to the above and below questions before submitting lab-04 to Gradescope. You can find their email in the teams repo. The link to the teams repo is located on our website on the teaching team tab."
  },
  {
    "objectID": "labs/lab-4.html#setup",
    "href": "labs/lab-4.html#setup",
    "title": "Lab 4 - Merge Conflicts and Misrepresentation",
    "section": "Setup",
    "text": "Setup\n\nClone the repo and open the .qmd file.\nAssign the numbers 1, 2, 3, and 4 to each of the team members. If your team has fewer than 4 people, some people will need to have multiple numbers. If your team has more than 4 people, some people will need to share some numbers.\nUpdate your git settings! Copy and paste git config --global pull.rebase false into your Terminal in RStudio and press enter. (Look for the tab next to the Console, and ask if you can‚Äôt find it.)"
  },
  {
    "objectID": "labs/lab-4.html#lets-cause-a-merge-conflict",
    "href": "labs/lab-4.html#lets-cause-a-merge-conflict",
    "title": "Lab 4 - Merge Conflicts and Misrepresentation",
    "section": "Let‚Äôs cause a merge conflict!",
    "text": "Let‚Äôs cause a merge conflict!\nOur goal is to see two different types of merges: first we‚Äôll see a type of merge that git can‚Äôt figure out on its own how to do on its own (a merge conflict) and requires human intervention, then another type of where that git can figure out how to do without human intervention.\nDoing this will require some tight choreography, so pay attention!\nTake turns in completing the exercises, only one member at a time. Others should just watch, not doing anything on their own projects (this includes not even pulling changes!) until they are instructed to. If you feel like you won‚Äôt be able to resist the urge to touch your computer when it‚Äôs not your turn, we recommend putting your hands in your pockets or sitting on them!\nBefore starting: everyone on your team should have followed the instructions in the Setup section above. Repeating from earlier: everyone should clone the repo, open the lab4.qmd document, run git config --global pull.rebase false in the Terminal, and know which role number(s) they are.\nüõë Make sure everyone has completed this step before moving on.\nRole 1:\n\nChange ‚ÄúTEAM NAME‚Äù in the YAML to your actual team name.\nrender, commit, push.\n\nüõë Make sure the previous role has finished before moving on to the next step.\nRole 2:\n\nChange ‚ÄúTEAM NAME‚Äù to some other word.\nRender, commit, push. You should get an error.\nPull. Take a look at the document with the merge conflict.\nClear the merge conflict by editing the document to choose the correct/preferred change.\nRender.\nClick the Stage checkbox for all files in your Git tab. Make sure they all have check marks, not filled-in boxes.\ncommit and push.\n\nüõë Make sure the previous role has finished before moving on to the next step.\nRole 3:\n\nAdd a code chunk for Exercise 2 and give it a label.\nRender, commit, push. You should get an error.\nPull. No merge conflicts should occur, but you should see a message about merging.\nNow push.\n\nüõë Make sure the previous role has finished before moving on to the next step.\nRole 4:\n\nAdd a code chunk to Exercise 2 and give it a different label.\nRender, commit, push. You should get an error.\nPull. Take a look at the document with the merge conflict. Clear the merge conflict by choosing the correct/preferred change. render, and push.\n\nüõë Make sure the previous role has finished before moving on to the next step.\nEveryone: Pull, and observe the changes in your document."
  },
  {
    "objectID": "labs/lab-4.html#tips-for-collaborating-via-github",
    "href": "labs/lab-4.html#tips-for-collaborating-via-github",
    "title": "Lab 4 - Merge Conflicts and Misrepresentation",
    "section": "Tips for collaborating via GitHub",
    "text": "Tips for collaborating via GitHub\n\nAlways pull first before you start working.\nResolve a merge conflict (render and push) before continuing your work. Never do new work while resolving a merge conflict.\nRender, commit, and push often to minimize merge conflicts and/or to make merge conflicts easier to resolve.\nIf you find yourself in a situation that is difficult to resolve, ask questions ASAP. Don‚Äôt let it linger and get bigger."
  },
  {
    "objectID": "labs/lab-4.html#packages",
    "href": "labs/lab-4.html#packages",
    "title": "Lab 4 - Merge Conflicts and Misrepresentation",
    "section": "Packages",
    "text": "Packages\nWe‚Äôll use the tidyverse package for much of the data wrangling and visualization.\n\nlibrary(tidyverse)\n\nSince the exercises for this week are short it‚Äôs possible not every team member will get to commit and push during the workshop. However each team member should review what was created, fix typos, make edits for better presentation, etc. either during or after the workshop, and before the deadline.\nNote: Everyone should intellectually contribute to every question. However, no two teammates should work on the same question at the same time below."
  },
  {
    "objectID": "labs/lab-4.html#data",
    "href": "labs/lab-4.html#data",
    "title": "Lab 4 - Merge Conflicts and Misrepresentation",
    "section": "Data",
    "text": "Data\nIn this lab you‚Äôll construct the data set!"
  },
  {
    "objectID": "teaching-resources/GitHubClassroomManagement.html",
    "href": "teaching-resources/GitHubClassroomManagement.html",
    "title": "GitHub Classroom Management",
    "section": "",
    "text": "# $ git clone ghclass\n# $ git checkout artifacts\n\n#devtools::install(\"/path/to/ghclass\")\nEach code chunk below is designed to be self-contained (no dependency between chunks)."
  },
  {
    "objectID": "teaching-resources/GitHubClassroomManagement.html#to-make-new-repos",
    "href": "teaching-resources/GitHubClassroomManagement.html#to-make-new-repos",
    "title": "GitHub Classroom Management",
    "section": "To make new repos",
    "text": "To make new repos\n\n\n\n\nCreate a new repo in the organization called ‚Äúlab1‚Äù with a README.md\nPush to ‚Äúlab1‚Äù: lab1.qmd, data/any_relevant_data.csv and optionally lab1.Rproj.\nSelect the repository, click ‚ÄúSettings‚Äù and check ‚ÄúTemplate repository‚Äù.\nFollow the code below.\n\n\n# initial assignment creation\norg = \"sta199-sp23-1\"\nusernames = ghclass::org_members(org)\n\n## edit this:\nassignment_template_repo = \"lab0_template\"\n\nghclass::org_create_assignment(\n  org = org,\n  repo = paste0(assignment_template_repo, \"-\", usernames),\n  user = usernames,\n  source_repo = paste0(org, \"/\", assignment_template_repo)\n)\n\n\n\n\nFeel free to test lab creation on my dummy account ‚Äúfishswish‚Äù or on your own account with the code below\n\norg = \"sta199-sp23-1\"\nusernames = \"fishswish\"\nassignment_template_repo = \"lab0_template\"\nghclass::org_create_assignment(\n  org = org,\n  repo = paste0(assignment_template_repo, \"-\", usernames),\n  user = usernames,\n  source_repo = paste0(org, \"/\", assignment_template_repo)\n)\n\nIt‚Äôs possible some people are not in the organization and will need to be have additional repos created manually following the steps below:\n\ngo to template repo and click the green ‚ÄúUse this template‚Äù -> ‚ÄúCreate a new repository‚Äù -> name it ‚Äúlab-x-their_github_username‚Äù -> leave ‚ÄúPrivate‚Äù selected and click ‚ÄúCreate repository from template‚Äù\nnext in the new repo go to ‚ÄúSettings‚Äù -> ‚ÄúCollaborators and Teams‚Äù -> click the green ‚ÄúAdd people‚Äù button and type in their GitHub username.\nnext make sure to go to the ‚ÄúPeople‚Äù section of the organization and select ‚ÄúInvite member‚Äù so they join the organization too. Owning a repo in the org just makes them an outside collaborator. They still have to actually join the org"
  },
  {
    "objectID": "teaching-resources/GitHubClassroomManagement.html#oops.-file-management-after-you-create-repos",
    "href": "teaching-resources/GitHubClassroomManagement.html#oops.-file-management-after-you-create-repos",
    "title": "GitHub Classroom Management",
    "section": "Oops. File management after you create repos",
    "text": "Oops. File management after you create repos\nThe magic happens in repo_add_file(). Be sure to edit/check each item below, specifically:\n\norg as appropriate\nrepos_to_modify object\narguments to repo_add_file()\n\n\norg = \"sta199-sp23-1\"\nusernames = ghclass::org_members(org)\n\n# get all existing labX repos\nrepos_to_modify = org_repos(org, filter = \"practice1-\") # edit this \"filter\"\n\nghclass::repo_add_file(repo = repos_to_modify,\n                       branch = \"main\",\n                       repo_folder = \"\", # edit this to be path to folder in repo\n                       message = \"update README\", # update to be a meaningful commit message\n                       file = \"~/Desktop/README.md\", # update local path to the file you want to add\n                       overwrite = TRUE) # if you want to overwrite or not"
  },
  {
    "objectID": "teaching-resources/GitHubClassroomManagement.html#creating-team-assignments",
    "href": "teaching-resources/GitHubClassroomManagement.html#creating-team-assignments",
    "title": "GitHub Classroom Management",
    "section": "Creating team assignments",
    "text": "Creating team assignments\n\n# example data frame for demo purposes\n# you will need to format your data frame to look like this\nroster = data.frame(\n  github = c(\"fishswish\", \"athos00\"),\n  lab1 = rep(\"lab1-team1\", 2)\n)\n\n# edit each item below\norg_create_assignment(\n  org = \"sta199-sp23-1\",\n  user = roster$github,\n  repo = roster$lab1,\n  team = roster$lab1,\n  source_repo = \"sta199-sp23-1/lab1_template\",\n  private = TRUE\n)\n\n\nroster = data.frame(\n  github = c(\"devinjohnson7\", \"athos00\"),\n  lab1 = rep(\"lab1-team-awesome\", 2)\n)\n\n# edit each item below\norg_create_assignment(\n  org = \"sta323-sp23\",\n  user = roster$github,\n  repo = roster$lab1,\n  team = roster$lab1,\n  source_repo = \"sta323-sp23/lab-1\", # template file\n  private = TRUE\n)\n\n\norg = \"sta323-sp23\"\nrepos = ghclass::org_repos(org, filter = \"lab-2\")\n\n\n# repos = \"sta323-sp23/lab-1\"\nghclass::action_artifact_delete(repos, ids=action_artifacts(repos, which=\"all\"))"
  },
  {
    "objectID": "labs/lab-5.html",
    "href": "labs/lab-5.html",
    "title": "Lab 5 - Predicting a numerical outcome",
    "section": "",
    "text": "Important\n\n\n\nThis lab is due Monday, March 6 at 5:00pm."
  },
  {
    "objectID": "labs/lab-5.html#intro",
    "href": "labs/lab-5.html#intro",
    "title": "Lab 5 - Predicting a numerical outcome",
    "section": "Intro",
    "text": "Intro\nParasites can cause infectious disease ‚Äì but not all animals are affected by the same parasites. Some parasites are present in a multitude of species and others are confined to a single host. It is hypothesized that closely related hosts are more likely to share the same parasites. More specifically, it is thought that closely related hosts will live in similar environments and have similar genetic makeup that coincides with optimal conditions for the same parasite to flourish.\nIn this lab we will see how much evolutionary history predicts parasite similarity."
  },
  {
    "objectID": "labs/lab-5.html#the-data",
    "href": "labs/lab-5.html#the-data",
    "title": "Lab 5 - Predicting a numerical outcome",
    "section": "The Data",
    "text": "The Data\nToday‚Äôs dataset comes from an Ecology Letters paper by Cooper at al.¬†(2012) ‚ÄúPhylogenetic host specificity and understanding parasite sharing in primates‚Äù which can be found here. The goal of the paper was to identify the ability of evolutionary history and ecological traits to characterize parasite host specificity.\nEach row of the data contains two species, species1 and species2.\nSubsequent columns describe metrics that compare the species:\n\ndivergence_time: how many (millions) of years ago the two species diverged. i.e.¬†how many million years ago they were the same species.\ndistance: geodesic distance between species geographic range centroids (in kilometers)\nBMdiff: difference in body mass between the two species (in grams)\nprecdiff: difference in mean annual precipitation across the two species geographic ranges (mm)\nparsim: a measure of parasite similarity (proportion of parasites shared between species, ranges from 0 to 1.)\n\nThe data are available in parasites.csv in the data folder."
  },
  {
    "objectID": "labs/lab-5.html#packages",
    "href": "labs/lab-5.html#packages",
    "title": "Lab 5 - Predicting a numerical outcome",
    "section": "Packages",
    "text": "Packages\nWe‚Äôll use the tidyverse package for much of the data wrangling and visualization.\n\nlibrary(tidyverse)\nlibrary(tidymodels)"
  },
  {
    "objectID": "labs/lab-5.html#exercises",
    "href": "labs/lab-5.html#exercises",
    "title": "Lab 5 - Predicting a numerical outcome",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nImportant\n\n\n\nIt may be helpful to designate one team member to work on each of the problems and only edit your designated portion of the quarto document. However, after last week you should have experience resolving merge conflicts. Consider referring back to that lab or asking lab instructors for help if you run into merge conflicts.\n\n\nTo get started, load the data and save the data frame as parasites.\n\nLet‚Äôs start by examining the relationship between divergence_time and parsim.\n\nBased on the goals of the analysis, what is the response variable?\nVisualize the relationship between the two variables.\nUse the visualization to describe the relationship between the two variables.\n\nNext, we‚Äôll model this relationship.\n\nFit the model and write the estimated regression equation.\nInterpret the slope and the intercept in the context of the data.\nRecreate the visualization from Exercise 1, this time adding a regression line to the visualization.\nWhat do you notice about the prediction (regression) line that may be strange, particularly for very large divergence times?\n\nSince parsim takes values between 0 and 1, we want to transform this variable so that it can range between (‚àí‚àû,+‚àû). This will be better suited for fitting a regression model (and interpreting predicted values!)\n\nUsing mutate, create a new variable transformed_parsim that is calculated as log(parsim/(1-parsim)). Add this variable to your data frame. Note: log() in R represents taking the nautral log.\nThen, visualize the relationship between divergence_time and transformed_parsim. Add a regression line to your visualization.\nWrite a 1-2 sentence description of what you observe in the visualization.\n\nWhich variable is the strongest individual predictor of parasite similarity between species? To answer this question, begin by fitting separate linear regression models predicting transformed_parsim with each of the following predictor variables:\n\ndivergence_time\ndistance\nBMdiff\nprecdiff\n\n\nDo not report the model outputs in a tidy format but save each one as dt_model, dist_model, BM_model, and prec_model, respectively. Then,\na.  Report the slopes for each of these models.\n    Use proper notation.\n\nb.  To answer the question of interest, would it be useful to compare the slopes in each model to choose the variable that is the strongest predictor of parasite similarity?\n    Why or why not?\n\nRegardless of your answer to exercise 4b, we will also calculate the \\(R^2\\) of each model to help us identify the strongest individual linear predictor of transformed_parsim. \\(R^2\\) measures the percent of the variability in the response that is explained by the model.\n\nAs you may have guessed from the name, \\(R^2\\) can be calculated by squaring the correlation when we have a simple linear regression model. The correlation, r, takes values between -1 and 1, so \\(R^2\\) takes a value between 0 and 1. Intuitively, if r=1 or ‚àí1, then \\(R^2\\)=1, indicating the model perfectly fits the data. If r‚âà0 then \\(R^2\\)‚âà0, indicating the model is a very bad fit for the data.\nYou can calculate \\(R^2\\) using the glance function. For example, you can calculate \\(R^2\\) for dt_model using the code glance(dt_model)$r.squared.\na.  Calculate and report $R^2$ for each model fit in the previous exercise.\n\nb.  To answer our question of interest, would it be useful to compare the $R^2$ in each model to choose the variable that is the strongest predictor of parasite similarity?\n    Why or why not?"
  }
]