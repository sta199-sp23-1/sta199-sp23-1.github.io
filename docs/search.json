[
  {
    "objectID": "ae/ae-02.html",
    "href": "ae/ae-02.html",
    "title": "Intro statistics and plotting",
    "section": "",
    "text": "Office hours\nJoin GitHub organization if you haven’t already\nThis ae is not due for a grade, but when drop/add ends, aes will be graded for completion. You turn in your aes by committing to GitHub."
  },
  {
    "objectID": "ae/ae-02.html#getting-started",
    "href": "ae/ae-02.html#getting-started",
    "title": "Intro statistics and plotting",
    "section": "Getting started",
    "text": "Getting started\nClone your ae-2-username repo from the GitHub organization. If you don’t have an ae-2-username repo, you have not yet accepted your course org invite. You can still clone the public repo but note that you won’t be able to push."
  },
  {
    "objectID": "ae/ae-02.html#last-time",
    "href": "ae/ae-02.html#last-time",
    "title": "Intro statistics and plotting",
    "section": "Last time",
    "text": "Last time\n\nDefine package, data frame, variable and observation\nWhat’s a function? What’s an argument?\n\n\nglimpse(data)\nmean(x)\nlibrary(tidyverse)\n\n\nHow do you print to the screen?"
  },
  {
    "objectID": "ae/ae-02.html#today",
    "href": "ae/ae-02.html#today",
    "title": "Intro statistics and plotting",
    "section": "Today",
    "text": "Today\nBy the end of today you will…\n\npractice using glimpse(), names(), nrow(), ncol(), distinct(), count()\ndefine and give examples of statistics\nmake visualizations with ggplot\n\n\n“The simple graph has brought more information to the data analyst's mind than any other device\"\n- John Tukey"
  },
  {
    "objectID": "ae/ae-02.html#load-packages",
    "href": "ae/ae-02.html#load-packages",
    "title": "Intro statistics and plotting",
    "section": "Load packages",
    "text": "Load packages\n\nlibrary(tidyverse)\n\nA package within a package…\n\nThe tidyverse package is a collection of packages. ggplot2 and dplyr are two packages contained within tidyverse. ggplot2 contains functions for plotting data while dplyr contains tools to wrangle, manipulate and summarize data frames."
  },
  {
    "objectID": "ae/ae-02.html#load-data",
    "href": "ae/ae-02.html#load-data",
    "title": "Intro statistics and plotting",
    "section": "Load data",
    "text": "Load data\nThe data are stored as a CSV (comma separated values) file in the data folder of your repository. Let’s read it from there and save it as an object called flint.\n\nflint = read_csv(\"data/flint.csv\")\n\n\nData dictionary\n\nid: sample ID number (identifies the home)\nzip: ZIP code in Flint of the sample’s location\nward: ward in Flint of the sample’s location\ndraw: which time point the water was sampled from\nlead: lead content in parts per billion"
  },
  {
    "objectID": "ae/ae-02.html#goal",
    "href": "ae/ae-02.html#goal",
    "title": "Intro statistics and plotting",
    "section": "Goal",
    "text": "Goal\nWe want to learn about the population using a sample.\nIn the case we want to learn about the lead content in all of Flint, MI homes but we only have available water readings from a sample of homes (our data set).\n\nStatistics\nWhat is a statistic? It’s any mathematical function of the data. Sometimes, a statistic is referred to as “sample statistic” since you compute it from a sample (the data) and not the entire population.\n\nmeasure of central tendency:\n\nmean\nmedian\nmode\n\n\n\norder statistics:\n\nquantiles\n\nminimum (0 percentile)\nmedian (50th percentile)\nmaximum (100 percentile)\n\n\n\n\nmeasures of spread:\n\nvariance\nstandard deviation\nrange\nquartiles\ninter-quartile range (IQR)\n\n… and any other arbitrary function of the data you can come up with!\n\n\nExercise 3:\nCome up with your own statistic and write it in the narrative here.\nTo access a column of the data, we’ll use data$column.\nLet’s compute some of these statistics for lead ppb in R.\n\n# code here"
  },
  {
    "objectID": "ae/ae-02.html#count",
    "href": "ae/ae-02.html#count",
    "title": "Intro to plotting",
    "section": "Count",
    "text": "Count\nLet’s use distinct to find the number of different time points water was sampled.\n\ndistinct(flint, draw)\n\n# A tibble: 3 × 1\n  draw  \n  <chr> \n1 first \n2 second\n3 third \n\n\nHow many unique homes are in the data set?\n\nflint |>\n  distinct(id)\n\n# A tibble: 269 × 1\n      id\n   <dbl>\n 1     1\n 2     2\n 3     4\n 4     5\n 5     6\n 6     7\n 7     8\n 8     9\n 9    12\n10    13\n# … with 259 more rows\n\n\n\nA note on pipes |> and %>%."
  },
  {
    "objectID": "ae/ae-02.html#exercise-2",
    "href": "ae/ae-02.html#exercise-2",
    "title": "Intro statistics and plotting",
    "section": "Exercise 2",
    "text": "Exercise 2\nFill in the code to count how many samples were taken from each zip code. Un-comment the lines (i.e. remove the # before running the code)\n\n# flint |>\n # count(______)\n\nWhich ZIP code had the most samples drawn?"
  },
  {
    "objectID": "ae/ae-02.html#statistics",
    "href": "ae/ae-02.html#statistics",
    "title": "Intro to plotting",
    "section": "Statistics",
    "text": "Statistics\nWhat is a statistic? It’s any mathematical function of the data. Sometimes, a statistic is referred to as “sample statistic” since you compute it from a sample (the data) and not the entire population.\n\nmeasure of central tendency:\n\nmean\nmedian\nmode\n\n\n\norder statistics:\n\nquantiles\n\nminimum (0 percentile)\nmedian (50th percentile)\n\nmaximum (100 percentile)\n\n\n\nmeasures of spread:\n\nvariance\nstandard deviation\nrange\nquartiles\ninter-quartile range (IQR)\n\n… and any other arbitrary function of the data you can come up with!\n\n\nExercise 3:\nCome up with your own statistic and write it in the narrative here.\nTo access a column of the data, we’ll use data$column.\nLet’s compute some of these statistics for lead ppb in R.\n\n# code here"
  },
  {
    "objectID": "ae/ae-02.html#intro-to-plotting",
    "href": "ae/ae-02.html#intro-to-plotting",
    "title": "Intro statistics and plotting",
    "section": "Intro to plotting",
    "text": "Intro to plotting\nLet’s take a look at the distribution of lead content in homes in Flint, MI by building a plot, layer by layer.\nggplot() creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with data = flint.\n\nggplot(data = flint)\n\n\n\n\nThe mapping argument is paired with an aesthetic (aes()), which tells us how the variables in our data set should be mapped to the visual properties of the graph.\n\nggplot(data = flint,\n       mapping = aes(x = lead)) # variable(s) we want to look at\n\n\n\n\nWe often omit the names of the first two arguments in R functions. So you’ll often see this written as:\n\nggplot(flint, \n       aes(x = lead))\n\n\n\n\nThe geom_xx function specifies the type of plot we want to use to represent the data. In the code below, we use geom_histogram which creates a plot where each observation is represented by a point.\n\nggplot(flint, \n       aes(x = lead)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nWe can make this plot look nicer by adjusting the number of bins and/or the x-axis.\n\nflint |> # data\n  ggplot(aes(x = lead)) + # columns we want to look at\n  geom_histogram(bins = 50) + # geometry of the visualization\n  xlim(0, 100) # limit the x-axis to a certain range\n\n\n\n\nLet’s visualize some of our summary statistics on the plot.\n\nExercise 4:\nUn-comment the code below and fill in the blank with the mean.\n\nflint |> \n  ggplot(aes(x = lead)) + \n  geom_histogram(bins = 50) + \n  xlim(0,100) #+\n  #geom_vline(xintercept = __, color = \"red\")\n\nAdd another geom_vline with the median. Use a separate color."
  },
  {
    "objectID": "ae/ae-02.html#box-plots",
    "href": "ae/ae-02.html#box-plots",
    "title": "Intro statistics and plotting",
    "section": "Box plots",
    "text": "Box plots\nLet’s make some plots, where we will focus on zip codes 48503, 48504, 48505, 48506, and 48507. We will restrict our attention to samples with lead values less than 1,000 ppb.\n\nflint_focus <- flint |> \n  filter(zip %in% 48503:48507, lead < 1000)\n\nBelow are side-by-side box plots for the three flushing times in each of the five zip codes we considered. Add x and y labels; add a title by inserting title = \"title_name\" inside the labs() function.\n\nggplot(data = flint_focus, aes(x = factor(zip), y = lead)) +\n  geom_boxplot(aes(fill = factor(draw))) +\n  labs(x = \"--------\", y = \"--------\", fill = \"Flushing time\") +\n  scale_fill_discrete(breaks = c(\"first\", \"second\", \"third\"),\n                      labels = c(\"0 (sec)\", \"45 (sec)\", \"120 (sec)\")) +\n  coord_flip() +\n  theme_bw()\n\n\n\n\nAdd labels for x, y, a title, and subtitle to the code below to update the corresponding plot.\n\nggplot(data = flint_focus, aes(x = factor(zip), y = lead)) +\n  geom_boxplot(aes(fill = factor(draw))) + \n  labs(x = \"--------\", y = \"--------\", fill = \"Flushing time\",\n       subtitle = \"--------\") +\n  scale_fill_discrete(breaks = c(\"first\", \"second\", \"third\"),\n                      labels = c(\"0 (sec)\", \"45 (sec)\", \"120 (sec)\")) +\n  coord_flip(ylim = c(0, 50)) +\n  theme_bw()\n\n\n\n\nWhat is the difference between the two plots? What are the advantages and disadvantages to each plot?"
  },
  {
    "objectID": "ae/ae-02.html#references",
    "href": "ae/ae-02.html#references",
    "title": "Intro statistics and plotting",
    "section": "References",
    "text": "References\n\nLangkjaer-Bain, R. (2017). The murky tale of Flint’s deceptive water data. Significance, 14: 16-21.\nKelsey J. Pieper, Rebekah Martin, Min Tang, LeeAnne Walters, Jeffrey Parks, Siddhartha Roy, Christina Devine, and Marc A. Edwards Environmental Science & Technology 2018 52 (15), 8124-8132 DOI: 10.1021/acs.est.8b00791"
  },
  {
    "objectID": "labs/lab-project-peer-review.html",
    "href": "labs/lab-project-peer-review.html",
    "title": "Lab - Project peer review",
    "section": "",
    "text": "Learning goals\nIn this lab, you will…\n\nReview others’ project drafts as a team and provide feedback\nPost issues on GitHub using an issue template\nLearn from others’ projects and improve your own project based on their strengths and weaknesses\n\n\n\nProject peer review\nEach team will review two other teams’ project. As a team you should spend ~30 minutes on each team’s project.\n\nFind the names of the teams whose projects you’re reviewing below. You should already have access to this team's repo.\nEach team member should go to the repo of the team you’re reviewing.\nThen,\n\n1-2 team members clone the team’s project and renders it to check for reproducibility.\n1-2 team members open the team’s project in their browser and starts reading through the project draft.\n1 team member opens an issue on the team’s repo using the peer review template.\nAll team members discuss the project based on the prompts on the issue template and one team member records the feedback and submits the issue.\n\nTo open an issue in the repo you’re reviewing, click on New issue, and click on Get started for the Peer review issue. Fill out this issue, answering the following questions:\n\nPeer review by: [NAME OF TEAM DOING THE REVIEW]\nNames of team members that participated in this review: [FULL NAMES OF TEAM MEMBERS DOING THE REVIEW]\nDescribe the goal of the project.\nDescribe the data used or collected, if any. If the proposal does not include the use of a specific dataset, comment on whether the project would be strengthened by the inclusion of a dataset.\nDescribe the approaches, tools, and methods that will be used.\nProvide constructive feedback on how the team might be able to improve their project. Make sure your feedback includes at least one comment on the statistical reasoning aspect of the project, but do feel free to comment on aspects beyond the reasoning as well.\nWhat aspect of this project are you most interested in and would like to see highlighted in the presentation.\nWere you able to reproduce the project by clicking on Render Website once you cloned it? Were there any issues with reproducibility?\nProvide constructive feedback on any issues with file and/or code organization.\nWhat have you learned from this team’s project that you are considering implementing in your own project?\n(Optional) Any further comments or feedback?\n\n\n\n\nReview pairings\n\n\n\n\n\n\n  \n  \n    \n      Your team name\n      To review 1\n      To review 2\n    \n  \n  \n    \n      Section 1 - M 10:15 - 11:30 am\n    \n    Alpha equals one\nSeven\nSealteam6\n    2cool4school\nAlpha equals one\nSeven\n    ggplot3\n2cool4school\nAlpha equals one\n    Cuatro\nggplot3\n2cool4school\n    Cinco\nCuatro\nggplot3\n    Sealteam6\nCinco\nCuatro\n    Seven\nSealteam6\nCinco\n    \n      Section 2 - M 1:45 - 3:00 pm\n    \n    Blue Squirrels\nWho's your data?\nSuffer\n    Stats R Us\nBlue Squirrels\nWho's your data?\n    Team300\nStats R Us\nBlue Squirrels\n    geom_slay\nTeam300\nStats R Us\n    Suffer\ngeom_slay\nTeam300\n    Who's your data?\nSuffer\ngeom_slay\n    \n      Section 3 - M 3:30 - 4:45 pm\n    \n    Cool Kids\nSeven Wonders\nMine's Minions\n    Meteors\nCool Kids\nSeven Wonders\n    Green Team\nMeteors\nCool Kids\n    Fantastic Four\nGreen Team\nMeteors\n    Theta-Five\nFantastic Four\nGreen Team\n    Mine's Minions\nTheta-Five\nFantastic Four\n    Seven Wonders\nMine's Minions\nTheta-Five\n    \n      Section 4 - M 5:15 - 6:30 pm\n    \n    Merge Conflicts\ngroup_by(6)\nGit Freaky\n    Quart2\nMerge Conflicts\ngroup_by(6)\n    Git Real\nQuart2\nMerge Conflicts\n    Kameron Krazies\nGit Real\nQuart2\n    Git Freaky\nKameron Krazies\nGit Real\n    group_by(6)\nGit Freaky\nKameron Krazies\n    \n      Section 5 - M 12:00 - 1:15 pm\n    \n    Women in Tech\nSplit Ends\nSuper Raspberries\n    Stats Sisters\nWomen in Tech\nSplit Ends\n    The Outliers\nStats Sisters\nWomen in Tech\n    Duke Data Devils\nThe Outliers\nStats Sisters\n    Super Raspberries\nDuke Data Devils\nThe Outliers\n    Split Ends\nSuper Raspberries\nDuke Data Devils\n  \n  \n  \n\n\n\n\n\n\nGrading\nPeer reviews will be graded on the extent to which it comprehensively and constructively addresses the components of the reviewee’s team’s report.\nOnly the team members participating in the review during the lab session are eligible for points for the peer review. If you’re unable to make it to lab in person, you should arrange to virtually connect with your team during your lab session.\n\n0 points: No peer review\n1 point: Only one peer review issue open, feedback provided is not constructive or actionable\n2 points: Both peer review issues open, feedback provided is not constructive or actionable\n3 points: Both peer review issues open, feedback provided is not sufficiently thorough\n4 points: Both peer review issues open, one of the reviews is not sufficiently thorough\n5 points: Both peer review issues open, both reviews are constructive, actionable, and sufficiently thorough\n\n\n\n\n\n\n\nNote\n\n\n\nThe feedback issue will come from one team member on GitHub since you can’t collectively edit an issue. However it must represent the opinions of the entire team. It is not a single team member’s responsibility to provide feedback, they’re just the record keeper for the team."
  },
  {
    "objectID": "labs/lab-project-draft.html",
    "href": "labs/lab-project-draft.html",
    "title": "Lab - Project draft",
    "section": "",
    "text": "Important\n\n\n\nThe project draft is due Friday, Nov 11, at 11:59pm. No submission on Gradescope needed, just push to GitHub by this time."
  },
  {
    "objectID": "labs/lab-project-draft.html#proposal-feedback-review",
    "href": "labs/lab-project-draft.html#proposal-feedback-review",
    "title": "Lab - Project draft",
    "section": "Proposal feedback review",
    "text": "Proposal feedback review\n\n\n\n\n\n\nImportant\n\n\n\nYou do not need to submit a revised version of your proposal, but if there are issues in your proposal that prevent your project from rendering, you should fix those.\n\n\n\nAs a team, review all feedback left as issues in your GitHub repo.\nEither close the issues on GitHub (by clicking on the Close Issue button) or address them with commits to your project like you learned last week.\nMake decision about which dataset you will use for your project and going forward write up your analysis in report.qmd."
  },
  {
    "objectID": "labs/lab-project-draft.html#project-draft",
    "href": "labs/lab-project-draft.html#project-draft",
    "title": "Lab - Project draft",
    "section": "Project draft",
    "text": "Project draft\n\n\n\n\n\n\nImportant\n\n\n\nYour next project related deadline is Fri, Nov 11 at 11:59pm. Your project draft, written in report.qmd, must be pushed to GitHub by that time. You will lose push access to your repo at that time until your draft has been reviewed. Once again, you will receive feedback as issues on your GitHub repository.\n\n\n\nReview https://sta199-f22-1.github.io/project-description.html#draft for requirements for the project draft.\nStart working on your draft! Make good use of the time with your TA during lab.\nOnce you complete your draft but before you finalize it:\n\nIn report.qmd set echo: false in the YAML of your document. Read through your draft completely and make sure everything makes sense without the code visible, and make any edits as needed. Then, set echo: true again before submitting. (For your draft we want to see your code so we can provide feedback on it. For your final report we will ask you to hide it again.)\nUpdate your index.qmd:\n\nUpdate the title field with your team name.\nAdd your abstract.\n\nUpdate your About page (about.qmd) with information on your team."
  },
  {
    "objectID": "labs/lab-project-draft.html#quarto-options",
    "href": "labs/lab-project-draft.html#quarto-options",
    "title": "Lab - Project draft",
    "section": "Quarto options",
    "text": "Quarto options\n\n\n\n\n\n\nNote\n\n\n\nMuch of what is listed in this section is optional, but we recommend reviewing them as a team and deciding on which ones you want to use/include in your project.\n\n\n\nTheming\nYou can see your deployed project website at the URL listed in your project repo.\n\nYou can pick a theme from https://quarto.org/docs/output-formats/html-themes.html.\nYou can update the theme of your project by changing the theme field in the _quarto.yml file.\nRender the website from the Build tab and commit and push your changes.\n\n\n\nFootnotes\nTo add a footnote, make sure you’re in the Visual editor mode in RStudio and click on Insert > Footnote.1 One you add your footnote, click outside of the footnote area, anywhere else in your document, to go back to editing your document.\n\n\nCross references\nYou can add cross references to your figures and tables so that you can refer to them like “Figure 1 shows that …” or “As seen in Table 1, …” instead of “the figure below” or “the table below”. To do this, you need to label the code chunks for those figures and tables in a special way (with fig- and tbl- suffixes, respectively) and add captions to them.\n\nFigures\nFor example, Figure 1 shows a positive and moderately strong relationship between fuel efficiency of cars (measured as miles/gallon) and their displacement.\n\n```{r}\n#| label: fig-mtcars-plot\n#| fig-cap: \"Fuel efficiency of cars vs. their displacement.\"\n\nggplot(mtcars, aes(x = disp, y = mpg)) +\n  geom_point()\n```\n\n\n\n\nFigure 1: Fuel efficiency of cars vs. their displacement.\n\n\n\n\nWhat you’re not seeing in the text above is that we didn’t type Figure 1 in the text, but instead referenced this figure with @fig-mtcars-plot:\n\nFor example, @fig-mtcars-plot shows a positive and moderately strong relationship between fuel efficiency of cars (measured as miles/gallon) and their displacement.\n\n\n\nTables\nAnd Table 1 shows the output of the linear regression for predicting fuel efficiency from displacement.\nNote that we piped the result of the tidy() function (which outputs a tibble) into the kable() function from the knitr package to turn it into a table. Quarto needs this last step to know that this code chunk produces a table that can be formatted and cross referenced as such.\n\n```{r}\n#| label: tbl-mpg-disp\n#| tbl-cap: \"Linear regression model for predicting fuel efficiency from displacement.\"\n\nlinear_reg() |>\n  fit(mpg ~ disp, data = mtcars) |>\n  tidy() |>\n  knitr::kable()\n```\n\n\n\nTable 1: Linear regression model for predicting fuel efficiency from displacement.\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n29.5998548\n1.2297195\n24.070411\n0\n\n\ndisp\n-0.0412151\n0.0047118\n-8.747151\n0\n\n\n\n\n\n\nOnce again, what you’re not seeing in the text above is that we didn’t type Table 1 in the text, but instead referenced this table with @tbl-mpg-disp.\n\nAnd @tbl-mpg-disp shows the output of the linear regression for predicting fuel efficiency from displacement."
  },
  {
    "objectID": "labs/lab-2.html",
    "href": "labs/lab-2.html",
    "title": "Lab 2 - Data wrangling",
    "section": "",
    "text": "Important\n\n\n\nThis lab is due Friday, Sep 23 at 11:59pm."
  },
  {
    "objectID": "labs/lab-2.html#warm-up",
    "href": "labs/lab-2.html#warm-up",
    "title": "Lab 2 - Data wrangling",
    "section": "Warm up",
    "text": "Warm up\nBefore we introduce the data, let’s warm up with some simple exercises.\n\nUpdate the YAML, changing the author name to your name, and render the document.\nCommit your changes with a meaningful commit message.\nPush your changes to GitHub.\nGo to your repo on GitHub and confirm that your changes are visible in your `.qmd and .pdf files. If anything is missing, render, commit, and push again."
  },
  {
    "objectID": "labs/lab-2.html#packages",
    "href": "labs/lab-2.html#packages",
    "title": "Lab 2 - Data wrangling",
    "section": "Packages",
    "text": "Packages\nWe’ll use the tidyverse package for much of the data wrangling. This package is already installed for you. You can load it by running the following in your Console:\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "labs/lab-2.html#data",
    "href": "labs/lab-2.html#data",
    "title": "Lab 2 - Data wrangling",
    "section": "Data",
    "text": "Data\nThe dataset for this assignment can be found as a CSV (comma separated values) file in the data folder of your repository. You can read it in using the following.\n\nnobel <- read_csv(\"data/nobel.csv\")\n\nThe descriptions of the variables are as follows:\n\nid: ID number\nfirstname: First name of laureate\nsurname: Surname\nyear: Year prize won\ncategory: Category of prize\naffiliation: Affiliation of laureate\ncity: City of laureate in prize year\ncountry: Country of laureate in prize year\nborn_date: Birth date of laureate\ndied_date: Death date of laureate\ngender: Gender of laureate\nborn_city: City where laureate was born\nborn_country: Country where laureate was born\nborn_country_code: Code of country where laureate was born\ndied_city: City where laureate died\ndied_country: Country where laureate died\ndied_country_code: Code of country where laureate died\noverall_motivation: Overall motivation for recognition\nshare: Number of other winners award is shared with\nmotivation: Motivation for recognition\n\nIn a few cases the name of the city/country changed after laureate was given (e.g. in 1975 Bosnia and Herzegovina was called the Socialist Federative Republic of Yugoslavia). In these cases the variables below reflect a different name than their counterparts without the suffix _original.\n\nborn_country_original: Original country where laureate was born\nborn_city_original: Original city where laureate was born\ndied_country_original: Original country where laureate died\ndied_city_original: Original city where laureate died\ncity_original: Original city where laureate lived at the time of winning the award\ncountry_original: Original country where laureate lived at the time of winning the award"
  },
  {
    "objectID": "labs/lab-2.html#get-to-know-your-data",
    "href": "labs/lab-2.html#get-to-know-your-data",
    "title": "Lab 2 - Data wrangling",
    "section": "Get to know your data",
    "text": "Get to know your data\n\nHow many observations and how many variables are in the dataset? Use inline code to answer this question. What does each row represent?\n\nThere are some observations in this dataset that we will exclude from our analysis to match the Buzzfeed results.\n\nCreate a new data frame called nobel_living that filters for\n\n\nlaureates for whom country is available\nlaureates who are people as opposed to organizations (organizations are denoted with \"org\" as their gender)\nlaureates who are still alive (their died_date is NA)\n\n\n\n\nConfirm that once you have filtered for these characteristics you are left with a data frame with 228 observations, once again using inline code."
  },
  {
    "objectID": "labs/lab-2.html#most-living-nobel-laureates-were-based-in-the-us-when-they-won-their-prizes",
    "href": "labs/lab-2.html#most-living-nobel-laureates-were-based-in-the-us-when-they-won-their-prizes",
    "title": "Lab 2 - Data wrangling",
    "section": "Most living Nobel laureates were based in the US when they won their prizes",
    "text": "Most living Nobel laureates were based in the US when they won their prizes\n… says the Buzzfeed article. Let’s see if that’s true.\nFirst, we’ll create a new variable to identify whether the laureate was in the US when they won their prize. We’ll use the mutate() function for this. The following pipeline mutates the nobel_living data frame by adding a new variable called country_us. We use an if statement to create this variable. The first argument in the if_else() function we’re using to write this if statement is the condition we’re testing for. If country is equal to \"USA\", we set country_us to \"USA\". If not, we set the country_us to \"Other\".\n\nnobel_living <- nobel_living |>\n  mutate(\n    country_us = if_else(country == \"USA\", \"USA\", \"Other\")\n  )\n\nNext, we will limit our analysis to only the following categories: Physics, Medicine, Chemistry, and Economics.\n\nnobel_living_science <- nobel_living |>\n  filter(category %in% c(\"Physics\", \"Medicine\", \"Chemistry\", \"Economics\"))\n\nFor the following exercises, work with the nobel_living_science data frame you created above. This means you’ll need to define this data frame in your Quarto document, even though the next exercise doesn’t explicitly ask you to do so.\n\nCreate a faceted bar plot visualizing the relationship between the category of prize and whether the laureate was in the US when they won the nobel prize. Interpret your visualization, and say a few words about whether the Buzzfeed headline is supported by the data.\n\nYour visualization should be faceted by category.\nFor each facet you should have two bars, one for winners in the US and one for Other.\nFlip the coordinates so the bars are horizontal, not vertical.\n\n\n\nNow is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "labs/lab-2.html#but-of-those-us-based-nobel-laureates-many-were-born-in-other-countries",
    "href": "labs/lab-2.html#but-of-those-us-based-nobel-laureates-many-were-born-in-other-countries",
    "title": "Lab 2 - Data wrangling",
    "section": "But of those US-based Nobel laureates, many were born in other countries",
    "text": "But of those US-based Nobel laureates, many were born in other countries\n\nCreate a new variable called born_country_us in nobel_living_science that has the value \"USA\" if the laureate is born in the US, and \"Other\" otherwise. How many of the winners are born in the US?\n\n\n\n\n\n\n\nNote\n\n\n\nYou should be able to cheat borrow from code you used earlier to create the country_us variable.\n\n\n\nAdd a second variable to your visualization from Exercise 3 based on whether the laureate was born in the US or not. Create two visualizations with this new variable added:\n\nPlot 1: Segmented frequency bar plot\nPlot 2: Segmented relative frequency bar plot (Hint: Add position = \"fill\" to geom_bar().)\n\nHere are some instructions that apply to both of these visualizations:\n\nYour final visualization should contain a facet for each category.\nWithin each facet, there should be two bars for whether the laureate won the award in the US or not.\nEach bar should have segments for whether the laureate was born in the US or not.\n\nWhich of these visualizations is a better fit for answering the following question: “Do the data appear to support Buzzfeed’s claim that of those US-based Nobel laureates, many were born in other countries?” First, state which plot you’re using to answer the question. Then, answer the question, explaining your reasoning in 1-2 sentences.\n\n\nNow is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.\n\n\n\nIn a single pipeline, filter the nobel_living_science data frame for laureates who won their prize in the US, but were born outside of the US, and then create a frequency table (with the count() function) for their birth country (born_country) and arrange the resulting data frame in descending order of number of observations for each country. Which country is the most common?\n\n\nNow is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "labs/lab-3.html",
    "href": "labs/lab-3.html",
    "title": "Lab 3 - Data tidying",
    "section": "",
    "text": "Important\n\n\n\nThis lab is due Friday, Sep 30 at 11:59pm."
  },
  {
    "objectID": "labs/lab-3.html#warm-up",
    "href": "labs/lab-3.html#warm-up",
    "title": "Lab 3 - Data tidying",
    "section": "Warm up",
    "text": "Warm up\nBefore we introduce the data, let’s warm up with some simple exercises.\n\nUpdate the YAML, changing the author name to your name, and render the document.\nCommit your changes with a meaningful commit message.\nPush your changes to GitHub.\nGo to your repo on GitHub and confirm that your changes are visible in your `.qmd and .pdf files. If anything is missing, render, commit, and push again."
  },
  {
    "objectID": "labs/lab-3.html#packages",
    "href": "labs/lab-3.html#packages",
    "title": "Lab 3 - Data tidying",
    "section": "Packages",
    "text": "Packages\nWe’ll use the tidyverse package for much of the data wrangling and the scales package for better plot labels. These packages are already installed for you. You can load it by running the following in your Console:\n\nlibrary(tidyverse)\nlibrary(scales)"
  },
  {
    "objectID": "labs/lab-3.html#data",
    "href": "labs/lab-3.html#data",
    "title": "Lab 3 - Data tidying",
    "section": "Data",
    "text": "Data\nThe datasets that you will work with in this dataset come from the Organization for Economic Co-Operation and Development (OECD), stats.oecd.org."
  },
  {
    "objectID": "labs/lab-1.html",
    "href": "labs/lab-1.html",
    "title": "Lab 1 - Data visualization",
    "section": "",
    "text": "Important\n\n\n\nThis lab is due Monday, Jan 30 at 5:00PM ET."
  },
  {
    "objectID": "labs/lab-1.html#packages",
    "href": "labs/lab-1.html#packages",
    "title": "Lab 1 - Data visualization",
    "section": "Packages",
    "text": "Packages\nWe will use the tidyverse package to create and customize plots in R.\n\nlibrary(tidyverse)\nlibrary(viridis)"
  },
  {
    "objectID": "labs/lab-1.html#data-lets-take-a-trip-to-the-midwest",
    "href": "labs/lab-1.html#data-lets-take-a-trip-to-the-midwest",
    "title": "Lab 1 - Data visualization",
    "section": "Data: Let’s take a trip to the Midwest",
    "text": "Data: Let’s take a trip to the Midwest\nThe data in this lab is in the midwest data frame. It is part of the ggplot2 R package, so the midwest data set is automatically loaded when you load the tidyverse package.\nThe data contains demographic characteristics of counties in the Midwest region of the United States.\nBecause the data set is part of the ggplot2 package, you can read documentation for the data set, including variable definitions by typing ?midwest in the console."
  },
  {
    "objectID": "labs/lab-project-proposal.html",
    "href": "labs/lab-project-proposal.html",
    "title": "Lab 3 - Project proposal",
    "section": "",
    "text": "Important\n\n\n\nThis lab is due Friday, Oct 21 at 11:59pm."
  },
  {
    "objectID": "labs/lab-project-proposal.html#why-teams-rationale",
    "href": "labs/lab-project-proposal.html#why-teams-rationale",
    "title": "Lab 3 - Project proposal",
    "section": "Why teams: Rationale",
    "text": "Why teams: Rationale\nIn the real world, data scientists and statisticians often work in research teams. It is a skill to be able to communicate and work together on common projects. Thus, the remaining labs + your project will be team based.\nTeams work better when members have a common understanding of the team’s goals and expectations for collaboration. The purpose of this activity is to help your team making a plan for working together during lab and outside of the scheduled lab time.\nEach team member will have some ideas about how a team should operate. These ideas may be very different. This is your opportunity to share your thoughts and ideas to promote optimal team function and prevent misunderstandings in the future."
  },
  {
    "objectID": "labs/lab-project-proposal.html#team-name",
    "href": "labs/lab-project-proposal.html#team-name",
    "title": "Lab 3 - Project proposal",
    "section": "Team name",
    "text": "Team name\nDiscuss with your group a team name to be called. Your GitHub repos will be created for this team name moving forward. Report your team name to your Lab Leader before moving on."
  },
  {
    "objectID": "labs/lab-project-proposal.html#team-agreement",
    "href": "labs/lab-project-proposal.html#team-agreement",
    "title": "Lab 3 - Project proposal",
    "section": "Team agreement",
    "text": "Team agreement\nDiscuss each of the items below with all team members.\nHave one person act as the recorder and type the team’s decisions in an email.\nBe sure the team agrees on an item before it is recorded.\nOnce the email is complete, the recorder should send it to all team members and cc the lab leader and the course professor (mc301@duke.edu). For the subject line use Team agreement - [TEAM NAME], and replace [TEAM NAME] with your, you guessed it, team name!\nAll team members can refer to this email throughout the semester.\n\nTeam name: The team name you chose, not the code name I gave your team.\nWeekly meetings: Identify a 1 - 2 hour weekly block outside of lab where the team can meet to work on assignments. All team members should block off this time on their calendar in case the group needs to meet to finish lab or work on the project.\nMeeting “location”: How the team will meet to work together (e.g. in-person, Zoom, Facetime, Google Hangouts). Be sure every member is able to access the virtual meeting space, if needed. If you are unable to find a weekly time when the team can meet, briefly outline a plan to work on assignments outside of lab. Otherwise, you can delete this item.\nPrimary method of communication: The team’s primary method of communication outside of meetings (e.g. Slack, text messages, etc.)\nHow should someone notify the other members if they are unable to attend lab or a scheduled team meeting?\nBy when should everyone have their portion of the lab completed Keep in mind your team may want to have time to review the lab before turning it in to make sure it is a cohesive write up.\nAny other items the team would like to discuss or plan."
  },
  {
    "objectID": "labs/lab-project-proposal.html#missing-teammates",
    "href": "labs/lab-project-proposal.html#missing-teammates",
    "title": "Lab 3 - Project proposal",
    "section": "Missing teammates",
    "text": "Missing teammates\nIf you are missing teammates for today’s lab, it is your responsibility to reach out, say hello, and communicate with them that they must contribute to the above and below tasks before the deadline. You can find their email in the teams repo."
  },
  {
    "objectID": "labs/lab-project-proposal.html#resolving",
    "href": "labs/lab-project-proposal.html#resolving",
    "title": "Lab 3 - Project proposal",
    "section": "Resolving",
    "text": "Resolving\nWorking in teams includes using a shared GitHub repo for labs and projects. Sometimes things will go swimmingly, and sometimes you’ll run into merge conflicts.\nWhen you and your teammates work on the lines of code within a document, and both try to push your changes, you will run into issues. Merge conflicts happen when you merge branches that have competing renders, and Git needs your help to decide which changes to incorporate in the final merge.\nOur first task today is to walk you through a merge conflict! First, a bit of Git review:\n\nPushing to a repo replaces the code on GitHub with the code you have on your computer.\nIf a collaborator has made a change to your repo on GitHub that you haven’t incorporated into your local work, GitHub will stop you from pushing to the repo because this could overwrite your collaborator’s work!\nSo you need to explicitly “merge” your collaborator’s work before you can push.\nIf your and your collaborator’s changes are in different files or in different parts of the same file, git merges the work for you automatically when you pull.\nIf you both changed the same part of a file, git will produce a merge conflict because it doesn’t know how which change you want to keep and which change you want to overwrite.\n\nGit will put conflict markers in your code that look like:\n<<<<<<< HEAD \n\nSee also: [dplyr documentation](https://dplyr.tidyverse.org/)   \n\n======= \n\nSee also [ggplot2 documentation](https://ggplot2.tidyverse.org/)  \n\n>>>>>>> some1alpha2numeric3string4\nThe ===s separate your changes (top) from their changes (bottom).\nNote that on top you see the word HEAD, which indicates that these are your changes.\nAnd at the bottom you see some1alpha2numeric3string4 (well, it probably looks more like 28e7b2ceb39972085a0860892062810fb812a08f).\nThis is the hash (a unique identifier) of the render your collaborator made with the conflicting change.\nYour job is to reconcile the changes: edit the file so that it incorporates the best of both versions and delete the <<<, ===, and >>> lines. Then you can stage and render the result."
  },
  {
    "objectID": "labs/lab-project-proposal.html#merge-conflict-activity",
    "href": "labs/lab-project-proposal.html#merge-conflict-activity",
    "title": "Lab 3 - Project proposal",
    "section": "Merge conflict activity",
    "text": "Merge conflict activity\n\nSetup\n\nClone the project repo and open the about.qmd file.\nAssign the numbers 1, 2, 3, 4, and 5 to each of the team members. If your team has fewer than 5 people, some people will need to have multiple numbers.\n\n\n\nLet’s cause a merge conflict!\nOur goal is to see two different types of merges: first we’ll see a type of merge that git can’t figure out on its own how to do on its own (a merge conflict) and requires human intervention, then another type of where that git can figure out how to do without human intervention.\nDoing this will require some tight choreography, so pay attention!\nTake turns in completing the exercise, only one member at a time. Others should just watch, not doing anything on their own projects (this includes not even pulling changes!) until they are instructed to. If you feel like you won’t be able to resist the urge to touch your computer when it’s not your turn, we recommend putting your hands in your pockets or sitting on them!\nBefore starting: Everyone should have the repo cloned and know which role number(s) they are.\nAlso, everyone should go to their Terminal and type git config pull.rebase false to set up their preferences for pulling.\nRole 1:\n\nGo to about.qmd in your project repo. Change the [team name] to your actual team name.\nRender, commit, push.\n\n🛑 Make sure the previous role has finished before moving on to the next step.\nRole 2:\n\nChange the team name to some other word.\nRender, commit, push. You should get an error.\nPull. Take a look at the document with the merge conflict.\nClear the merge conflict by editing the document to choose the correct/preferred change.\nRender.\nClick the Stage checkbox for all files in your Git tab. Make sure they all have check marks, not filled-in boxes.\nCommit and push.\n\n🛑 Make sure the previous role has finished before moving on to the next step.\nRole 3:\n\nChange the a name of the first team member.\nRender, commit, push. You should get an error.\nPull. No merge conflicts should occur, but you should see a message about merging.\nNow push.\n\n🛑 Make sure the previous role has finished before moving on to the next step.\nRole 4:\n\nChange the a name of the first team member to something other than what the previous team member did.\nRender, commit, push. You should get an error.\nPull. Take a look at the document with the merge conflict. Clear the merge conflict by choosing the correct/preferred change. Render, commit, and push.\n\n🛑 Make sure the previous role has finished before moving on to the next step.\nRole 5:\n\nChange the a name of the rest of the team members and add descriptions for each person with the help of your team members. Role 5 should be the only one typing, the others should help verbally.\nRender and commit. Discuss as a team what you expect to happen when you hit push. Should there be a merge conflict error or not?\nIf there is a merge conflict, fix it. If not, push your changes.\n\nEveryone: Pull, and observe the changes in your document."
  },
  {
    "objectID": "labs/lab-project-proposal.html#tips-for-collaborating-via-github",
    "href": "labs/lab-project-proposal.html#tips-for-collaborating-via-github",
    "title": "Lab 3 - Project proposal",
    "section": "Tips for collaborating via GitHub",
    "text": "Tips for collaborating via GitHub\n\nAlways pull first before you start working.\nResolve a merge conflict (render and push) before continuing your work. Never do new work while resolving a merge conflict.\nRender, commit, and push often to minimize merge conflicts and/or to make merge conflicts easier to resolve.\nIf you find yourself in a situation that is difficult to resolve, ask questions ASAP. Don’t let it linger and get bigger."
  },
  {
    "objectID": "labs/lab-0.html",
    "href": "labs/lab-0.html",
    "title": "Lab 0 - Hello R!",
    "section": "",
    "text": "Important\n\n\n\nThis lab is not a part of your grade in this course. You should still submit your completed lab to Gradescope to practice submitting to Gradescope and receive feedback. Since this lab precedes class lecture, you may be unable to complete the lab until next week.\nThis lab will introduce you to the course computing workflow. The main goal is to demo R and RStudio, which we will be using throughout the course both to learn the statistical concepts discussed in the course and to analyze real data and come to informed conclusions.\nAn additional goal is to reinforce Git and GitHub, the collaboration and version control system that we will be using throughout the course.\nAs the labs progress, you are encouraged to explore beyond what the labs dictate; a willingness to experiment will make you a much better programmer. Before we get to that stage, however, you need to build some basic fluency in R. Today we begin with the fundamental building blocks of R and RStudio: the interface, reading in data, and basic commands.\nTo make versioning simpler, this and the next lab are solo labs. In the future, you’ll learn about collaborating on GitHub and producing a single lab report for your lab team, but for now, concentrate on getting the basics down.\nBy the end of the lab, you will…"
  },
  {
    "objectID": "labs/lab-0.html#log-in-to-rstudio",
    "href": "labs/lab-0.html#log-in-to-rstudio",
    "title": "Lab 0 - Hello R!",
    "section": "Log in to RStudio",
    "text": "Log in to RStudio\n\nGo to https://cmgr.oit.duke.edu/containers and login with your Duke NetID and Password.\nClick STA198-199 to log into the Docker container. You should now see the RStudio environment.\n\n\n\n\n\n\n\nWarning\n\n\n\nIf you haven’t yet done so, you will need to reserve a container for STA198-199 first."
  },
  {
    "objectID": "labs/lab-0.html#set-up-your-ssh-key",
    "href": "labs/lab-0.html#set-up-your-ssh-key",
    "title": "Lab 0 - Hello R!",
    "section": "Set up your SSH key",
    "text": "Set up your SSH key\nYou will authenticate GitHub using SSH. Below are an outline of the authentication steps; you are encouraged to follow along as your TA demonstrates the steps.\n\n\n\n\n\n\nNote\n\n\n\nYou only need to do this authentication process one time on a single system.\n\n\n\nType credentials::ssh_setup_github() into your console.\nR will ask “No SSH key found. Generate one now?” You should click 1 for yes.\nYou will generate a key. It will begin with “ssh-rsa….” R will then ask “Would you like to open a browser now?” You should click 1 for yes.\nYou may be asked to provide your GitHub username and password to log into GitHub. After entering this information, you should paste the key in and give it a name. You might name it in a way that indicates where the key will be used, e.g., sta199).\n\nYou can find more detailed instructions here if you’re interested."
  },
  {
    "objectID": "labs/lab-0.html#configure-git",
    "href": "labs/lab-0.html#configure-git",
    "title": "Lab 0 - Hello R!",
    "section": "Configure Git",
    "text": "Configure Git\nThere is one more thing we need to do before getting started on the assignment. Specifically, we need to configure your git so that RStudio can communicate with GitHub. This requires two pieces of information: your name and email address.\nTo do so, you will use the use_git_config() function from the usethis package. (And we also need to install a package called gert just for this step.)\nType the following lines of code in the console in RStudio filling in your name and the email address associated with your GitHub account.\n\ndevtools::install_github(\"r-lib/gert\")\n\nusethis::use_git_config(\n  user.name = \"Your name\", \n  user.email = \"Email associated with your GitHub account\"\n  )\n\nFor example, mine would be\n\ndevtools::install_github(\"r-lib/gert\")\n\nusethis::use_git_config(\n  user.name = \"Alexander Fisher\", \n  user.email = \"alexander.fisher@duke.edu\"\n  )\n\nYou are now ready interact with GitHub via RStudio!"
  },
  {
    "objectID": "labs/lab-0.html#clone-the-repo-start-new-rstudio-project",
    "href": "labs/lab-0.html#clone-the-repo-start-new-rstudio-project",
    "title": "Lab 0 - Hello R!",
    "section": "Clone the repo & start new RStudio project",
    "text": "Clone the repo & start new RStudio project\n\nGo to the course organization at github.com/sta199-sp23-1 organization on GitHub. Click on the repo with the prefix lab-0. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you’ll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ➛ New Project ➛Version Control ➛ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-0-datasaurus.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab."
  },
  {
    "objectID": "labs/lab-0.html#r-and-r-studio",
    "href": "labs/lab-0.html#r-and-r-studio",
    "title": "Lab 0 - Hello R!",
    "section": "R and R Studio",
    "text": "R and R Studio\nBelow are the components of the RStudio IDE.\n\nBelow are the components of a Quarto (.qmd) file."
  },
  {
    "objectID": "labs/lab-0.html#yaml",
    "href": "labs/lab-0.html#yaml",
    "title": "Lab 0 - Hello R!",
    "section": "YAML",
    "text": "YAML\nThe top portion of your R Markdown file (between the three dashed lines) is called YAML. It stands for “YAML Ain’t Markup Language”. It is a human friendly data serialization standard for all programming languages. All you need to know is that this area is called the YAML (we will refer to it as such) and that it contains meta information about your document.\n\n\n\n\n\n\nImportant\n\n\n\nOpen the Quarto (.qmd) file in your project, change the author name to your name, and render the document. Examine the rendered document."
  },
  {
    "objectID": "labs/lab-0.html#committing-changes",
    "href": "labs/lab-0.html#committing-changes",
    "title": "Lab 0 - Hello R!",
    "section": "Committing changes",
    "text": "Committing changes\nNow, go to the Git pane in your RStudio instance. This will be in the top right hand corner in a separate tab.\nIf you have made changes to your Quarto (.qmd) file, you should see it listed here. Click on it to select it in this list and then click on Diff. This shows you the difference between the last committed state of the document and its current state including changes. You should see deletions in red and additions in green.\nIf you’re happy with these changes, we’ll prepare the changes to be pushed to your remote repository. First, stage your changes by checking the appropriate box on the files you want to prepare. Next, write a meaningful commit message (for instance, “updated author name”) in the Commit message box. Finally, click Commit. Note that every commit needs to have a commit message associated with it.\nYou don’t have to commit after every change, as this would get quite tedious. You should commit states that are meaningful to you for inspection, comparison, or restoration.\nIn the first few assignments we will tell you exactly when to commit and in some cases, what commit message to use. As the semester progresses we will let you make these decisions.\nNow let’s make sure all the changes went to GitHub. Go to your GitHub repo and refresh the page. You should see your commit message next to the updated files. If you see this, all your changes are on GitHub and you’re good to go!"
  },
  {
    "objectID": "labs/lab-0.html#push-changes",
    "href": "labs/lab-0.html#push-changes",
    "title": "Lab 0 - Hello R!",
    "section": "Push changes",
    "text": "Push changes\nNow that you have made an update and committed this change, it’s time to push these changes to your repo on GitHub.\nIn order to push your changes to GitHub, you must have staged your commit to be pushed. click on Push."
  },
  {
    "objectID": "labs/lab-0.html#data-visualization-and-summary",
    "href": "labs/lab-0.html#data-visualization-and-summary",
    "title": "Lab 0 - Hello R!",
    "section": "Data visualization and summary",
    "text": "Data visualization and summary\n\nPlot y vs. x for the dino dataset. Then, calculate the correlation coefficient between x and y for this dataset.\n\nBelow is the code you will need to complete this exercise. Basically, the answer is already given, but you need to include relevant bits in your document and successfully render it and view the results.\nStart with the datasaurus_dozen and pipe it into the filter function to filter for observations where dataset == \"dino\". Store the resulting filtered data frame as a new data frame called dino_data.\n\ndino_data <- datasaurus_dozen |>\n  filter(dataset == \"dino\")\n\nThere is a lot going on here, so let’s slow down and unpack it a bit.\nFirst, the pipe operator: |>, takes what comes before it and sends it as the first argument to what comes after it. So here, we’re saying filter the datasaurus_dozen data frame for observations where dataset == \"dino\".\nSecond, the assignment operator: <-, assigns the name dino_data to the filtered data frame.\nNext, we need to visualize these data. We will use the ggplot function for this. Its first argument is the data you’re visualizing. Next we define the aesthetic mappings. In other words, the columns of the data that get mapped to certain aesthetic features of the plot, e.g. the x axis will represent the variable called x and the y axis will represent the variable called y. Then, we add another layer to this plot where we define which geometric shapes we want to use to represent each observation in the data. In this case we want these to be points, hence geom_point.\n\nggplot(data = dino_data, mapping = aes(x = x, y = y)) +\n  geom_point()\n\nFor the second part of this exercise, we need to calculate a summary statistic: the correlation coefficient. Correlation coefficient, often referred to as \\(r\\) in statistics, measures the linear association between two variables. You will see that some of the pairs of variables we plot do not have a linear relationship between them. This is exactly why we want to visualize first: visualize to assess the form of the relationship, and calculate \\(r\\) only if relevant. In this case, calculating a correlation coefficient really doesn’t make sense since the relationship between x and y is definitely not linear (it’s dinosaurial)!\nFor illustrative purposes only, let’s calculate the correlation coefficient between x and y.\n\n\n\n\n\n\nNote\n\n\n\nStart with `dino_data` and calculate a summary statistic that we will call `r` as the `cor`relation between `x` and `y`.\n\n\n\ndino_data |>\n  summarize(r = cor(x, y))\n\n\nThis is a good place to pause, render, and commit changes with the commit message “Added answer for Ex 2.”\nThen, push these changes when you’re done.\n\n\nPlot y vs. x for the circle dataset. You can (and should) reuse code we introduced above, just replace the dataset name with the desired dataset. Then, calculate the correlation coefficient between x and y for this dataset. How does this value compare to the r of dino?\n\n\nThis is another good place to pause, render, and commit changes with the commit message “Added answer for Ex 3.”\nThen, push these changes when you’re done.\n\n\nPlot y vs. x for the star dataset. You can (and should) reuse code we introduced above, just replace the dataset name with the desired dataset. Then, calculate the correlation coefficient between x and y for this dataset. How does this value compare to the r of dino?\n\n\nYou should pause again, render, commit changes with the commit message “Added answer for Ex 4”.\nThen, push.\n\nFinally, let’s plot all datasets at once. In order to do this we will make use of faceting, given by the code below:\n\n\n\n\n\n\nNote\n\n\n\nFacet by the dataset variable, placing the plots in a 3 column grid, and don’t add a legend.\n\n\n\nggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+\n  geom_point()+\n  facet_wrap(~ dataset, ncol = 3) +\n  theme(legend.position = \"none\")\n\nAnd we can use the group_by function to generate all the summary correlation coefficients. We’ll go through these functions next week when we learn about data wrangling.\n\ndatasaurus_dozen |>\n  group_by(dataset) |>\n  summarize(r = cor(x, y)) \n\n\nInclude the faceted plot and the summary of the correlation coefficients in your lab write-up by including relevant code in R chunks (and give them appropriate labels). In the narrative below the code chunks, briefly comment on what you notice about the plots and the correlations between x and y values within each of them (one or two sentences is fine!).\n\nYou’re done with the data analysis exercises, but we’d like to do one more thing to customize the look of the report."
  },
  {
    "objectID": "labs/lab-0.html#resize-your-figures",
    "href": "labs/lab-0.html#resize-your-figures",
    "title": "Lab 0 - Hello R!",
    "section": "Resize your figures",
    "text": "Resize your figures\nWe can customize the output from a particular R chunk by including options in the header that will override any global settings.\n\nIn the R chunks you wrote for Exercises 2-5, customize the settings by modifying the options in the R chunks used to create those figures.\n\nFor Exercises 2, 3, and 4, we want square figures. We can use fig.height and fig.width in the options to adjust the height and width of figures. Modify the chunks in Exercises 2-4 to be as follows:\n\n```{r}\n#| label: ex2-chunk-label\n#| fig-height: 5\n#| fig-width: 5\n\n# Your code that created the figure\n```\n\nFor Exercise 5, modify your figure to have fig-height of 10 and fig-width of 6.\nNow, save and render.\nOnce you’ve created this PDF file, you’re done!\n\nCommit all remaining changes with the commit message “Done with Lab 1!”.\nThen push."
  },
  {
    "objectID": "labs/lab-4.html",
    "href": "labs/lab-4.html",
    "title": "Lab 4 - Probability and Simpson’s Paradox",
    "section": "",
    "text": "Important\n\n\n\nThis lab is due Friday, October 28 at 11:59pm."
  },
  {
    "objectID": "labs/lab-4.html#exercise-1---probability-and-you",
    "href": "labs/lab-4.html#exercise-1---probability-and-you",
    "title": "Lab 4 - Probability and Simpson’s Paradox",
    "section": "Exercise 1 - Probability and you",
    "text": "Exercise 1 - Probability and you\nWe use probabilities all the time when making decisions. As a group, provide two real world examples of when you’ve used probability to make decisions in your every day life. Think critically. Be creative.\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 1 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 2. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document."
  },
  {
    "objectID": "labs/lab-4.html#exercise-2---risk-of-coronary-heart-disease",
    "href": "labs/lab-4.html#exercise-2---risk-of-coronary-heart-disease",
    "title": "Lab 4 - Probability and Simpson’s Paradox",
    "section": "Exercise 2 - Risk of coronary heart disease",
    "text": "Exercise 2 - Risk of coronary heart disease\nThis data set is from an ongoing cardiovascular study on residents of the town of Framingham, Massachusetts. We want to examine the relationship between various health characteristics and the risk of having heart disease.\n\nLoad in the data set called education-disease and answer the following questions below.\nHow many levels of education are there in these data? How many levels of disease are there? Hint: The distinct() function might be helpful.\nConvert the data to a two-way table where each cell is the number of people falling into each combination of Disease and Education. Hint: Use count and pivot_wider. Your answer should be a 4x3 data frame with counts in each cell.\n\nUsing the summary table you created in part (c), answer the remaining questions. You do not have to use R functions for your calculations, you can use R as a calculator using the values from the summary table. Make sure to show your work, i.e., instead of reporting just the final answer, use R to calculate that in a way we can see the counts you’ve used along the way.\n\nWhat is the probability of a random individual being high risk for cardiovascular disease?\nWhat is the probability of a random individual having high school or GED education and not being high risk for cardiovascular disease?\nWhat is the probability that a random individual who is already high risk for cardiovascular disease has a college education?\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 2 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 3. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document."
  },
  {
    "objectID": "labs/lab-4.html#exercise-3---computer-store",
    "href": "labs/lab-4.html#exercise-3---computer-store",
    "title": "Lab 4 - Probability and Simpson’s Paradox",
    "section": "Exercise 3 - Computer store",
    "text": "Exercise 3 - Computer store\nIn a computer store, 30% of the computers in stock are laptops and 70% are desktops. Five percent of the laptops are on sale, while 10% of the desktops are on sale.1\n\nFill in the code below to create a hypothetical two-way table to represent this situation. Assume the total number of computers is 1000.\n\n\ndata <- tibble( \n  type = c(),\n  sale = c(),\n  values = c()\n  )\n\ndata |>\n  pivot_wider( \n    names_from = ...,\n    values_from = ....\n  )\n\n\nCalculate the probability of that a randomly selected computer will be a desktop, given that the computer is on sale.\nIn your own words, explain what this probability means.\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 3 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 4. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document."
  },
  {
    "objectID": "labs/lab-4.html#exercise-4---bike-rentals",
    "href": "labs/lab-4.html#exercise-4---bike-rentals",
    "title": "Lab 4 - Probability and Simpson’s Paradox",
    "section": "Exercise 4 - Bike rentals",
    "text": "Exercise 4 - Bike rentals\nBike sharing systems are new generation of traditional bike rentals where whole process from membership, rental and return back has become automatic. You are tasked to investigate the relationship between the temperature outside and the number of bikes rented in the Washington DC area between the years 2011 and 2022. You will be investigating data for the months June, July, September, and November.2\nBelow is a list of variables and their definitions:\n\n\n\n\n\n\n\nVariable\nDefinition\n\n\n\n\nseason\nNumerical representation of Spring (2), Summer (3), and Fall (4)\n\n\nyear\nNumerical representation of 2011 (0) or 2012 (1)\n\n\nmonth\nMonth in which data were collected\n\n\nholiday\nIndicator variable for whether data were collected on a holiday (1) or not (0)\n\n\nweekday\nNumerical representation of day of week\n\n\ntemp\nTemperature in Celsius\n\n\ncount\nNumber of bike rentals for that day\n\n\n\n\nRead in the data. Then, create a scatter plot that investigates the relationship between the number of bikes rented and the temperature outside. Include a straight line of best fit to help discuss the discovered relationship. Summarize your findings in 2-3 sentences.\nAnother researcher suggests to look at the relationship between bikes rented and temperature by each of the four months of interest. Recreate your plot in part a, and color the points by month. Include a straight line for each of the four months to help discuss each month’s relationship between bikes rented and temperature. In 3-4 sentences, summarize your findings.\n\nPlease watch the following video on Simpson’s Paradox here. After you do, please answer the following questions.\n\nIn your own words, summarize Simpson’s Paradox in 2-3 sentences.\nCompare and contrast your findings from part (a) and part (b). What’s different?\nThink critically about your answer to part d. What other context from this study could be creating this paradox? That is, identify a potential confounding variable in this study. Be sure to justify how your example could be a potential confounding variable by relating it back to both bike rentals and temperature.\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 4 renders, commits, and pushes, all other team members should pull the changes and render the document. Finally, a team member different than the one responsible for typing up responses to Exercise 4 should do the last task outlined below."
  },
  {
    "objectID": "labs/lab-4.html#closing-an-issue-with-a-commit",
    "href": "labs/lab-4.html#closing-an-issue-with-a-commit",
    "title": "Lab 4 - Probability and Simpson’s Paradox",
    "section": "Closing an issue with a commit",
    "text": "Closing an issue with a commit\nGo to your GitHub repository, you will see an issue with the title “Learn to close an issue with a commit”. Your goal is to close this issue with a commit to practice this workflow, which is the workflow you will use when you are addressing feedback on your projects.\n\nGo to the relevant section in your lab .qmd file.\nDelete the sentence that says “Delete me”.\nRender the document.\nCommit your changes from the git tab with the commit message “Delete sentence, closes #1.”\nPush your changes to your repo and observe that the issue is now closed and the commit associated with this move is linked from the issue.\n\nGitHub allows you to close an issue directly with commits if the commit uses one of the following keywords followed bu the issue number (which you can find next to the issue title): close, closes, closed, fix, fixes, fixed, resolve, resolves, and resolved."
  },
  {
    "objectID": "labs/lab-5.html",
    "href": "labs/lab-5.html",
    "title": "Lab 5 - Predicting a numerical outcome",
    "section": "",
    "text": "Important\n\n\n\nThis lab is due Friday, November 4 at 11:59pm."
  },
  {
    "objectID": "labs/lab-5.html#intro",
    "href": "labs/lab-5.html#intro",
    "title": "Lab 5 - Predicting a numerical outcome",
    "section": "Intro",
    "text": "Intro\nParasites can cause infectious disease – but not all animals are affected by the same parasites. Some parasites are present in a multitude of species and others are confined to a single host. It is hypothesized that closely related hosts are more likely to share the same parasites. More specifically, it is thought that closely related hosts will live in similar environments and have similar genetic makeup that coincides with optimal conditions for the same parasite to flourish.\nIn this lab we will see how much evolutionary history predicts parasite similarity."
  },
  {
    "objectID": "labs/lab-5.html#the-data",
    "href": "labs/lab-5.html#the-data",
    "title": "Lab 5 - Predicting a numerical outcome",
    "section": "The Data",
    "text": "The Data\nToday’s dataset comes from an Ecology Letters paper by Cooper at al. (2012) entitled “Phylogenetic host specificity and understanding parasite sharing in primates” located here. The goal of the paper was to identify the ability of evolutionary history and ecological traits to characterize parasite host specificity.\nEach row of the data contains two species, species1 and species2.\nSubsequent columns describe metrics that compare the species:\n\ndivergence_time: how many (millions) of years ago the two species diverged. i.e. how many million years ago they were the same species.\ndistance: geodesic distance between species geographic range centroids (in kilometers)\nBMdiff: difference in body mass between the two species (in grams)\nprecdiff: difference in mean annual precipitation across the two species geographic ranges (mm)\nparsim: a measure of parasite similarity (proportion of parasites shared between species, ranges from 0 to 1.)\n\nThe data are available in parasites.csv in the data folder."
  },
  {
    "objectID": "labs/lab-5.html#packages",
    "href": "labs/lab-5.html#packages",
    "title": "Lab 5 - Predicting a numerical outcome",
    "section": "Packages",
    "text": "Packages\nWe’ll use the tidyverse package for much of the data wrangling and visualization.\n\nlibrary(tidyverse)\nlibrary(tidymodels)"
  },
  {
    "objectID": "labs/lab-5.html#exercises",
    "href": "labs/lab-5.html#exercises",
    "title": "Lab 5 - Predicting a numerical outcome",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nImportant\n\n\n\nPick another member of the team write the answer to Exercise 1. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document.\n\n\nTo get started, load the data and save the data frame as parasites.\n\nLet’s start by examining the relationship between divergence_time and parsim.\n\nBased on the goals of the analysis, what is the response variable?\nVisualize the relationship between the two variables.\nUse the visualization to describe the relationship between the two variables.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 1 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 2. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document.\n\n\n\nNext, we’ll model this relationship.\n\nFit the model and write the estimated regression equation.\nInterpret the slope and the intercept in the context of the data.\nRecreate the visualization from Exercise 1, this time adding a regression line to the visualization.\nWhat do you notice about the prediction (regression) line that may be strange, particularly for very large divergence times?\n\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 2 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 3. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document.\n\n\n\nSince parsim takes values between 0 and 1, we want to transform this variable so that it can range between (−∞,+∞). This will be better suited for fitting a regression model (and interpreting predicted values!)\n\nUsing mutate, create a new variable transformed_parsim that is calculated as log(parsim/(1-parsim)). Add this variable to your data frame. Note: log() in R represents taking the nautral log.\nThen, visualize the relationship between divergence_time and transformed_parsim. Add a regression line to your visualization.\nWrite a 1-2 sentence description of what you observe in the visualization.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 3 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 4. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document.\n\n\n\nWhich variable is the strongest individual predictor of parasite similarity between species? To answer this question, begin by fitting a linear regression model to each pair of variables. Do not report the model outputs in a tidy format but save each one as dt_model, dist_model, BM_model, and prec_model, respectively.\n\ndivergence_time and transformed_parsim\ndistance and transformed_parsim\nBMdiff and transformed_parsim\nprecdiff and transformed_parsim\n\n\nReport the slops for each of these models. Use proper notation.\nTo answer the question of interest, would it be useful to compare the slopes in each model to choose the variable that is the strongest predictor of parasite similarity? Why or why not?\n\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 4 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 5. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document.\n\n\n\nNow, what if calculated \\(R^2\\) to help answer our question? To compare the explanatory power of each individual predictor, we will look at \\(R^2\\) between the models. \\(R^2\\) is a measure of how much of the variability in the response variable is explained by the model.\nAs you may have guessed from the name \\(R^2\\) can be calculated by squaring the correlation when we have a simple linear regression model. The correlation r takes values -1 to 1, therefore, \\(R^2\\) takes values 0 to 1. Intuitively, if r=1 or −1, then \\(R^2\\)=1, indicating the model is a perfect fit for the data. If r≈0 then \\(R^2\\)≈0, indicating the model is a very bad fit for the data.\nYou can calculate \\(R^2\\) using the glance function. For example, you can calculate \\(R^2\\) for dt_model using the code glance(dt_model)$r.squared.\n\nCalculate and report \\(R^2\\) for each model fit in the previous exercise.\nTo answer our question of interest, would it be useful to compare the \\(R^2\\) in each model to choose the variable that is the strongest predictor of parasite similarity? Why or why not?\n\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 5 renders, commits, and pushes, all other team members should pull the changes and render the document. Finally, a team member different than the one responsible for typing up responses to Exercise 5 should do the last task outlined below."
  },
  {
    "objectID": "labs/lab-6.html",
    "href": "labs/lab-6.html",
    "title": "Lab 6 - Prediction and bootstrapping",
    "section": "",
    "text": "Important\n\n\n\nThis lab is due Friday 18th at 11:59pm."
  },
  {
    "objectID": "labs/lab-6.html#exercise-1",
    "href": "labs/lab-6.html#exercise-1",
    "title": "Lab 6 - Prediction and bootstrapping",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\n\n\n\n\nImportant\n\n\n\nPick a member of the team write the answer to Exercise 1. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document.\n\n\n\nCreate a new data frame called gss16_advfront that includes the variables advfront, educ, polviews, and wrkstat. Then, use the drop_na() function to remove rows that contain NAs from this new data frame. Sample code is provided below.\n\n\ngss16_advfront <- gss16 %>%\n  select(___, ___, ___, ___) %>%\n  drop_na()\n\n\nRe-level the advfront variable such that it has two levels: Strongly agree and “Agree\" combined into a new level called Agree and the remaining levels combined into”Not agree\". Then, re-order the levels in the following order: \"Agree\" and \"Not agree\". Finally, count() how many times each new level appears in the advfront variable.\n\nHint: You can do this in various ways. One option is to use the str_detect() function to detect the existence of words. Note that these sometimes show up with lowercase first letters and sometimes with upper case first letters. To detect either in the str_detect() function, you can use [Aa]gree. However, solve the problem however you like, this is just one option!\n\nCombine the levels of the polviews variable such that levels that have the word “liberal” in them are lumped into a level called \"Liberal\" and those that have the word conservative in them are lumped into a level called \"Conservative\". Then, re-order the levels in the following order: \"Conservative\" , \"Moderate\", and \"Liberal\". Finally, count() how many times each new level appears in the polviews variable.\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 1 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 2. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document."
  },
  {
    "objectID": "labs/lab-6.html#exercise-2",
    "href": "labs/lab-6.html#exercise-2",
    "title": "Lab 6 - Prediction and bootstrapping",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\n\n\n\n\nImportant\n\n\n\nPick another member of the team write the answer to Exercise 2. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document.\n\n\n\nSpecify a logistic regression model using “glm” as the engine, that predicts advfront by educ. Name this specification gss16_spec. Report the tidy output below.\nWrite out the estimated model in proper notation.\nUsing your estimated model, predict the probability of agreeing with the following statement: Even if it brings no immediate benefits, scientific research that advances the frontiers of knowledge is necessary and should be supported by the federal government (Agree in advfront) if you have an education of 7 years.\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 2 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 2. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document."
  },
  {
    "objectID": "labs/lab-6.html#exercise-3",
    "href": "labs/lab-6.html#exercise-3",
    "title": "Lab 6 - Prediction and bootstrapping",
    "section": "Exercise 3",
    "text": "Exercise 3\n\n\n\n\n\n\nImportant\n\n\n\nPick another member of the team write the answer to Exercise 3. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document.\n\n\n\nFit a new model that adds the additional explanatory variable of polviews. Report the tidy output below.\nNow, predict the probability of agreeing with the following statement: Even if it brings no immediate benefits, scientific research that advances the frontiers of knowledge is necessary and should be supported by the federal government (Agree in advfront) if you have an education of 7 years and are Conservative.\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 3 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 2. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document."
  },
  {
    "objectID": "labs/lab-6.html#exercise-4",
    "href": "labs/lab-6.html#exercise-4",
    "title": "Lab 6 - Prediction and bootstrapping",
    "section": "Exercise 4",
    "text": "Exercise 4\n\n\n\n\n\n\nImportant\n\n\n\nPick another member of the team write the answer to Exercise 4. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document.\n\n\nIn 2016, the GSS added a new question on harassment at work. The question is phrased as the following.\nOver the past five years, have you been harassed by your superiors or co-workers at your job, for example, have you experienced any bullying, physical or psychological abuse?\nAnswers to this question are stored in the harass5 variable in our data set.\n\nCreate a subset of the data that only contains Yes and No answers for the harassment question. How many responses chose each of these answers?\nDescribe how bootstrapping can be used to estimate the proportion of all Americans who have been harassed by their superiors or co-workers at their job.\nCalculate a 95% bootstrap confidence interval for the proportion of Americans who have been harassed by their superiors or co-workers at their job. Use 1000 iterations when creating your bootstrap distribution. Interpret this interval in context of the data.\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 4 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 2. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document."
  },
  {
    "objectID": "labs/lab-6.html#exercise-5",
    "href": "labs/lab-6.html#exercise-5",
    "title": "Lab 6 - Prediction and bootstrapping",
    "section": "Exercise 5",
    "text": "Exercise 5\n\n\n\n\n\n\nImportant\n\n\n\nPick another member of the team write the answer to Exercise 5. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document.\n\n\n\nWhere was your 95% confidence interval centered? Why does this make sense?\nNow, calculate 90% bootstrap confidence interval for the proportion of Americans who have been harassed by their superiors or co-workers at their job. Report the interval below. Is it wider or more narrow than the 95% confidence interval?\nNow, suppose you created a bootstrap distribution with 50,000 simulations instead of 1,000. What would you expect to change (if anything)?\n\n\nCenter of the CI\nWidth of the CI\n\n\n\n\n\n\n\nImportant\n\n\n\nAfter the team member working on Exercise 5 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 2. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should not touch the document."
  },
  {
    "objectID": "course-links.html",
    "href": "course-links.html",
    "title": "Useful links",
    "section": "",
    "text": "RStudio containers\n🔗 on Duke Container Manager\n\n\n\n\nCourse GitHub organization\n🔗 on GitHub\n\n\nSlack\n🔗 on Slack\n\n\nGradescope\n🔗 on Sakai\n\n\nOffice hours\n🔗 on Google docs\n\n\nTextbooks\n🔗 R for Data Science\n🔗 Introduction to Modern Statistics\n\n\nPackage documentation\n🔗 ggplot2: ggplot2.tidyverse.org\n🔗 dplyr: dplyr.tidyverse.org\n🔗 tidyr: tidyr.tidyverse.org\n🔗 forcats: forcats.tidyverse.org\n🔗 stringr: stringr.tidyverse.org\n🔗 lubridate: lubridate.tidyverse.org\n🔗 readr: readr.tidyverse.org\n🔗 readxl: readxl.tidyverse.org"
  },
  {
    "objectID": "hw/hw-5.html",
    "href": "hw/hw-5.html",
    "title": "HW 5 - Regression + other stories",
    "section": "",
    "text": "Important\n\n\n\nThis homework is due Thursday, Nov 10 at 11:59pm ET.\nHomework assignments are individual, not team based."
  },
  {
    "objectID": "hw/hw-5.html#workflow-formatting",
    "href": "hw/hw-5.html#workflow-formatting",
    "title": "HW 5 - Regression + other stories",
    "section": "Workflow + formatting",
    "text": "Workflow + formatting\n\nUpdate author name on your document.\nLabel all code chunks informatively and concisely.\nFollow the Tidyverse style guide.\nMake at least 3 commits.\nResize figures where needed, avoid tiny or huge plots.\nUse informative labels for plot axes, titles, etc.\nTurn in an organized, well formatted document."
  },
  {
    "objectID": "hw/hw-5.html#packages",
    "href": "hw/hw-5.html#packages",
    "title": "HW 5 - Regression + other stories",
    "section": "Packages",
    "text": "Packages\nWe’ll use the tidyverse for much of the data wrangling and visualization and tidymodels for modeling. In addition, we’ll use the palmerpenguins and gapminder for data.\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(palmerpenguins)\nlibrary(gapminder)"
  },
  {
    "objectID": "hw/hw-5.html#exercise-1---a-work-of-art",
    "href": "hw/hw-5.html#exercise-1---a-work-of-art",
    "title": "HW 5 - Regression + other stories",
    "section": "Exercise 1 - A work of aRt",
    "text": "Exercise 1 - A work of aRt\nYour task is to make the following plot as ugly and as ineffective as possible. Change colors, axes, fonts, theme, or anything else you can think of in the code chunk below. You can also search online for other themes, fonts, etc. that you want to tweak. Try to make it as ugly as possible, the sky is the limit!\nIn 2-3 sentences, explain why the plot you created is ugly (to you, at least) and ineffective.\n\nggplot(\n  penguins, \n  aes(x = flipper_length_mm, y = bill_length_mm, color = species)\n  ) + \n  geom_point()\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "hw/hw-5.html#exercise-2---gdp-vs.-life-expectancy",
    "href": "hw/hw-5.html#exercise-2---gdp-vs.-life-expectancy",
    "title": "HW 5 - Regression + other stories",
    "section": "Exercise 2 - GDP vs. life expectancy",
    "text": "Exercise 2 - GDP vs. life expectancy\nGapminder is a “fact tank” that uses publicly available world data to produce data visualizations and teaching resources on global development. We will use an excerpt of their data to explore relationships among world health metrics across countries and regions between the years 1952 and 2007. The data set is called gapminder, from the gapminder package. A table of variables can be found below.\n\ncountry: The country name\ncontinent: The continent name\nyear: ranges from 1952 to 2007 in increments of 5 years\nlifeExp: life expectancy at birth, in years\npop: population of country\ngdpPercap: GDP per capita (US$, inflation-adjusted)\n\n\nData: For our analysis, we will only be working with data from 2007. Below, filter the data set so only values from the year 2007 are shown. Save this data set as gapminder_07 and use it for the remainder of this exercise and the following.\nVisualization: We are interested in learning more about GDP, and we’ll start with exploring the relationship between life expectancy and GDP. Create two visualizations:\n\nScatter plot of gdpPercap vs. lifeExp.\nScatter plot of gdpPercap_log vs. lifeExp, where gdpPercap_log is a new variable you add to the data set by taking the natural log of gdpPercap.\n\nFirst describe the relationship between each pair of the variables. Then, comment on which relationship would be better modeled using a linear model, and explain your reasoning.\nModel fitting and interpretation:\n\nFit a linear model predicting log gross domestic product from life expectancy. Display the tidy summary.\nInterpret the intercept of the model, making sure that your interpretation is in the units of the original data (not on log scale).\nInterpret the slope of the model, making sure that your interpretation is in the units of the original data (not on log scale).\n\nModel evaluation:\n\nCalculate the R-squared of the model using two methods and confirm that the values match: first method is using glance() and the other method is based on the value of the correlation coefficient between the two variables.\nInterpret R-squared in the context of the data and the research question."
  },
  {
    "objectID": "hw/hw-5.html#exercise-3---gdp-vs.-life-expectancy-continent",
    "href": "hw/hw-5.html#exercise-3---gdp-vs.-life-expectancy-continent",
    "title": "HW 5 - Regression + other stories",
    "section": "Exercise 3 - GDP vs. life expectancy + continent",
    "text": "Exercise 3 - GDP vs. life expectancy + continent\nNext, we want to examine if the relationship between GDP and life expectancy that we observed in the previous exercise holds across all continents in our data. We’ll continue to work with logged GDP (gdpPercap_log) and data from 2007.\n\nJustification: Create a scatter plot of gdpPercap_log vs. lifeExp, where the points are colored by continent. Do you think the trend between gdpPercap_log and lifeExp is different for different continents? Justify your answer with specific features of the plot.\nModel fitting and interpretation:\n\nRegardless of your answer in part (a), fit an additive model (main effects) that predicts gdpPercap_log from life expectancy and continent (with Americas as the baseline level). Display a tidy summary of the model output.\nInterpret the intercept of the model, making sure that your interpretation is in the units of the original data (not on log scale).\nInterpret the slope of the model, making sure that your interpretation is in the units of the original data (not on log scale).\n\nPrediction: Predict the GDP of a country in Asia where the average life expectancy is 70 years old."
  },
  {
    "objectID": "hw/hw-5.html#exercise-4---gdp-vs.-life-expectancy-x-continent",
    "href": "hw/hw-5.html#exercise-4---gdp-vs.-life-expectancy-x-continent",
    "title": "HW 5 - Regression + other stories",
    "section": "Exercise 4 - GDP vs. life expectancy x continent",
    "text": "Exercise 4 - GDP vs. life expectancy x continent\nFinally, we want to examine if the relationship between GDP and life expectancy that we observed in the previous exercise holds across all continents in our data again, this time allowing for different relationships between GDP and life expectancy across continents.. We’ll continue to work with logged GDP (gdpPercap_log) and data from 2007.\n\nModel fitting and interpretation: Fit an interaction model that predicts gdpPercap_log from life expectancy and continent (with Americas as the baseline level). Display a tidy summary of the model output and in 2-3 sentences, explain how this model differs from the additive model.\nEstimated model: Write out the estimated model using proper notation.\nPrediction: Predict the GDP of a country in Asia where the average life expectancy is 70 years old. Is this prediction different from your prediction with the additive model from Exercise 3?\nModel evaluation: Would the R-squared value for this model in exercise 4 be larger or smaller than the R-squared value for the model in exercise 3. Without running any code, please write out and justify your answer."
  },
  {
    "objectID": "hw/hw-5.html#exercise-5---hotel-cancellations",
    "href": "hw/hw-5.html#exercise-5---hotel-cancellations",
    "title": "HW 5 - Regression + other stories",
    "section": "Exercise 5 - Hotel cancellations",
    "text": "Exercise 5 - Hotel cancellations\nFor this exercise, we will explore hotel cancellations. The data describe the demand of two different types of hotels. Each observation represents a hotel booking between July 1, 2015 and August 31, 2017. Some bookings were cancelled (is_canceled = 1) and others were kept, i.e., the guests checked into the hotel (is_canceled = 0). You can view the code book for all variables here.\nThe data can be found in the data folder: hotels.csv. Using these data, we will try to answer the following question:\n\nDo we expect reservations earlier in the month or later in the month to be cancelled?\n\n\nExploration: In a single pipeline, calculate the mean arrival date (arrival_date_day_of_month) for both booking that were cancelled and that were not cancelled.\nJustification: In your own words, explain why we can not fit a linear model to model the relationship between if a hotel reservation was cancelled and the day of month for the booking.\nModel fitting and interpretation:\n\nFit the appropriate model and display a tidy summary of the model output.\nInterpret the slope coefficient in context of the data and the research question.\n\nEstimated model: Write out the estimated model using proper notation.\nPredicted: Calculate the probability that the hotel reservation is cancelled if it the arrival date date is on the 26th of the month. Based on this probability, would you predict this booking would be cancelled or not cancelled. Explain your reasoning for your classification."
  },
  {
    "objectID": "hw/hw-5.html#exercise-6---communicating-statistics",
    "href": "hw/hw-5.html#exercise-6---communicating-statistics",
    "title": "HW 5 - Regression + other stories",
    "section": "Exercise 6 - Communicating statistics",
    "text": "Exercise 6 - Communicating statistics\nCommunication is a critical yet often overlooked part of data science. When we engage with our audience and capture their interest, we can ultimately better communicate what we are trying to share.\nPlease watch the following video: Hans Rosling: 200 years in 4 minutes.\nThen, write a paragraph (4-5 sentences) addressing the following:\n\nWhat did you enjoy about the presentation of data? What did you find interesting\nWere there any aspects of the presentation that were hard to follow? If so, what?\nWhat are your general take-aways from this presentation?\nWhat are your general take-aways from how this presentation was given?"
  },
  {
    "objectID": "hw/hw-5.html#submission",
    "href": "hw/hw-5.html#submission",
    "title": "HW 5 - Regression + other stories",
    "section": "Submission",
    "text": "Submission\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials Duke Net ID and log in using your Net ID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with exercise. All the pages of your homework should be associated with at least one question (i.e., should be “checked”). If you do not do this, you will be subject to lose points on the assignment.\nSelect the first page of your PDF submission to be associated with the “Workflow & formatting” question."
  },
  {
    "objectID": "hw/hw-5.html#grading",
    "href": "hw/hw-5.html#grading",
    "title": "HW 5 - Regression + other stories",
    "section": "Grading",
    "text": "Grading\n\n\n\nComponent\nPoints\n\n\n\n\nEx 1\nTBD\n\n\nEx 2\nTBD\n\n\nEx 3\nTBD\n\n\nEx 4\nTBD\n\n\nEx 5\nTBD\n\n\nEx 6\nTBD\n\n\nWorkflow & formatting\n5\n\n\nTotal\n50\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe “Workflow & formatting” component assesses the reproducible workflow. This includes:\n\nAt least three commits\nLinking HW pages on Gradescope\nFollowing tidyverse code style\nAll code being visible in rendered PDF (no more than 80 characters)\nAppropriate figure sizing, and figures with informative labels and legends"
  },
  {
    "objectID": "hw/hw-4.html",
    "href": "hw/hw-4.html",
    "title": "HW 4 - Scraping + modelling",
    "section": "",
    "text": "Important\n\n\n\nThis homework is due Thursday, Nov 3 at 11:59pm ET.\nHomework assignments are individual, not team based."
  },
  {
    "objectID": "hw/hw-4.html#workflow-formatting",
    "href": "hw/hw-4.html#workflow-formatting",
    "title": "HW 4 - Scraping + modelling",
    "section": "Workflow + formatting",
    "text": "Workflow + formatting\n\nUpdate author name on your document.\nLabel all code chunks informatively and concisely.\nFollow the Tidyverse style guide.\nMake at least 3 commits.\nResize figures where needed, avoid tiny or huge plots.\nUse informative labels for plot axes, titles, etc.\nTurn in an organized, well formatted document."
  },
  {
    "objectID": "hw/hw-4.html#packages",
    "href": "hw/hw-4.html#packages",
    "title": "HW 4 - Scraping + modelling",
    "section": "Packages",
    "text": "Packages\nWe’ll use the tidyverse package for much of the data wrangling and visualization, though you’re welcomed to also load other packages as needed.\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(rvest)\nlibrary(robotstxt)\nlibrary(openintro)"
  },
  {
    "objectID": "hw/hw-4.html#exercise-1---data-scraping",
    "href": "hw/hw-4.html#exercise-1---data-scraping",
    "title": "HW 4 - Scraping + modelling",
    "section": "Exercise 1 - Data Scraping",
    "text": "Exercise 1 - Data Scraping\nPlease justify, using the tools we’ve learning in this course, if you are allowed to scrape data from each of the following websites:\n\nwww.espn.com\ntwitter.com\nwww.rottentomatoes.com"
  },
  {
    "objectID": "hw/hw-4.html#exercise-2---rotten-tomatoes",
    "href": "hw/hw-4.html#exercise-2---rotten-tomatoes",
    "title": "HW 4 - Scraping + modelling",
    "section": "Exercise 2 - Rotten Tomatoes",
    "text": "Exercise 2 - Rotten Tomatoes\nRotten Tomatoes is an American review aggregation website for film. They give percentage scores for movies based on how “good” the movies are. They provide 2 scores:\n\n\n\n\n\n\n\n\nThe audience score, denoted by a popcorn bucket\n\n\n\nThe Tomatometer score represents the percentage of professional critic reviews that are positive for a given film\n\n\n\nWe are going to investigate the relationship between the audience score and Tomatometer score between the Halloween movies. Please visit the following website to view the data we plan to scrape: https://www.rottentomatoes.com/franchise/halloween\n\nUsing Selector Gadget, scrape the tomato_score and audience_score and report the lengths of these vectors (using the length()) function. Hint: Their lengths should be equal.\nNext, run the following code:\n\n\ntitles_years <- page |>\n  html_nodes(\".franchise-media-list__h3\") |>\n  html_text2()\n  \nhalloween <- tibble(title_year = titles_years) |>\n  separate(title_year, into = c(\"title\", \"year\"), sep= \"\\\\(\" )\n\nIn 2-3 sentences, describe what the above code is doing. Make sure to articulate each step of both of the pipelines. Hint: Print out titles_years and halloween to see what these objects look like. This will help figure out what the code is doing. You should also try running each line of the pipeline individually to see their outputs.\n\nAdd the columns tomato_score and audience_score from part (a) to your data frame called halloween that you created in part (b).\nCreate an appropriate plot the assess the relationship between a movie’s audience score and their tomatometer score. In 2-3 sentences, comment on the relationship. Your plot should include appropriate labels."
  },
  {
    "objectID": "hw/hw-4.html#exercise-3---smoking-during-pregnancy---part-1",
    "href": "hw/hw-4.html#exercise-3---smoking-during-pregnancy---part-1",
    "title": "HW 4 - Scraping + modelling",
    "section": "Exercise 3 - Smoking during pregnancy - Part 1",
    "text": "Exercise 3 - Smoking during pregnancy - Part 1\nWe are interested in the impact of smoking during pregnancy. Since it is not possible to run a randomized controlled experiment to investigate this impact, we will instead use a data set has been of interest to medical researchers who are studying the relation between habits and practices of expectant mothers and the birth of their children. This is a random sample of 1,000 cases from a data set released in 2014 by the state of North Carolina. The data set is called births14, and it is included in the openintro package you loaded at the beginning of the assignment.\n\nCreate a version of the births14 data set dropping observations where there are NAs for habit. You can call this version births14_habitgiven.\nPlotting the data is a useful first step because it helps us quickly visualize trends, identify strong associations, and develop research questions. Create an appropriate plot displaying the relationship between weight and habit. In 2-3 sentences, discuss the relationships observed.\nNow, fit a linear model that investigates the relationship between weight and habit. Provide the tidy summary output below.\nWrite the estimated least squares regression line below using proper notation. Hint: If you need to type an equation using proper notation, type your answers in-between $$ and $$. You may use \\hat{example} to put a hat on a character."
  },
  {
    "objectID": "hw/hw-4.html#exercise-4---smoking-during-pregnacy---part-2",
    "href": "hw/hw-4.html#exercise-4---smoking-during-pregnacy---part-2",
    "title": "HW 4 - Scraping + modelling",
    "section": "Exercise 4 - Smoking during pregnacy - Part 2",
    "text": "Exercise 4 - Smoking during pregnacy - Part 2\n\nAnother researcher is interested in assessing the relationship between babies’ weights and mothers’ ages. Fit another linear model to investigate this relationship. Provide the summary output below.\nIn 2-3 sentences, explain how the regression line to model these data is fit, i.e., based on what criteria R determines the regression line.\nInterpret the intercept in the context of the data and the research question. Is the intercept meaningful in this context? Why or why not?\nInterpret the slope in the context of the data and the research question."
  },
  {
    "objectID": "hw/hw-4.html#exercise-5---americas-neighborhood-pollster",
    "href": "hw/hw-4.html#exercise-5---americas-neighborhood-pollster",
    "title": "HW 4 - Scraping + modelling",
    "section": "Exercise 5 - America’s Neighborhood Pollster",
    "text": "Exercise 5 - America’s Neighborhood Pollster\nSurveyUSA interviewed 886 North Carolina adults between Septermber 28, 2022 and October 2, 2022. This research was conducted online among a representative cross section of North Carolina adults, selected at random by Lucid Holdings LLC of New Orleans. We will look at the results from the following question:\n\nAre you optimistic or pessimistic about the economic outlook for your family over the next year?\n\nResponses were broken down into the following categories:\n\n\n\nVariable\nLevels\n\n\n\n\nAge\n18-49; 50+\n\n\nMood\nOptimistic; Pessimistic\n\n\n\n\nOf the 886 responses, 481 were between the ages of 18-49. Of the individuals that are between 18-49, 237 individuals responded that they were pessimistic. Of the individuals that are 50+, 164 claimed to be optimistic. Fill in the code below to create a hypothetical two-way table to represent this situation.\n\n\ndata <- tibble( \n  age = c(),\n  mood = c(),\n  values = ()\n  )\n\ndata |>\n  pivot_wider( \n    names_from = ...,\n    values_from = ...\n  )\n\n\nUsing your table from part (a), calculate the probability that a randomly selected individual is 50+ and is pessimistic.\nUsing your table from part (a), calculate the probability that a randomly selected individual is optimistic.\nUsing your table from part (a), calculate the probability that a randomly selected 18-49 aged individual is optimistic.\nCreate an appropriate visualization to compare the the relationship between age and mood. Your plot should include appropriate labels. Hint: You may have to re manipulate the data into a more usable form."
  },
  {
    "objectID": "hw/hw-4.html#exercise-6---functionalizing-halloween",
    "href": "hw/hw-4.html#exercise-6---functionalizing-halloween",
    "title": "HW 4 - Scraping + modelling",
    "section": "Exercise 6 - Functionalizing Halloween",
    "text": "Exercise 6 - Functionalizing Halloween\nSuppose you have two types of candy to give out on Halloween; Hershey’s bars and Starbursts. The probability that you give a random trick-or-treater who knocks on your door a Hershey’s bar is 0.5. With this information, create a function that chooses for you which type of candy you will give a trick-or-treater that knocks on your door. Your function should take a numerical value as an input and should give the numbers of Hershey’s bars and Starbursts in a 2x2 tibble with columns candy and n as an output.\nFor example, if you want to select candies for 3 trick or treaters, it might look something like this:\n\ntrick_or_treat(3)\n\nAnd the result might look something like this:\n\n# A tibble: 2 × 2\n  candy             n\n  <chr>         <int>\n1 Hershey's bar     2\n2 Starburst         1\n\nYour function should be able to display a table of counts for Hershey’s bars or Starbursts for any amount of people you expect to see on Halloween.\nWrite this function and test it with 15, 100, and 200 as inputs. You will note that every time you render your document the results will change. This is expected as you’re randomly sampling. (And later on in the course we’ll talk about how to make these numbers not change every time you render, for reproducibility!)\nTo create and test your function, please fill in the ___ below.\nHint: Think about what varies in your function as you define your input.\n\ntrick_or_treat <- function(___){ # input\n  candy_types <- c(\"___\", \"___\") # types of candy\n  tibble(candy = sample(___, size = ___, replace = ___)) |>\n    ___(___)\n}\n\ntrick_or_treat(___)\n\ntrick_or_treat(___)\n\ntrick_or_treat(___)"
  },
  {
    "objectID": "hw/hw-4.html#submission",
    "href": "hw/hw-4.html#submission",
    "title": "HW 4 - Scraping + modelling",
    "section": "Submission",
    "text": "Submission\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials Duke Net ID and log in using your Net ID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with exercise. All the pages of your homework should be associated with at least one question (i.e., should be “checked”). If you do not do this, you will be subject to lose points on the assignment.\nSelect the first page of your PDF submission to be associated with the “Workflow & formatting” question."
  },
  {
    "objectID": "hw/hw-4.html#grading",
    "href": "hw/hw-4.html#grading",
    "title": "HW 4 - Scraping + modelling",
    "section": "Grading",
    "text": "Grading\n\n\n\nComponent\nPoints\n\n\n\n\nEx 1\n6\n\n\nEx 2\n9\n\n\nEx 3\n8\n\n\nEx 4\n8\n\n\nEx 5\n9\n\n\nEx 6\n5\n\n\nWorkflow & formatting\n5\n\n\nTotal\n50\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe “Workflow & formatting” component assesses the reproducible workflow. This includes:\n\nAt least three commits\nLinking HW pages on Gradescope\nFollowing tidyverse code style\nAll code being visible in rendered PDF (no more than 80 characters)\nAppropriate figure sizing, and figures with informative labels and legends"
  },
  {
    "objectID": "hw/hw-6.html",
    "href": "hw/hw-6.html",
    "title": "HW 6 - Statistics experience",
    "section": "",
    "text": "Important\n\n\n\nThis homework is due Friday, Dec 9 at 11:59pm ET.\nHomework assignments are individual, not team based.\nThere is no GitHub repo for this assignment, see below for slide format.\nThe world of statistics and data science is vast and continually growing! The goal of the statistics experience assignments is to help you engage with the statistics and data science communities outside of the classroom.\nYou may submit the statistics experience assignment anytime between now and the deadline.\nEach experience has two parts:\n1️⃣ Have a statistics experience\n2️⃣ Make a slide summarizing on your experience\nYou must complete both parts to receive credit."
  },
  {
    "objectID": "hw/hw-6.html#part-1-experience-statistics-outside-of-the-classroom",
    "href": "hw/hw-6.html#part-1-experience-statistics-outside-of-the-classroom",
    "title": "HW 6 - Statistics experience",
    "section": "Part 1: Experience statistics outside of the classroom",
    "text": "Part 1: Experience statistics outside of the classroom\nComplete an activity in one of the categories below. Under each category are suggested activities. You do not have to do one these suggested activities. You are welcome to find other activities as long as they are related to statistics/data science and they fit in one of the six categories. If there is an activity you’d like to do but you’re not sure if it qualifies for the statistics experience, just ask!\n\nCategory 1: Attend a talk or conference\nAttend an talk, panel, or conference related to statistics or data science. If you are attending a single talk or panel, it must be at least 30 minutes to count towards the statistics experience. The event can be in-person or online.\n\n\nCategory 2: Talk with a statistician/ data scientist\nTalk with someone who uses statistics in their daily work. This could include a professor, professional in industry, graduate student, etc.\n\n\nCategory 3: Listen to a podcast / watch video\nListen to a podcast or watch a video about statistics and data science. The podcast or video must be at least 30 minutes to count towards the statistics experience. A few suggestions are below:\n\nrstudio::conf 2022 talks\nrstudio::global 2021 talks\nrstudio::conf 2020 talks\nStats + Stories Podcast\nCausal Inference Podcast\nFiveThirtyEight Model Talk\n\nThis list is not exhaustive. You may listen to other podcasts or watch other statistics/data science videos not included on this list. Ask your professor if you are unsure whether a particular podcast or video will count towards the statistics experience.\n\n\nCategory 4: Participate in a data science competition or challenge\nParticipate in a statistics or data science competition. You can participate individually or with a team.\n\n\nCategory 5: Read a book on statistics/data science\nThere are a lot of books about statistics, data science, and related topics. A few suggestions are below. If you decide to read a book that isn’t on this list, ask your professor to make sure it counts toward the experience. Many of these books are available through Duke library.\n\nWeapons of Math Destruction by Cathy O’Neil\nHow Charts Lie: Getting Smarter about Visual Information by Alberto Cairo\nThe Theory that Would Not Die by Sharon Bertsch McGrayne\nThe Art of Statistics: How to learn from data by David Spiegelhalter\nThe Signal and the Noise: Why so many predictions fail - but some don’t by Nate Silver\nHow Charts Lie by Alberto Cairo\nList of books about data science ethics\n\n\n\nCategory 6: TidyTuesday\nYou may also participate in a TidyTuesday challenge. New data sets are announced on Monday afternoons.You can find more information about TidyTuesday and see the data in the TidyTuesday GitHub repo.\nA few guidelines:\n✅ Create a GitHub repo for your TidyTuesday submission. Your repo should include\n\nThe R Markdown file with all the code needed to reproduce your visualization.\nA README that includes an image of your final visualization and a short summary (~ 1 paragraph) about your visualization.\n\n✅ The visualization should include features or customization that are beyond what we’ve done in class .\n✅ Include the link to your GitHub repo in the slide summarizing your experience.\n\n\nCategory 7: Coding out loud\nWatch an episode of Coding out loud (either live or pre-recorded) and work through the project.\nA few guidelines:\n✅ Create a GitHub repo for your Coding out loud submission. Your repo should include\n\nThe Quarto file with all the code needed to reproduce your visualization.\nA README that includes an image of your final visualization and a short summary (~ 1 paragraph) about your visualization.\n\n✅ The final product (visualization, table, etc.) should include features or customization that are beyond what was achieved in the Coding out loud episode.\n✅ Include the link to your GitHub repo in the slide summarizing your experience."
  },
  {
    "objectID": "hw/hw-6.html#part-2-summarize-your-experience",
    "href": "hw/hw-6.html#part-2-summarize-your-experience",
    "title": "HW 6 - Statistics experience",
    "section": "Part 2: Summarize your experience",
    "text": "Part 2: Summarize your experience\nMake one slide summarizing your experience. Submit the slide as a PDF on Gradescope.\nInclude the following on your slide:\n\nName and brief description of the event/podcast/competition/etc.\nSomething you found new, interesting, or unexpected\nHow the event/podcast/competition/etc. connects to something we’ve done in class.\nCitation or link to web page for event/competition/etc.\n\nClick here to see a template to help you get started on your slide. Your slide does not have to follow this exact format; it just needs to include the information mentioned above and be easily readable (i.e. use a reasonable font size!). Creativity is encouraged!"
  },
  {
    "objectID": "hw/hw-6.html#submission",
    "href": "hw/hw-6.html#submission",
    "title": "HW 6 - Statistics experience",
    "section": "Submission",
    "text": "Submission\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials Duke Net ID and log in using your Net ID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with exercise. All the pages of your homework should be associated with at least one question (i.e., should be “checked”). If you do not do this, you will be subject to lose points on the assignment.\nSelect the first page of your PDF submission to be associated with the “Workflow & formatting” question."
  },
  {
    "objectID": "hw/hw-6.html#grading",
    "href": "hw/hw-6.html#grading",
    "title": "HW 6 - Statistics experience",
    "section": "Grading",
    "text": "Grading\nThis assignment will be graded out of 50 points, based on the quality and depth of your writing."
  },
  {
    "objectID": "hw/hw-3.html",
    "href": "hw/hw-3.html",
    "title": "HW 3 - Ethics + recap",
    "section": "",
    "text": "Important\n\n\n\nThis homework is due Thursday, Oct 13 at 11:59pm ET."
  },
  {
    "objectID": "hw/hw-3.html#workflow-formatting",
    "href": "hw/hw-3.html#workflow-formatting",
    "title": "HW 3 - Ethics + recap",
    "section": "Workflow + formatting",
    "text": "Workflow + formatting\nMake sure to\n\nUpdate author name on your document.\nLabel all code chunks informatively and concisely.\nFollow the Tidyverse style guide.\nMake at least 3 commits.\nResize figures where needed, avoid tiny or huge plots.\nUse informative labels for plot axes, titles, etc.\nTurn in an organized, well formatted document."
  },
  {
    "objectID": "hw/hw-3.html#packages",
    "href": "hw/hw-3.html#packages",
    "title": "HW 3 - Ethics + recap",
    "section": "Packages",
    "text": "Packages\nWe’ll use the tidyverse package for much of the data wrangling and visualization, though you’re welcomed to also load other packages as needed.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "hw/hw-3.html#exercise-1",
    "href": "hw/hw-3.html#exercise-1",
    "title": "HW 3 - Ethics + recap",
    "section": "Exercise 1",
    "text": "Exercise 1\nAll about Quarto:\n\nFor each of the character strings below, determine if the string is an proper code chunk label to use in a document when rendering to PDF. If not, explain why. You’re welcomed to try them out to check.\n\nChunk 1:\n\n\n#| label: label with spaces\n\nChunk 2:\n\n\n#| label: reaaaaaaaaaalllllllllyyyyy-long-label \n#|        with-line-breaks\n\nChunk 3:\n\n\n#| label: 1-label-starting-with-number\n\nChunk 4:\n\n\n#| label: label-with-dashes\nWhat values does each of the following chunk options take and what do they do?\n\neval\nerror\nwarning\necho\n\nWhat do the chunk options fig-height and fig-width do – what do they do when they’re set in a single code chunk and what do they do when they’re set in the document YAML on top?"
  },
  {
    "objectID": "hw/hw-3.html#exercise-2",
    "href": "hw/hw-3.html#exercise-2",
    "title": "HW 3 - Ethics + recap",
    "section": "Exercise 2",
    "text": "Exercise 2\nAll about group_by():\nSuppose we have the following tiny data frame:\n\ndf <- tibble(\n  x = 1:5,\n  y = c(\"a\", \"b\", \"a\", \"a\", \"b\"),\n  z = c(\"K\", \"K\", \"L\", \"L\", \"K\")\n)\ndf\n\n# A tibble: 5 × 3\n      x y     z    \n  <int> <chr> <chr>\n1     1 a     K    \n2     2 b     K    \n3     3 a     L    \n4     4 a     L    \n5     5 b     K    \n\n\na. What does the following code chunk do? Run it and analyze the result and articulate in words what group_by() does.\n\ndf |>\n  group_by(y)\n\nb. What does the following code chunk do? Run it and analyze the result and articulate in words what arrange() does. Also comment on how it’s different from the group_by() in part (a)?\n\ndf |>\n  arrange(y)\n\nc. What does the following code chunk do? Run it and analyze the result and articulate in words what the pipeline does.\n\ndf |>\n  group_by(y) |>\n  summarize(mean_x = mean(x))\n\nd. What does the following code chunk do? Run it and analyze the result and articulate in words what the pipeline does. Then, comment on what the message says.\n\ndf |>\n  group_by(y, z) |>\n  summarize(mean_x = mean(x))\n\ne. What does the following code chunk do? Run it and analyze the result and articulate in words what the pipeline does. How is the output different from the one in part (d).\n\ndf |>\n  group_by(y, z) |>\n  summarize(mean_x = mean(x), .groups = \"drop\")\n\nf. What do the following pipelines do? Run both and analyze their results and articulate in words what each pipeline does. How are the outputs of the two pipelines different?\n\ndf |>\n  group_by(y, z) |>\n  summarize(mean_x = mean(x))\n\ndf |>\n  group_by(y, z) |>\n  mutate(mean_x = mean(x))\n\n\n\nRender, commit (with a descriptive and concise commit message), and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "hw/hw-3.html#exercise-3",
    "href": "hw/hw-3.html#exercise-3",
    "title": "HW 3 - Ethics + recap",
    "section": "Exercise 3",
    "text": "Exercise 3\nThe following chart was shared by @GraphCrimes on Twitter on September 3, 2022.\n\n\n\n\n\n\nWhat is misleading about this graph?\nSuppose you wanted to recreate this plot, with improvements to avoid its misleading pitfalls from part (a). You would obviously need the data from the survey in order to be able to do that. How many observations would this data have? How many variables (at least) should it have, and what should those variables be?\nLoad the data for this survey from data/survation.csv. Confirm that the data match the percentages from the visualization. That is, calculate the percentages of public sector, private sector, don’t know for each of the services and check that they match the percentages from the plot.\nRecreate the visualization, and improve it. You only need to submit the improved version, not a recreation of the misleading graph exactly. Does the improved visualization look different than the original? Does it send a different message at a first glance?"
  },
  {
    "objectID": "hw/hw-3.html#exercise-4",
    "href": "hw/hw-3.html#exercise-4",
    "title": "HW 3 - Ethics + recap",
    "section": "Exercise 4",
    "text": "Exercise 4\nA data scientist compiled data from several public sources (voter registration, political contributions, tax records) that were used to predict sexual orientation of individuals in a community. What ethical considerations arise that should guide use of such data sets?1\n\n\nOnce again, render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "hw/hw-3.html#exercise-5",
    "href": "hw/hw-3.html#exercise-5",
    "title": "HW 3 - Ethics + recap",
    "section": "Exercise 5",
    "text": "Exercise 5\nA data analyst received permission to post a data set that was scraped from a social media site. The full data set included name, screen name, email address, geographic location, IP (internet protocol) address, demographic profiles, and preferences for relationships. Why might it be problematic to post a deidentified form of this data set where name and email address were removed?2"
  },
  {
    "objectID": "hw/hw-3.html#exercise-6",
    "href": "hw/hw-3.html#exercise-6",
    "title": "HW 3 - Ethics + recap",
    "section": "Exercise 6",
    "text": "Exercise 6\nTo complete this exercise you will first need to watch the documentary Coded Bias. To do so, you either need to be on the Duke network or connected to the Duke VPN. Then go to https://find.library.duke.edu/catalog/DUKE009834953 and click on “View Online”. Once you watch the video, write a one paragraph reflection highlighting at least one thing that you already knew about (from the course prep materials) and at least one thing you learned from the movie as well as any other aspects of the documentary that you found interesting / enlightening.\n\n\nRender, commit, and push one last time. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "hw/hw-3.html#submission",
    "href": "hw/hw-3.html#submission",
    "title": "HW 3 - Ethics + recap",
    "section": "Submission",
    "text": "Submission\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials Duke Net ID and log in using your Net ID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with exercise. All the pages of your homework should be associated with at least one question (i.e., should be “checked”). If you do not do this, you will be subject to lose points on the assignment.\nSelect the first page of your PDF submission to be associated with the “Workflow & formatting” question."
  },
  {
    "objectID": "hw/hw-3.html#grading",
    "href": "hw/hw-3.html#grading",
    "title": "HW 3 - Ethics + recap",
    "section": "Grading",
    "text": "Grading\n\nExercise 1: 10 points\nExercise 2: 10 points\nExercise 3: 10 points\nExercise 4: 3 points\nExercise 5: 3 points\nExercise 6: 10 points\nWorkflow + formatting: 4 points\nTotal: 50 points"
  },
  {
    "objectID": "hw/hw-2.html",
    "href": "hw/hw-2.html",
    "title": "HW 2 - Data wrangling",
    "section": "",
    "text": "Important\n\n\n\nThis homework is due Thursday, Sep 22 at 11:59pm ET.\nThe first step in the process of turning information into knowledge process is to summarize and describe the raw information - the data. In this assignment we explore data on college majors and earnings, specifically the data begin the FiveThirtyEight story “The Economic Guide To Picking A College Major”.\nThese data originally come from the American Community Survey (ACS) 2010-2012 Public Use Microdata Series. While this is outside the scope of this assignment, if you are curious about how raw data from the ACS were cleaned and prepared, see the code FiveThirtyEight authors used.\nWe should also note that there are many considerations that go into picking a major. Earnings potential and employment prospects are two of them, and they are important, but they don’t tell the whole story. Keep this in mind as you analyze the data."
  },
  {
    "objectID": "hw/hw-2.html#workflow-formatting",
    "href": "hw/hw-2.html#workflow-formatting",
    "title": "HW 2 - Data wrangling",
    "section": "Workflow + formatting",
    "text": "Workflow + formatting\nMake sure to\n\nUpdate author name on your document.\nLabel all code chunks informatively and concisely.\nFollow the Tidyverse code style guidelines.\nMake at least 3 commits.\nResize figures where needed, avoid tiny or huge plots.\nUse informative labels for plot axes, titles, etc.\nTurn in an organized, well formatted document."
  },
  {
    "objectID": "hw/hw-2.html#packages",
    "href": "hw/hw-2.html#packages",
    "title": "HW 2 - Data wrangling",
    "section": "Packages",
    "text": "Packages\nWe’ll use the tidyverse package for much of the data wrangling and visualization and the scales package for better formatting of labels on visualizations.\n\nlibrary(tidyverse)\nlibrary(scales)"
  },
  {
    "objectID": "hw/hw-2.html#data",
    "href": "hw/hw-2.html#data",
    "title": "HW 2 - Data wrangling",
    "section": "Data",
    "text": "Data\nThe data originally come from the fivethirtyeight package but we’ll use versions of the data that have been slightly modified to better suit this assignment. You can load the two datasets we’ll be using for this analysis with the following:\n\nmajor_income_undergrad <- read_csv(\"data/major_income_undergrad.csv\")\nmajor_income_grad <- read_csv(\"data/major_income_grad.csv\")\n\nYou can also take a quick peek at your data frames and view their dimensions with the glimpse function.\n\nglimpse(major_income_undergrad)\n\nRows: 172\nColumns: 12\n$ major_code                            <dbl> 5601, 6004, 6211, 2201, 2001, 32…\n$ major                                 <chr> \"Construction Services\", \"Commer…\n$ major_category                        <chr> \"Industrial Arts & Consumer Serv…\n$ undergrad_total                       <dbl> 86062, 461977, 179335, 37575, 53…\n$ undergrad_employed                    <dbl> 73607, 347166, 145597, 29738, 43…\n$ undergrad_employed_fulltime_yearround <dbl> 62435, 250596, 113579, 23249, 34…\n$ undergrad_unemployed                  <dbl> 3928, 25484, 7409, 1661, 3389, 5…\n$ undergrad_unemployment_rate           <dbl> 0.05066099, 0.06838588, 0.048422…\n$ undergrad_p25th                       <dbl> 47000, 34000, 35000, 29000, 3600…\n$ undergrad_median                      <dbl> 65000, 48000, 50000, 41600, 5200…\n$ undergrad_p75th                       <dbl> 98000, 71000, 75000, 60000, 7800…\n$ undergrad_sharewomen                  <dbl> 0.09071251, 0.69036529, 0.651659…\n\nglimpse(major_income_grad)\n\nRows: 172\nColumns: 11\n$ major_code                       <dbl> 5601, 6004, 6211, 2201, 2001, 6206, 1…\n$ major                            <chr> \"Construction Services\", \"Commercial …\n$ major_category                   <chr> \"Industrial Arts & Consumer Services\"…\n$ grad_total                       <dbl> 9173, 53864, 24417, 5411, 9109, 19099…\n$ grad_employed                    <dbl> 7098, 40492, 18368, 3590, 7512, 15157…\n$ grad_employed_fulltime_yearround <dbl> 6511, 29553, 14784, 2701, 5622, 12304…\n$ grad_unemployed                  <dbl> 681, 2482, 1465, 316, 466, 8324, 473,…\n$ grad_unemployment_rate           <dbl> 0.08754339, 0.05775585, 0.07386679, 0…\n$ grad_p25th                       <dbl> 110000, 89000, 100000, 85000, 83700, …\n$ grad_median                      <dbl> 75000, 60000, 65000, 47000, 57000, 80…\n$ grad_p75th                       <dbl> 53000, 40000, 45000, 24500, 40600, 50…\n\n\nThese two datasets have a trove of information. Three variables are common to both datasets:\n\nmajor_code: Major code, FO1DP in ACS PUMS\nmajor: Major description\nmajor_category: Category of major from Carnevale et al\n\nThe remaining variables start with either grad_ or undergrad_ suffix, depending on which dataset they are in. The descriptions of these variables is as follows.\n\n*_total: Total number of people with major\n*_sample_size: Sample size (unweighted) of full-time, year-round ONLY (used for earnings)\n*_employed: Number employed (ESR == 1 or 2)\n*_employed_fulltime_yearround: Employed at least 50 weeks (WKW == 1) and at least 35 hours (WKHP >= 35)\n*_unemployed: Number unemployed (ESR == 3)\n*_unemployment_rate: Unemployed / (Unemployed + Employed)\n*_p25th: 25th percentile of earnings\n*_median: Median earnings of full-time, year-round workers\n*_p75th: 75th percentile of earnings\n\nFinally, undergrad_sharewomen is the proportion of women with the major, and we only have this information for undergraduates.\nLet’s think about some questions we might want to answer with these data:\n\nWhich major has the lowest unemployment rate?\nWhich major has the highest percentage of women?\nHow do the distributions of median income compare across major categories?\nHow much are college graduates (those who finished undergrad) making?\nHow do incomes of those with a graduate degree compare to those with an undergraduate degree?\n\nIn the following exercises we aim to answer these questions."
  },
  {
    "objectID": "hw/hw-2.html#exercise-1",
    "href": "hw/hw-2.html#exercise-1",
    "title": "HW 2 - Data wrangling",
    "section": "Exercise 1",
    "text": "Exercise 1\nWhich majors have the lowest unemployment rate? Answer the question using a single data wrangling pipeline and focusing on undergraduates (major_income_undergrad). The output should be a tibble with the columns major, and undergrad_unemployment_rate, with the major with the lowest unemployment rate on top, and displaying the majors with the lowest 5 unemployment rates. Include a sentence listing the majors and the unemployment rates (as percentages)."
  },
  {
    "objectID": "hw/hw-2.html#exercise-2",
    "href": "hw/hw-2.html#exercise-2",
    "title": "HW 2 - Data wrangling",
    "section": "Exercise 2",
    "text": "Exercise 2\nWhich majors have the highest percentage of women? Answer the question using a single data wrangling pipeline and focusing on undergraduates (major_income_undergrad). The output should be a tibble with the columns major, and undergrad_sharewomen, with the major with the highest proportion of women on top, and displaying the majors with the highest 5 proportions of women. Include a sentence listing the majors and the percentage of women with the major.\n\n\nRender, commit (with a descriptive and concise commit message), and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "hw/hw-2.html#exercise-3",
    "href": "hw/hw-2.html#exercise-3",
    "title": "HW 2 - Data wrangling",
    "section": "Exercise 3",
    "text": "Exercise 3\nHow much are college graduates (those who finished undergrad) making? For this exercise, focus on undergraduates (major_income_undergrad).\n\nPlot the distribution of all median incomes using a histogram with an appropriate binwidth.\nCalculate the mean and median for median income. Based on the shape of the histogram, determine which of these summary statistics is useful for describing the distribution.\nDescribe the distribution of median incomes of college graduates across various majors based on your histogram from part (a) and incorporating the statistic you chose in part (b) to help your narrative. Hint: Mention shape, center, spread, any unusual observations.\n\n\n\nNow is a good time to render, commit (with a descriptive and concise commit message), and push again. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "hw/hw-2.html#exercise-4",
    "href": "hw/hw-2.html#exercise-4",
    "title": "HW 2 - Data wrangling",
    "section": "Exercise 4",
    "text": "Exercise 4\nHow do the distributions of median income compare across major categories? For this exercise, focus on undergraduates (major_income_undergrad).\n\nCalculate a the minimum, median, and maximum median income per major category as well as the number of majors in each category. Your summary statistics should be in decreasing order of median median income.\nCreate box plots of the distribution of median income by major category.\n\nThe variable major_category should be on the y-axis and undergrad_median on the x-axis.\nThe order of the boxes in your plot should match the order in your summary table from part (a).\nUse color to enhance your plot, and turn off any legends providing redundant information.\nStyle the x-axis labels such that the values are shown in thousands, e.g., 20000 should show up as $20K.\n\nIn 1-2 sentences, describe how median incomes across various major categories compare. Your description should also touch on where your own intended/declared major (yes, your major at Duke).\n\n\n\nOnce again, render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "hw/hw-2.html#exercise-5",
    "href": "hw/hw-2.html#exercise-5",
    "title": "HW 2 - Data wrangling",
    "section": "Exercise 5",
    "text": "Exercise 5\nOne of the sections of the FiveThirtyEight story is “All STEM fields aren’t the same”. Let’s see if this is true. Once again, focus on undergraduates (major_income_undergrad) for this exercise.\n\nFirst, let’s create a new vector called stem_categories that lists the major categories that are considered STEM fields.\n\nstem_categories <- c(\n  \"Biology & Life Science\",\n  \"Computers & Mathematics\",\n  \"Engineering\",\n  \"Physical Sciences\"\n  )\n\nThen, fill in the partial code to create a new variable in our data frame indicating whether a major is STEM or not. Note that you need to figure out the logical operator that goes into ___. Double check that you have successfully created this variable by selecting the variables major_type and major_category.\n\nmajor_income_undergrad <- major_income_undergrad |>\n  mutate(major_type = if_else(major_category ___ stem_categories, \"STEM\", \"Not STEM\"))\n\nIn a single pipeline, determine which STEM majors’ median earnings are less than $55,000. Your answer should be a tibble with the columns major, major_type, and undergrad_median, arranged in order of descending undergrad_median.\n\n\n\nOnce again, render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "hw/hw-2.html#exercise-6",
    "href": "hw/hw-2.html#exercise-6",
    "title": "HW 2 - Data wrangling",
    "section": "Exercise 6",
    "text": "Exercise 6\nFinally, we want to compare median incomes of STEM majors with and without a graduate degree in their major.\n\nTo do so, we will first join data that contains information on median incomes of those with undergraduate and graduate degrees. Join the major_income_undergrad and the major_income_grad data sets by major_code. Join them in such a way where only rows that include the same major_code from each data set are included. Name the new data set major_income.\nCreate a new variable called grad_multiplier – the ratio of median income of those with a graduate degree divided by median income of those with an undergraduate degree, for STEM majors. The result should be tibble with the variables major, grad_multiplier, grad_median, and undergrad_median. The results should be displayed in descending order of grad_multiplier and display the STEM majors with top 10 grad_multiplier.\nDetermine the number of rows of major_income_undergrad and major_income_grad as well as major_income. How come they don’t all have the same number of rows?\n\n\n\nRender, commit, and push one last time. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "hw/hw-2.html#submission",
    "href": "hw/hw-2.html#submission",
    "title": "HW 2 - Data wrangling",
    "section": "Submission",
    "text": "Submission\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials Duke Net ID and log in using your Net ID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with exercise. All the pages of your homework should be associated with at least one question (i.e., should be “checked”). If you do not do this, you will be subject to lose points on the assignment.\nSelect the first page of your PDF submission to be associated with the “Workflow & formatting” question."
  },
  {
    "objectID": "hw/hw-2.html#grading",
    "href": "hw/hw-2.html#grading",
    "title": "HW 2 - Data wrangling",
    "section": "Grading",
    "text": "Grading\n\nExercise 1: 5 points\nExercise 2: 5 points\nExercise 3: 9 points\nExercise 4: 10 points\nExercise 5: 6 points\nExercise 6: 10 points\nWorkflow + formatting: 5 points\nTotal: 50 points"
  },
  {
    "objectID": "hw/hw-1.html",
    "href": "hw/hw-1.html",
    "title": "HW 1 - Data visualization",
    "section": "",
    "text": "Important\n\n\n\nThis homework is due Thursday, Sep 15 at 11:59pm ET."
  },
  {
    "objectID": "hw/hw-1.html#packages",
    "href": "hw/hw-1.html#packages",
    "title": "HW 1 - Data visualization",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(openintro)"
  },
  {
    "objectID": "hw/hw-1.html#guidelines-tips",
    "href": "hw/hw-1.html#guidelines-tips",
    "title": "HW 1 - Data visualization",
    "section": "Guidelines + tips",
    "text": "Guidelines + tips\nAs we’ve discussed in lecture, your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nRemember that continuing to develop a sound workflow for reproducible data analysis is important as you complete this homework and other assignments in this course. There will be periodic reminders in this assignment to remind you to knit, commit, and push your changes to GithHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment.\n\n\n\n\n\n\nNote\n\n\n\nNote: Do not let R output answer the question for you unless the question specifically asks for just a plot. For example, if the question asks for the number of columns in the data set, please type out the number of columns. You are subject to lose points if you do not."
  },
  {
    "objectID": "hw/hw-1.html#workflow-formatting",
    "href": "hw/hw-1.html#workflow-formatting",
    "title": "HW 1 - Data visualization",
    "section": "Workflow + formatting",
    "text": "Workflow + formatting\nMake sure to\n\nUpdate author name on your document.\nLabel all code chunks informatively and concisely.\nFollow the Tidyverse code style guidelines.\nMake at least 3 commits.\nResize figures where needed, avoid tiny or huge plots.\nTurn in an organized, well formatted document."
  },
  {
    "objectID": "hw/hw-1.html#data-1-duke-forest-houses",
    "href": "hw/hw-1.html#data-1-duke-forest-houses",
    "title": "HW 1 - Data visualization",
    "section": "Data 1: Duke Forest houses",
    "text": "Data 1: Duke Forest houses\n\n\n\n\n\n\nNote\n\n\n\nUse this dataset for Exercises 1 and 2.\n\n\nFor the following two exercises you will work with data on houses that were sold in the Duke Forest neighborhood of Durham, NC in November 2020. The duke_forest dataset comes from the openintro package. You can see a list of the variables on the package website or by running ?duke_forest in your console."
  },
  {
    "objectID": "hw/hw-1.html#exercise-1",
    "href": "hw/hw-1.html#exercise-1",
    "title": "HW 1 - Data visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\nSuppose you’re helping some family friends who are looking to buy a house in Duke Forest. As they browse Zillow listings, they realize some houses have garages and others don’t, and they wonder: Does having a garage make a difference?\nLuckily, you can help them answer this question with data visualization!\n\nMake histograms of the prices of houses in Duke Forest based on whether they have a garage.\n\nIn order to do this, you will first need to create a new variable called garage (with levels \"Garage\" and \"No garage\").\nBelow is the code for creating this new variable. Here, we mutate() the duke_forest data frame to add a new variable called garage which takes the value \"Garage\" if the text string \"Garage\" is detected in the parking variable and takes the test string \"No garage\" if not.\n\n\n\nduke_forest |>\n  mutate(garage = if_else(str_detect(parking, \"Garage\"),   \"Garage\", \"No garage\"))\n\n\nThen, facet by garage and use different colors for the two facets.\nChoose an appropriate binwidth and decide whether a legend is needed, and turn it off if not.\nInclude informative title and axis labels.\nFinally, include a brief (2-3 sentence) narrative comparing the distributions of prices of Duke Forest houses that do and don’t have garages. Your narrative should touch on whether having a garage “makes a difference” in terms of the price of the house.\n\n\nNow is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceding."
  },
  {
    "objectID": "hw/hw-1.html#exercise-2",
    "href": "hw/hw-1.html#exercise-2",
    "title": "HW 1 - Data visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\nIt’s expected that within any given marker larger houses will be priced higher. It’s also expected that the age of the house will have an effect on the price. However in some markets new houses might be more expensive while in others new construction might mean “no character” and hence be less expensive. So your family friends ask: “In Duke Forest, do houses that are bigger and more expensive tend to be newer ones than those that are smaller and cheaper?”\nOnce again, data visualization skills to the rescue!\n\nCreate a scatter plot to exploring the relationship between price and area, conditioning for year_built.\nUse geom_smooth() with the argument se = FALSE to add a smooth curve fit to the data and color the points by year_built.\nInclude informative title, axis, and legend labels.\nDiscuss each of the following claims (1-2 sentences per claim). Your discussion should touch on specific things you observe in your plot as evidence for or against the claims.\n\nClaim 1: Larger houses are priced higher.\nClaim 2: Newer houses are priced higher.\nClaim 3: Bigger and more expensive houses tend to be newer ones than smaller and cheaper ones.\n\n\n\nNow is a good time to render, commit, and push.\nMake sure that you commit and push all changed documents and your Git pane is completely empty before proceding."
  },
  {
    "objectID": "hw/hw-1.html#data-2-brfss",
    "href": "hw/hw-1.html#data-2-brfss",
    "title": "HW 1 - Data visualization",
    "section": "Data 2: BRFSS",
    "text": "Data 2: BRFSS\n\n\n\n\n\n\nNote\n\n\n\nUse this dataset for Exercises 3 to 5.\n\n\n\nThe Behavioral Risk Factor Surveillance System (BRFSS) is the nation’s premier system of health-related telephone surveys that collect state data about U.S. residents regarding their health-related risk behaviors, chronic health conditions, and use of preventive services. Established in 1984 with 15 states, BRFSS now collects data in all 50 states as well as the District of Columbia and three U.S. territories. BRFSS completes more than 400,000 adult interviews each year, making it the largest continuously conducted health survey system in the world.\nSource: cdc.gov/brfss\n\nIn the following exercises we will work with data from the 2020 BRFSS survey. The originally come from here, though we will work with a random sample of responses and a small number of variables from the data provided. These have already been sampled for you and the dataset you’ll use can be found in the data folder of your repo. It’s called brfss.csv.\n\nbrfss <- read_csv(\"data/brfss.csv\")"
  },
  {
    "objectID": "hw/hw-1.html#exercise-3",
    "href": "hw/hw-1.html#exercise-3",
    "title": "HW 1 - Data visualization",
    "section": "Exercise 3",
    "text": "Exercise 3\n\nHow many rows are in the brfss dataset? What does each row represent?\nHow many columns are in the brfss dataset? Indicate the type of each variable.\nInclude the code and resulting output used to support your answer.\n\n\n Now is a good time to render, commit, and push."
  },
  {
    "objectID": "hw/hw-1.html#exercise-4",
    "href": "hw/hw-1.html#exercise-4",
    "title": "HW 1 - Data visualization",
    "section": "Exercise 4",
    "text": "Exercise 4\nDo people who smoke more tend to have worse health conditions?\n\nUse a segmented bar chart to visualize the relationship between smoking (smoke_freq) and general health (general_health). Decide on which variable to represent with bars and which variable to fill the color of the bars by.\nPay attention to the order of the bars and, if need be, use the fct_relevel function to reorder the levels of the variables.\n\nBelow is sample code for releveling general_health. Here we first convert general_health to a factor (how R stores categorical data) and then order the levels from Excellent to Poor.\n\n\n\nbrfss |>\n  mutate(\n    general_health = as.factor(general_health),\n    general_health = fct_relevel(general_health, \"Excellent\", \"Very good\", \"Good\", \"Fair\", \"Poor\")\n  )\n\n\nInclude informative title, axis, and legend labels.\nComment on the motivating question based on evidence from the visualization: Do people who smoke more tend to have worse health conditions?\n\n\n Now is a good time to render, commit, and push."
  },
  {
    "objectID": "hw/hw-1.html#exercise-5",
    "href": "hw/hw-1.html#exercise-5",
    "title": "HW 1 - Data visualization",
    "section": "Exercise 5",
    "text": "Exercise 5\nHow are sleep and general health associated?\n\nCreate a visualization displaying the relationship between sleep and general_health.\nInclude informative title and axis labels.\nModify your plot to use a different theme than the default.\nComment on the motivating question based on evidence from the visualization: How are sleep and general health associated?\n\n\n Now is a good time to render, commit, and push."
  },
  {
    "objectID": "hw/hw-1.html#exercise-6",
    "href": "hw/hw-1.html#exercise-6",
    "title": "HW 1 - Data visualization",
    "section": "Exercise 6",
    "text": "Exercise 6\n\nFill in the blanks:\n\nThe gg in the name of the package ggplot2 stands for ___.\nIf you map the same continuous variable to both x and y aesthetics in a scatterplot, you get a straight ___ line. (Choose between “vertical”, “horizontal”, or “diagonal”.)\n\nCode style: Fix up the code style by spaces and line breaks where needed. Briefly describe your fixes. (Hint: You can refer to the Tidyverse style guide.)\n\n\nggplot(data=mpg,mapping=aes(x=drv,fill=class))+geom_bar() +scale_fill_viridis_d()\n\n\nRead ?facet_wrap. What does nrow do? What does ncol do? What other options control the layout of the individual panels? Why doesn’t facet_grid() have nrow and ncol arguments?\n\n\n Render, commit, and push one last time.\nMake sure that you commit and push all changed documents and your Git pane is completely empty before proceding."
  },
  {
    "objectID": "hw/hw-1.html#submission",
    "href": "hw/hw-1.html#submission",
    "title": "HW 1 - Data visualization",
    "section": "Submission",
    "text": "Submission\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials Duke Net ID and log in using your Net ID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with exercise. All the pages of your homework should be associated with at least one question (i.e., should be “checked”). If you do not do this, you will be subject to lose points on the assignment.\nSelect the first page of your PDF submission to be associated with the “Workflow & formatting” question."
  },
  {
    "objectID": "hw/hw-1.html#grading",
    "href": "hw/hw-1.html#grading",
    "title": "HW 1 - Data visualization",
    "section": "Grading",
    "text": "Grading\n\nExercise 1: 7 points\nExercise 2: 9 points\nExercise 3: 5 points\nExercise 4: 9 points\nExercise 5: 7 points\nExercise 6: 8 points\nWorkflow + formatting: 5 points\nTotal: 50 points"
  },
  {
    "objectID": "prepare/09-05.html",
    "href": "prepare/09-05.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nR4DS: Chp 2 - Data visualization - Sections 2.1 and 2.4\n\nIf you haven’t yet done so:\n\nRead the syllabus!\nComplete the Getting to know you survey\nGet a GitHub account if you don’t have one (some advice for choosing a username here)\nJoin the course Slack using the invitation link in your email.\nReserve a STA 198-199 container at https://cmgr.oit.duke.edu/containers."
  },
  {
    "objectID": "prepare/10-24.html",
    "href": "prepare/10-24.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nIMS: Chp 2 - Study design"
  },
  {
    "objectID": "prepare/10-18.html",
    "href": "prepare/10-18.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/10-25.html",
    "href": "prepare/10-25.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/10-31.html",
    "href": "prepare/10-31.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/09-12.html",
    "href": "prepare/09-12.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/09-06.html",
    "href": "prepare/09-06.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nR4DS: Chp 2 - Data visualization - Sections 2.5 - 2.10\n\n⌨️ Watch:\n\nData and visualization\nVisualising data with ggplot2"
  },
  {
    "objectID": "prepare/10-27.html",
    "href": "prepare/10-27.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/09-13.html",
    "href": "prepare/09-13.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/10-20.html",
    "href": "prepare/10-20.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/09-15.html",
    "href": "prepare/09-15.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/09-29.html",
    "href": "prepare/09-29.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/11-07.html",
    "href": "prepare/11-07.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/11-10.html",
    "href": "prepare/11-10.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/11-15.html",
    "href": "prepare/11-15.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nIMS: Chp 11 - Hypothesis testing with randomization\nIMS: Chp 12 - Confidence intervals with bootstrapping\n\n\n\n\n\n\n\n\nNote\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/11-01.html",
    "href": "prepare/11-01.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/11-29.html",
    "href": "prepare/11-29.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/11-14.html",
    "href": "prepare/11-14.html",
    "title": "Prepare",
    "section": "",
    "text": "⌨️ Watch:\n\nQuantifying uncertainty\nBootstrapping\nHypothesis testing\n\n\n\n\n\n\n\n\nNote\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/prep1.html",
    "href": "prepare/prep1.html",
    "title": "Prepare",
    "section": "",
    "text": "Join the course Slack using the invitation link in your email.\nReserve a STA 198-199 container at https://cmgr.oit.duke.edu/containers.\n📖 Read:\n\nR for Data Science (R4DS): Chp 1 - Introduction\nIntroduction to Modern Statistics (IMS): Chp 1 - Hello data\nThe syllabus!"
  },
  {
    "objectID": "prepare/11-17.html",
    "href": "prepare/11-17.html",
    "title": "Prepare",
    "section": "",
    "text": "No prepare materials for today, work on exam prep!"
  },
  {
    "objectID": "prepare/11-03.html",
    "href": "prepare/11-03.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/prep2.html",
    "href": "prepare/prep2.html",
    "title": "Prepare",
    "section": "",
    "text": "⌨️ Watch: - Data and visualization - Visualising data with ggplot2"
  },
  {
    "objectID": "prepare/11-08.html",
    "href": "prepare/11-08.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/12-01.html",
    "href": "prepare/12-01.html",
    "title": "Prepare",
    "section": "",
    "text": "⌨️ Watch:\n\nDoing data science\n\nTake the survey for indicating preferences for looking further topics"
  },
  {
    "objectID": "prepare/10-04.html",
    "href": "prepare/10-04.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/09-19.html",
    "href": "prepare/09-19.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nR4DS: Chp 6 - Data tidying (Sections 6.1 and 6.2)\nTidy Data by Hadley Wickham"
  },
  {
    "objectID": "prepare/09-27.html",
    "href": "prepare/09-27.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/10-06.html",
    "href": "prepare/10-06.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/10-13.html",
    "href": "prepare/10-13.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/09-26.html",
    "href": "prepare/09-26.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nR4DS: Chp 14 - Numbers (Sections 14.1, 14.2, and 14.4)\nR4DS: Chp 15 - Strings (Sections 15.1 - 15.3)"
  },
  {
    "objectID": "prepare/09-22.html",
    "href": "prepare/09-22.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/10-17.html",
    "href": "prepare/10-17.html",
    "title": "Prepare",
    "section": "",
    "text": "Check your email before lab to find out who your teammates are. If you like, reach out to them before class. Or just find them when you get there."
  },
  {
    "objectID": "prepare/09-20.html",
    "href": "prepare/09-20.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/09-08.html",
    "href": "prepare/09-08.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nIMS: Chp 4 - Exploring categorical data\nIMS: Chp 5 - Exploring numerical data\n\n⌨️ Watch:\n\nVisualizing numerical data\nVisualizing categorical data\n\n📜Optional reading – Blog posts that might be of interest for those who want to dive deeper / go further:\n\n#barbarplots\nVisualizing distributions with raincloud plots"
  },
  {
    "objectID": "ae/ae-01.html",
    "href": "ae/ae-01.html",
    "title": "Welcome to R",
    "section": "",
    "text": "By the end of today you will…\n\nbegin to know your way around RStudio\nbe able to define package, data frame, variable, function, argument\nuse the function glimpse()"
  },
  {
    "objectID": "ae/ae-01.html#getting-started",
    "href": "ae/ae-01.html#getting-started",
    "title": "Welcome to R",
    "section": "Getting started",
    "text": "Getting started\nClone the ae1 repo from the GitHub organization"
  },
  {
    "objectID": "ae/ae-01.html#r-as-a-calculator",
    "href": "ae/ae-01.html#r-as-a-calculator",
    "title": "Welcome to R",
    "section": "R as a calculator",
    "text": "R as a calculator\n\nUse R as a calculator by typing the following into the console:\n\n\n5 * 5 + 10\n\nx = 3\nx + x^2\n\nx = 1:10\nx * 7\nIn the last couple examples we save some value as the object “x”.\nWe can “print” x to the screen by typing the name of the object (“x”) in the console or in a code chunk."
  },
  {
    "objectID": "ae/ae-01.html#tour-of-rstudio",
    "href": "ae/ae-01.html#tour-of-rstudio",
    "title": "Welcome to R",
    "section": "Tour of RStudio",
    "text": "Tour of RStudio\n\nenvironment\nR functions\nloading and viewing a data frame"
  },
  {
    "objectID": "ae/ae-01.html#load-a-package",
    "href": "ae/ae-01.html#load-a-package",
    "title": "Welcome to R",
    "section": "Load a package",
    "text": "Load a package\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "ae/ae-01.html#load-data",
    "href": "ae/ae-01.html#load-data",
    "title": "Welcome to R",
    "section": "Load data",
    "text": "Load data\n\nroster = read_csv(\"data/roster.csv\")\nsurvey = read_csv(\"data/survey.csv\")\n\nQuestion: What objects store the data in the code chunk above? Can you print them to the screen?\nCreate a new code chunk with CMD+OPTION+I (mac) or CTRL+ALT+I (windows/linux)\nSo far we’ve already seen two functions. library and read_csv. Functions in R are attached to parentheses and take an input, aka an argument, and often (but not always) return an output. To learn more about a function, you can check the documentation with ?, e.g. ?library."
  },
  {
    "objectID": "ae/ae-01.html#demos",
    "href": "ae/ae-01.html#demos",
    "title": "Welcome to R",
    "section": "Demos",
    "text": "Demos\nLet’s glimpse the data frame.\n\nglimpse(survey)\n\nRows: 12\nColumns: 5\n$ name                 <chr> \"A\", \"Appa\", \"Bumi\", \"Soka\", \"Katara\", \"Suki\", \"Z…\n$ email                <chr> \"the-last-Rbender@duke.edu\", \"yip-yip-appa@duke.e…\n$ bender               <chr> \"Airbender\", \"Airbender\", \"Earthbender\", \"None\", …\n$ previous_programming <chr> \"No\", \"No\", \"No\", \"Somewhat\", \"Yes\", \"Yes\", \"Yes\"…\n$ year                 <dbl> 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4\n\n\nTo look at all of it, we can use view()\n\nview(survey)\n\nView the roster data in the console\nTerminology: “columns” of a dataframe are called variables whereas “rows” are observations.\nQuestion: How many variables are in the data frame survey? How many observations? What about the data frame roster?\nWhy must I input specific email formats?\n\nroster |>\n  left_join(survey, by = \"email\")"
  },
  {
    "objectID": "project-tips-resources.html",
    "href": "project-tips-resources.html",
    "title": "Project tips + resources",
    "section": "",
    "text": "The project is very open ended. For instance, in creating a compelling visualization(s) of your data in R, there is no limit on what tools or packages you may use. You do not need to visualize all of the data at once. A single high quality visualization will receive a much higher grade than a large number of poor quality visualizations.\nBefore you finalize your write up, make sure the printing of code chunks is turned off with the option echo: false. In addition to code chunks, ensure all messages are turned off with the options warning: false and message: false.\nFinally, pay attention to details in your write-up and presentation. Neatness, coherency, and clarity will count."
  },
  {
    "objectID": "project-tips-resources.html#suppress-code-and-warnings",
    "href": "project-tips-resources.html#suppress-code-and-warnings",
    "title": "Project tips + resources",
    "section": "Suppress code and warnings",
    "text": "Suppress code and warnings\n\nInclude the following in the YAML of your report.qmd to suppress all code, warnings, and other messages.\n\nexecute:\n  echo: false\n  warning: false"
  },
  {
    "objectID": "project-tips-resources.html#headers",
    "href": "project-tips-resources.html#headers",
    "title": "Project tips + resources",
    "section": "Headers",
    "text": "Headers\nUse headers to clearly label each section. Make sure there is a space between the previous line and the header. Use appropriate header levels."
  },
  {
    "objectID": "project-tips-resources.html#references",
    "href": "project-tips-resources.html#references",
    "title": "Project tips + resources",
    "section": "References",
    "text": "References\nInclude all references in a section called “References” at the end of the report. This course does not have specific requirements for formatting citations and references. Optional: Use Quarto’s citation support for generating your reference. See Citations & Footnotes on the Quarto documentation for more on that."
  },
  {
    "objectID": "project-tips-resources.html#appendix",
    "href": "project-tips-resources.html#appendix",
    "title": "Project tips + resources",
    "section": "Appendix",
    "text": "Appendix\nIf you have additional work that does not fit or does not belong in the body of the report, you may put it at the end of the document in section called “Appendix”. The items in the appendix should be properly labeled. The appendix should only be for additional material. The reader should be able to fully understand your report without viewing content in the appendix. We will not grade your appendix."
  },
  {
    "objectID": "project-tips-resources.html#resize-figures",
    "href": "project-tips-resources.html#resize-figures",
    "title": "Project tips + resources",
    "section": "Resize figures",
    "text": "Resize figures\nResize plots and figures, so you have more space for the narrative. Resize individual figures: Set fig-width and fig-height in chunk options, e.g.,\n#| echo: fenced\n#| label: plot1\n#| fig-height: 3\n#| fig-width: 5\nreplacing plot1 with a meaningful label and the height and width with values appropriate for your write up.\nResize all figures: Include the fig-height and fig-width options in the YAML header as shown below:\nexecute:\n  fig-height: 3\n  fig-width: 5\nReplace the height and width values with values appropriate for your write up."
  },
  {
    "objectID": "project-tips-resources.html#arranging-plots",
    "href": "project-tips-resources.html#arranging-plots",
    "title": "Project tips + resources",
    "section": "Arranging plots",
    "text": "Arranging plots\nArrange plots in a grid, instead of one after the other. This is especially useful when displaying plots for exploratory data analysis and to check assumptions.\nIf you’re using ggplot2 functions, the patchwork package makes it easy to arrange plots in a grid.\nMore to be added soon…"
  },
  {
    "objectID": "computing-access.html",
    "href": "computing-access.html",
    "title": "Computing access",
    "section": "",
    "text": "If this is your first time accessing the containers, click on reserve STA198-199 on the Reservations available menu on the right. You only need to do this once, and when you do, you’ll see this container moved to the My reservations menu on the left.\nNext, click on STA198-199 under My reservations to access the RStudio instance you’ll use for the course."
  },
  {
    "objectID": "teaching-resources/GitHubClassroomManagement.html",
    "href": "teaching-resources/GitHubClassroomManagement.html",
    "title": "GitHub Classroom Management",
    "section": "",
    "text": "library(ghclass)\nlibrary(tidyverse)\nEach code chunk below is designed to be self-contained (no dependency between chunks)."
  },
  {
    "objectID": "teaching-resources/GitHubClassroomManagement.html#to-make-new-repos",
    "href": "teaching-resources/GitHubClassroomManagement.html#to-make-new-repos",
    "title": "GitHub Classroom Management",
    "section": "To make new repos",
    "text": "To make new repos\n\n\n\n\nCreate a new repo in the organization called “lab1” with a README.md\nPush to “lab1”: lab1.qmd, data/any_relevant_data.csv and optionally lab1.Rproj.\nSelect the repository, click “Settings” and check “Template repository”.\nFollow the code below.\n\n\n# initial assignment creation\norg = \"sta199-sp23-1\"\nusernames = ghclass::org_members(org)\n\n## edit this:\nassignment_template_repo = \"lab0_template\"\n\nghclass::org_create_assignment(\n  org = org,\n  repo = paste0(assignment_template_repo, \"-\", usernames),\n  user = usernames,\n  source_repo = paste0(org, \"/\", assignment_template_repo)\n)\n\nFeel free to test lab creation on my dummy account “fishswish” or on your own account with the code below\n\norg = \"sta199-sp23-1\"\nusernames = \"fishswish\"\nassignment_template_repo = \"lab0_template\"\nghclass::org_create_assignment(\n  org = org,\n  repo = paste0(assignment_template_repo, \"-\", usernames),\n  user = usernames,\n  source_repo = paste0(org, \"/\", assignment_template_repo)\n)\n\nIt’s possible some people are not in the organization and will need to be have additional repos created manually following the steps below:\n\ngo to template repo and click the green “Use this template” -> “Create a new repository” -> name it “lab-x-their_github_username” -> leave “Private” selected and click “Create repository from template”\nnext in the new repo go to “Settings” -> “Collaborators and Teams” -> click the green “Add people” button and type in their GitHub username.\nnext make sure to go to the “People” section of the organization and select “Invite member” so they join the organization too. Owning a repo in the org just makes them an outside collaborator. They still have to actually join the org"
  },
  {
    "objectID": "teaching-resources/GitHubClassroomManagement.html#oops.-file-management-after-you-create-repos",
    "href": "teaching-resources/GitHubClassroomManagement.html#oops.-file-management-after-you-create-repos",
    "title": "GitHub Classroom Management",
    "section": "Oops. File management after you create repos",
    "text": "Oops. File management after you create repos\nThe magic happens in repo_add_file(). Be sure to edit/check each item below, specifically:\n\norg as appropriate\nrepos_to_modify object\narguments to repo_add_file()\n\n\norg = \"sta199-sp23-1\"\nusernames = ghclass::org_members(org)\n\n# get all existing labX repos\nrepos_to_modify = org_repos(org, filter = \"lab0-\") # edit this \"filter\"\n\nghclass::repo_add_file(repo = repos_to_modify,\n                       branch = \"main\",\n                       repo_folder = \"data/\", # edit this to be path to folder in repo\n                       message = \"commit message here\", # update to be a meaningful commit message\n                       file = \"~/Desktop/class/data/file.csv\", # update local path to the file you want to add\n                       overwrite = FALSE) # if you want to overwrite or not"
  },
  {
    "objectID": "slides/01-welcome-199.html#meet-the-professor",
    "href": "slides/01-welcome-199.html#meet-the-professor",
    "title": "Welcome to STA 199",
    "section": "Meet the professor",
    "text": "Meet the professor\n\n\n\n\n\n\nAlexander Fisher\nalexander.fisher@duke.edu\nOffice hours: Wednesday 1:30-3:30pm in Old Chem 207\nA little bit about my research…"
  },
  {
    "objectID": "slides/01-welcome-199.html#why-data-science",
    "href": "slides/01-welcome-199.html#why-data-science",
    "title": "Welcome to STA 199",
    "section": "Why data science?",
    "text": "Why data science?\nData science turns data into knowledge.\n\nExamples"
  },
  {
    "objectID": "slides/01-welcome-199.html#course-overview",
    "href": "slides/01-welcome-199.html#course-overview",
    "title": "Welcome to STA 199",
    "section": "Course overview",
    "text": "Course overview\n\n\n\n\n\n\n\n\nImportant\n\n\nNo programming experience required."
  },
  {
    "objectID": "slides/01-welcome-199.html#learning-objectives",
    "href": "slides/01-welcome-199.html#learning-objectives",
    "title": "Welcome to STA 199",
    "section": "Learning objectives",
    "text": "Learning objectives\nBy the end of this course you will be able to…\n\nlearn to explore, visualize, and analyze data in a reproducible manner\ngain experience in data wrangling and munging, exploratory data analysis, predictive modeling, and data visualization\nwork on problems and case studies inspired by and based on real-world questions and data\nlearn to effectively communicate results through written assignments and project presentation\ndevelop your own question about a data set of your choosing and use techniques from this class to answer the question"
  },
  {
    "objectID": "slides/01-welcome-199.html#assessments",
    "href": "slides/01-welcome-199.html#assessments",
    "title": "Welcome to STA 199",
    "section": "Assessments",
    "text": "Assessments\n\nPrepare: short videos, reading assignments, and lectures.\nPractice: application exercises\nPerform: labs, homework, exams, and the project.\n\n\n\n\nCategory\nPercentage\n\n\n\n\nHomework\n30%\n\n\nLabs\n15%\n\n\nProject\n15%\n\n\nExam 01\n18%\n\n\nExam 02\n18%\n\n\nApplication Exercises\n4%"
  },
  {
    "objectID": "slides/01-welcome-199.html#community",
    "href": "slides/01-welcome-199.html#community",
    "title": "Welcome to STA 199",
    "section": "Community",
    "text": "Community\nUphold the Duke Community Standard:\n\nI will not lie, cheat, or steal in my academic endeavors;\nI will conduct myself honorably in all my endeavors; and\nI will act if the Standard is compromised.\n\nAny violations in academic honesty standards as outlined in the Duke Community Standard and those specific to this course will automatically result in a 0 for the assignment and will be reported to the Office of Student Conduct for further action.\nLearning environment\n\nCreate a learning environment that is welcoming, inclusive, and accessible to everyone.\nRespect and honor each other.\n\nTeam work policy\nThe final project and several labs will be completed in teams. All group members are expected to participate equally. Commit history may be used to give individual team members different grades. Your grade may differ from the rest of your group."
  },
  {
    "objectID": "slides/01-welcome-199.html#late-policy",
    "href": "slides/01-welcome-199.html#late-policy",
    "title": "Welcome to STA 199",
    "section": "Late policy",
    "text": "Late policy\n\nHomeworks and labs can be turned in within 72 hours of the deadline for grade penalty (5% off per day).\nExams and the final project cannot be turned in late and can only be excused under exceptional circumstances.\nThe Duke policy for illness requires a short-term illness report or a letter from the Dean; except in emergencies, all other absenteeism must be approved in advance (e.g., an athlete who must miss class may be excused by prior arrangement for specific days). For emergencies, email notification is needed at the first reasonable time.\nAll exemptions will be handled by course coordinator, Ed Tam, at sta199@duke.edu\nLast minute coding/rendering issues will not be granted extensions."
  },
  {
    "objectID": "slides/01-welcome-199.html#course-toolkit",
    "href": "slides/01-welcome-199.html#course-toolkit",
    "title": "Welcome to STA 199",
    "section": "Course toolkit",
    "text": "Course toolkit\n\ncourse website: https://sta199-sp23-1.github.io/\ncourse organization (on GitHub): https://github.com/sta199-sp23-1\nslack: https://sta199-sp23-001.slack.com"
  },
  {
    "objectID": "slides/01-welcome-199.html#communication-and-missing-class",
    "href": "slides/01-welcome-199.html#communication-and-missing-class",
    "title": "Welcome to STA 199",
    "section": "Communication and missing class",
    "text": "Communication and missing class\nIf you have questions about homework/lab exercises, debugging, or any question about course materials\n\ncome to office hours\npost to a public channel in slack.\n\nWhen you need help debugging, it is essential you provide a reproducible example of the code that caused the error. Screenshots, or pasting a short snippet of the offending code is helpful!\n\n\n\n\n\n\n\nWarning\n\n\nThe teaching team will not debug via email.\n\n\n\n\n\nWhen you miss a class:\n\nwatch the recorded lecture on Sakai\ncome to office hours or post in a public channel of slack if you have questions"
  },
  {
    "objectID": "slides/01-welcome-199.html#jump-in",
    "href": "slides/01-welcome-199.html#jump-in",
    "title": "Welcome to STA 199",
    "section": "Jump in",
    "text": "Jump in\n\nCheck your email / sakai announcements for slack invite.\nPost on slack\nAccept your course organization invite\n\n\n\nDon’t have an invite? Follow the lab 0 instructions to create a lab-0-username repo here.\n\n\n\nDemo: ae1\n\n\n\n🔗 sta199-sp23-1.github.io"
  },
  {
    "objectID": "slides/lab0-welcome.html#introductions",
    "href": "slides/lab0-welcome.html#introductions",
    "title": "Welcome to Lab",
    "section": "Introductions",
    "text": "Introductions\n\n\n\n\nMeet the TA!\nIntroduce yourself (icebreaker)\nFollow along these slides on the course website (under slides): sta199-sp23-1.github.io\nBookmark this! It’s the course website."
  },
  {
    "objectID": "slides/lab0-welcome.html#what-to-expect-in-labs",
    "href": "slides/lab0-welcome.html#what-to-expect-in-labs",
    "title": "Welcome to Lab",
    "section": "What to expect in labs",
    "text": "What to expect in labs\n\nIntroduce lab assignment (5-10 minutes, longer today)\nWork on the lab assignment (you can find it on the course website). You will work with others but your submission must be your own for the first several labs.\nTypically you won’t finish labs in-class and they will be due 1 week after they are released."
  },
  {
    "objectID": "slides/lab0-welcome.html#tips",
    "href": "slides/lab0-welcome.html#tips",
    "title": "Welcome to Lab",
    "section": "Tips",
    "text": "Tips\n\nRead all instructions on the lab.\nOne work strategy is to get through portions that you think will be most challenging (which initially might be the coding component) during lab when we can help you on the spot and leave the narrative writing until later.\nMake use of office hours. Before you need help!"
  },
  {
    "objectID": "slides/lab0-welcome.html#beginnings",
    "href": "slides/lab0-welcome.html#beginnings",
    "title": "Welcome to Lab",
    "section": "Beginnings",
    "text": "Beginnings\n\nCreate a GitHub account (unless you already have one) on https://github.com/\n\none day you might want to show off your work, so choose a username you will be proud to show to a future employer.\n\ntell us your username by taking this survey. This is essential to receive credit on future assignments.\n\n\n\n\n05:00"
  },
  {
    "objectID": "slides/lab0-welcome.html#create-your-github-repo",
    "href": "slides/lab0-welcome.html#create-your-github-repo",
    "title": "Welcome to Lab",
    "section": "Create your GitHub repo",
    "text": "Create your GitHub repo\nCreate your own copy of today’s lab by clicking here. You may be prompted to login to GitHub. Your copy of of the lab is called your “repository”, or “repo” for short."
  },
  {
    "objectID": "slides/lab0-welcome.html#demo-setting-up",
    "href": "slides/lab0-welcome.html#demo-setting-up",
    "title": "Welcome to Lab",
    "section": "Demo: setting up",
    "text": "Demo: setting up\nNow that your lab repo is created, let’s setup git to work within RStudio.\nTo begin, open\n\nthe lab instructions here and\nthe RStudio containers here\nyour repo (that contains your starting files for the lab) here\n\nFollow the instructions in the lab as I demo."
  },
  {
    "objectID": "slides/lab0-welcome.html#remember",
    "href": "slides/lab0-welcome.html#remember",
    "title": "Welcome to Lab",
    "section": "Remember",
    "text": "Remember\nNo programming experience is required or expected to take this class. Come to lecture, lab and office hours. It’s okay to be confused. Stick with it, you will get the hang of it!\n\n\n🔗 sta199-sp23-1.github.io"
  },
  {
    "objectID": "course-faq.html",
    "href": "course-faq.html",
    "title": "FAQ",
    "section": "",
    "text": "Go to your Files tab, check the box next to the file you want to download, then click on the blue gear icon on the Files tab to reveal the drop down menu, and select Export… If you have selected multiple files to export, RStudio will zip them up into a single zip file for you. If you’ve selected just a single file, it will only download that. The downloaded file will go to wherever files you download off the internet goes on your computer (usually your Downloads folder)."
  },
  {
    "objectID": "course-faq.html#how-can-i-submit-my-assignment-to-gradescope",
    "href": "course-faq.html#how-can-i-submit-my-assignment-to-gradescope",
    "title": "FAQ",
    "section": "How can I submit my assignment to Gradescope?",
    "text": "How can I submit my assignment to Gradescope?\nThe instructions for submitting your assignment to Gradescope can be found here. In a nutshell, you’ll upload your PDF and them mark the page(s) where each question can be found. It’s OK if a question spans multiple pages, just mark them all. It’s also OK if a page includes multiple questions."
  },
  {
    "objectID": "course-faq.html#can-i-use-a-local-install-of-r-and-rstudio-instead-of-using-the-rstudio-containers",
    "href": "course-faq.html#can-i-use-a-local-install-of-r-and-rstudio-instead-of-using-the-rstudio-containers",
    "title": "FAQ",
    "section": "Can I use a local install of R and RStudio instead of using the RStudio containers?",
    "text": "Can I use a local install of R and RStudio instead of using the RStudio containers?\nYou are welcome to, but you will need to install specific versions of R and RStudio for everything to work as expected. You will also need to install the R packages we’re using as well as have git installed on your computer. These are not extremely challenging things to get right, but they are not trivial either, particularly on certain operating systems. Myself and the TAs are always happy to provide help with any computational questions when you’re working in the containers we have provided for you. If you’re working on your local setup, we can’t guarantee being able to resolve your issues, though we’re happy to try.\nIf you want to take this path, here is what you need to do:\n\nDownload and install R 4.2.1: https://cran.r-project.org/\nDownload and install the preview build of RStudio: https://www.rstudio.com/products/rstudio/download/preview/\nInstall git: https://happygitwithr.com/install-git.html\nInstall any necessary packages with install.packages(\"___\")\n\nAnd I’d like to reiterate again that successful installation of these software is not a learning goal of this course. So if any of this seems tedious or intimidating in any way, just use the computing environment we have set up for you. More on that here."
  },
  {
    "objectID": "computing-cheatsheets.html",
    "href": "computing-cheatsheets.html",
    "title": "R cheatsheets",
    "section": "",
    "text": "The following cheatsheets come from https://www.rstudio.com/resources/cheatsheets. We haven’t covered every function and functionality listed on them, but you might still find them useful as references."
  },
  {
    "objectID": "project-description.html",
    "href": "project-description.html",
    "title": "Project description",
    "section": "",
    "text": "Project details will be posted as the semester progresses."
  },
  {
    "objectID": "course-syllabus.html",
    "href": "course-syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Click here to download a PDF copy of the syllabus.\nOur course coordinator, Edric Tam, will handle all inquiries about late work, extensions and absences in accordance with the late policy described in the syllabus below. Please send emails to sta199@duke.edu."
  },
  {
    "objectID": "course-syllabus.html#class-time-and-location",
    "href": "course-syllabus.html#class-time-and-location",
    "title": "Syllabus",
    "section": "Class time and location",
    "text": "Class time and location\n\n\n\nLecture\nW/F: 10:15-11:30 AM\nLSRC B101\n\n\nLab 1\nM: 10:15-11:30 AM\nPerkins LINK 087 (Classroom 3)\n\n\nLab 2\nM: 12:00-1:15 PM\nPerkins LINK 087 (Classroom 3)\n\n\nLab 3\nM: 1:45-3:00 PM\nPerkins LINK 087 (Classroom 3)\n\n\nLab 4\nM: 3:30-4:35 PM\nPerkins LINK 087 (Classroom 3)\n\n\nLab 5\nM: 5:15-6:30 PM\nPerkins LINK 087 (Classroom 3)\n\n\nLab 11\nM: 5:15 - 6:30 PM\nPerkins LINK 071 (Classroom 5)"
  },
  {
    "objectID": "course-syllabus.html#office-hours",
    "href": "course-syllabus.html#office-hours",
    "title": "Syllabus",
    "section": "Office hours",
    "text": "Office hours\nClick here for the instructor and TA office hours locations and Zoom links. You are welcome to attend the office hours for any member of the teaching team, regardless of section."
  },
  {
    "objectID": "course-syllabus.html#textbooks",
    "href": "course-syllabus.html#textbooks",
    "title": "Syllabus",
    "section": "Textbooks",
    "text": "Textbooks\nAll books are freely available online.\n\n\n\nR for Data Science, 2e\nGrolemund, Wickham\nO’Reilly, 2nd edition, 2022\nHard copy only available of 1st edition\n\n\nIntroduction to Modern Statistics\nÇetinkaya-Rundel, Hardin\nOpenIntro Inc., 1st Edition, 2021\nHard copy available on Amazon"
  },
  {
    "objectID": "course-syllabus.html#course-learning-objectives",
    "href": "course-syllabus.html#course-learning-objectives",
    "title": "Syllabus",
    "section": "Course learning objectives",
    "text": "Course learning objectives\nBy the end of the semester, you will…\n\nlearn to explore, visualize, and analyze data in a reproducible manner\ngain experience in data wrangling and munging, exploratory data analysis, predictive modeling, and data visualization\nwork on problems and case studies inspired by and based on real-world questions and data\nlearn to effectively communicate results through written assignments and project presentation\ndevelop your own question about a data set of your choosing and use techniques from this class to answer the question"
  },
  {
    "objectID": "course-syllabus.html#assessment",
    "href": "course-syllabus.html#assessment",
    "title": "Syllabus",
    "section": "Assessment",
    "text": "Assessment\nThe activities and assessments in this course are designed to help you successfully achieve the course learning objectives. They are designed to follow the Prepare, Practice, Perform format.\n\nPrepare: Includes short videos, reading assignments, and lectures to introduce new concepts and ensure a basic comprehension of the material. The goal is to help you prepare for the in-class activities during lecture.\nPractice: In-class application exercises where you will begin to master the concepts and methods introduced in the prepare assignment. The activities will graded for completion, as they are designed for you to gain experience with the statistical and computing techniques before working on graded assignments.\nPerform: Includes labs, homework, exams, and the project. These assignments build upon the prepare and practice assignments and are the opportunity for you to demonstrate your understanding of the course material and how it is applied to analyze real-world data.\n\n\nTeam work policy\nThe final project and several labs will be completed in teams. GitHub commits will be used to measure individual contribution to the assignment. All group members are expected to participate equally. Commit history may be used to give individual team members different grades. Your grade may differ from the rest of your group.\n\n\nApplication exercises (practice)\nEach lecture, we will work through application exercise (AEs). These serve as notes you will fill in during class mixed with practice exercises. Exercises which give you an opportunity to practice statistical concepts and code introduced in the prepare assignment.\nBecause these AEs are for practice, they will be graded based on completion, i.e., a good-faith effort has been made in attempting all parts. Successful on-time completion of at least 80% of AEs will result in full credit for AEs in the final course grade. To submit an AE, you simply need to push your completed AE to the designated repo in GitHub.\n\n\nLabs (perform)\nIn labs, you will apply the concepts discussed in lecture to various data analysis scenarios, with a focus on the computation. Some lab assignments will be completed in teams, and all team members are expected to contribute equally to the completion of each assignment. You are expected to use the team’s git repository on the course’s GitHub page as the central platform for collaboration. Commits to this repository will be used as a metric of each team member’s relative contribution for each lab, see team work policy above. Lab assignments will be completed using Quarto, correspond to an appropriate GitHub repository, and be submitted for grading in Gradescope.\nThe lowest lab grade will be dropped at the end of the semester.\n\n\nHomework (perform)\nIn homework, you will apply what you’ve learned during lecture and lab to complete data analysis tasks. You may discuss homework assignments with other students; however, homework should be completed and submitted individually. Similar to lab assignments, homework must be typed up using Quarto and GitHub and submitted as a PDF in Gradescope.\nHomework assignments are due at 5:00 PM ET on the indicated due date.\nOne homework assignment will be dedicated to a statistics experience. The statistics experience is an opportunity to engage with statistics and data science outside of the classroom through podcasts, books, seminars, data analysis competitions, and other activities. As you complete these experiences, the goal is to consider how the material you’re learning in the course connects with society more broadly.\nThe lowest homework grade will be dropped at the end of the semester.\n\n\nExams (perform)\nThere will be two, take-home, open-note exams. Through these exams you have the opportunity to demonstrate what you’ve learned in the course thus far. Each exam will include small analysis and computational tasks related to the content in the prepare, practice, and perform assignments. More details about the content and structure of the exams will be discussed during the semester.\n\n\nProject (perform)\nThe purpose of the project is to apply what you’ve learned throughout the semester to analyze an interesting data-driven research question. The project will be completed with your lab teams, and each team will present their work in video and in writing during the final exam period. More information about the project will be provided during the semester."
  },
  {
    "objectID": "course-syllabus.html#grading",
    "href": "course-syllabus.html#grading",
    "title": "Syllabus",
    "section": "Grading",
    "text": "Grading\nThe final course grade will be calculated as follows:\n\n\n\nCategory\nPercentage\n\n\n\n\nHomework\n30%\n\n\nLabs\n15%\n\n\nProject\n15%\n\n\nExam 01\n18%\n\n\nExam 02\n18%\n\n\nApplication Exercises\n4%\n\n\n\nThe final letter grade will be determined based on the following thresholds:\n\n\n\nLetter Grade\nFinal Course Grade\n\n\n\n\nA\n>= 93\n\n\nA-\n90 - 92.99\n\n\nB+\n87 - 89.99\n\n\nB\n83 - 86.99\n\n\nB-\n80 - 82.99\n\n\nC+\n77 - 79.99\n\n\nC\n73 - 76.99\n\n\nC-\n70 - 72.99\n\n\nD+\n67 - 69.99\n\n\nD\n63 - 66.99\n\n\nD-\n60 - 62.99\n\n\nF\n< 60"
  },
  {
    "objectID": "course-syllabus.html#course-policies",
    "href": "course-syllabus.html#course-policies",
    "title": "Syllabus",
    "section": "Course policies",
    "text": "Course policies\nInclusive community: It is my intent that students from all backgrounds and perspectives be well-served by this course, that students’ learning needs be addressed both in and out of class, and that the diversity that the students bring to this class be viewed as a resource, strength, and benefit. It is my intent to present materials and activities that are respectful of diversity and in alignment with Duke’s Commitment to Diversity and Inclusion. Your suggestions are encouraged and appreciated. Please let me know ways to improve the effectiveness of the course for you personally, or for other students or student groups.\nAcademic honesty: You should be familiar with Duke’s community standard: https://studentaffairs.duke.edu/conduct/about-us/duke-community-standard\nBy enrolling in this course, you commit to upholding Duke’s community standard reproduced as follows:\n\nI will not lie, cheat, or steal in my academic endeavors;\nI will conduct myself honorably in all my endeavors; and\nI will act if the Standard is compromised.\n\nAny violations in academic honesty standards as outlined in the Duke Community Standard and those specific to this course will automatically result in a 0 for the assignment and will be reported to the Office of Student Conduct for further action.\nPlease abide by the following as you work on assignments in this course: - You may discuss lab assignments with other students; however, you may not directly share (or copy) code or write up with other students. For team assignments, you may collaborate freely within your team. You may discuss the assignment with other teams; however, you may not directly share (or copy) code or write up with another team. Unauthorized sharing (or copying) of the code or write up will be considered a violation for all students involved. - You may not discuss or otherwise work with others on the exams. Unauthorized collaboration or using unauthorized materials will be considered a violation for all students involved. More details will be given closer to the exam date. - Reusing code: Unless explicitly stated otherwise, you may make use of online resources (e.g. Stack- Overflow) for coding examples on assignments. If you directly use code from an outside source (or use it as inspiration), you must explicitly cite where you obtained the code. Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism.\nLate policy:\nHomeworks and labs can be turned in within 72 hours of the deadline for grade penalty (5% off per day, stacks to 15% by the third day). Exams cannot be turned in late and can only be excused under exceptional circumstances. The Duke policy for illness requires a short-term illness report or a letter from the Dean; except in emergencies, all other absenteeism must be approved in advance (e.g., an athlete who must miss class may be excused by prior arrangement for specific days). For emergencies, email notification is needed at the first reasonable time.\n\nAll exemptions will be handled by course coordinator, Ed Tam, at sta199@duke.edu\nLast minute coding/rendering issues will not be granted extensions.\n\nProcedures for Requesting a Regrade\nEvery effort will be made to mark your work accurately. We are on your side, and want you to receive every point you have worked to earn. However, sometimes grading mistakes happen. If you believe that an error has been made, return the paper to the instructor within four days, stating your claim in writing.\nThe following claims will be considered for re-grading:\n\npoints are not totaled correctly;\nthe grader did not see a correct answer that is on your paper;\nyour answer is the same as the correct answer, but in a different form (e.g., you wrote a correct answer as 1/3 and the grader was looking for .333);\nyour answer to a free response question is essentially correct but stated slightly differently than the grader’s expectation.\n\nThe following claims will not be considered for re-grading:\n\narguments about the number of points lost;\n\n\n\narguments about question wording.\n\nConsidering re-grades consumes time and resources that TAs and the instructor would rather spend helping you understand material. Please bring only claims of type (i), (ii), (iii), or (iv) to our attention.\nCommunication: All lecture notes, assignment instructions, an up-to-date schedule, and other course materials may be found on the course website. Announcements will be emailed to the class through sakai. Please check your email regularly to ensure you have the latest announcements for the course. For quick communication with your peers and the teaching team, see the course slack for general questions and discussion.\nAccessibility: If there is any portion of the course that is not accessible to you due to challenges with technology or the course format, please let me know so we can make appropriate accommodations. The Student Disability Access Office (SDAO) is available to ensure that students are able to engage with their courses and related assignments. Students should be in touch with the Student Disability Access Office to request or update accommodations under these circumstances. Please note that accommodations are not retroactive and disability accommodations cannot be provided until a Faculty Accommodation Letter has been given to me. Please contact SDAO for more information: sdao@duke.edu or access.duke.edu."
  },
  {
    "objectID": "course-syllabus.html#additional-resources",
    "href": "course-syllabus.html#additional-resources",
    "title": "Syllabus",
    "section": "Additional resources",
    "text": "Additional resources\nStudent mental health and wellness are of primary importance at Duke, and the university offers resources to support students in managing daily stress and self-care. Duke offers several resources for students to seek assistance on coursework and to nurture daily habits that support overall well-being, some of which are listed below\n\nThe Academic Resource Center: (919) 684-5917, theARC@duke.edu, or arc.duke.edu. The Academic Resource Center (the ARC) offers services to support students academically during their undergraduate careers at Duke. The ARC can provide support with time management, academic skills and strategies, course-specific tutoring, and more. ARC services are available free to any Duke undergraduate student, studying any discipline.\nDuWell: (919) 681-8421, provides Moments of Mindfulness (stress management and resilience building) and meditation programming (Koru workshop) to assist students in developing a daily emotional well-being practice. To see schedules for programs please see https://studentaffairs.duke.edu/duwell. All are welcome and no experience necessary.\n\nIf your mental health concerns and/or stressful events negatively affect your daily emotional state, academic performance, or ability to participate in your daily activities, many resources are available to help you through difficult times. Duke encourages all students to access these resources.\n\nDukeReach. Provides comprehensive outreach services to identify and support students in managing all aspects of well-being. If you have concerns about a student’s behavior or health visit the website for resources and assistance: https://students.duke.edu/wellness/dukereach/\nCounseling and Psychological Services (CAPS). CAPS services include individual and group counseling services, psychiatric services, and workshops. To initiate services, walk-in/call-in 9-4 M,W,Th,F and 9-6 Tuesdays. CAPS also provides referral to off- campus resources for specialized care.\n\n660-1000 or https://students.duke.edu/wellness/caps/\n\nTimelyCare (formerly known as Blue Devils Care). An online platform that is a convenient, confidential, and free way for Duke students to receive 24/7 mental health support through TalkNow and scheduled counseling. bluedevilscare.duke.edu"
  },
  {
    "objectID": "computing-troubleshooting.html",
    "href": "computing-troubleshooting.html",
    "title": "Computing troubleshooting",
    "section": "",
    "text": "If the status shows something other than Operational, this means there is a known incident with the containers. Check back later to see if it’s been resolved. If there’s a deadline coming up soon, post on the course Slack to let us know that there’s an issue. We can look into how quickly it might get resolved and decide on what to do about the deadline accordingly. Note: We don’t anticipate this to happen regularly, the systems are Operational a huge majority of the time!\nIf the status shows Operational, this means the system is expected to be working. Check your internet connection, if need be, restart your computer to ensure a fresh new connection. If your issue persists, post on the course forum with details on what you’ve tried and the errors you see (including verbatim errors and/or screenshots).\n\nAnother approach is to request a restart of your container. To do so, select your container as you usually do and then, instead of Login, click on Request Restart. Read the warning in the next page, and then click once more to restart your container."
  },
  {
    "objectID": "ae/ae-02.html#describing-distributions",
    "href": "ae/ae-02.html#describing-distributions",
    "title": "Intro statistics and plotting",
    "section": "Describing distributions",
    "text": "Describing distributions\nTo describe a distribution we will use the terms below.\n\nshape\n\nskewness: right-skewed, left-skewed, symmetric\nmodality: unimodal, bimodal, multimodal, uniform\n\ncenter: mean (mean), median (median)\nspread: range (range), standard deviation (sd), interquartile range (IQR)\noutliers: observations outside the pattern of the data"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STA 199: Introduction to Data Science",
    "section": "",
    "text": "week\n      dow\n      date\n      what\n      topic\n      prepare\n      slides\n      ae\n      hw\n      lab\n      exam\n      project\n      notes\n    \n  \n  \n    1\nW\nJan 11\nLab 0\nHello R!\n\n\n\n\n\n\n\n\n    \nF\nJan 13\nLec 1\nWelcome to STA 199\n\n\n\n\n\n\n\n\n    2\nM\nJan 16\n\nNo class -- Martin Luther King Jr. Day\n\n\n\n\n\n\n\n\n    \nW\nJan 18\nLec 2\nIntro to statistics and plotting\n\n\n\n\n\n\n\n\n    \nF\nJan 20\nLec 3\nVisualizing various types of data\n\n\n\n\n\n\n\n\n    3\nM\nJan 23\nLab 1\nData visualization\n\n\n\n\n\n\n\n\n    \nW\nJan 25\nLec 4\nGrammar of data wrangling\n\n\n\n\n\n\n\n\n    \nF\nJan 27\nLec 5\nWorking with multiple data frames\n\n\n\n\n\n\n\n\n    4\nM\nJan 30\nLab 2\n\n\n\n\n\n\n\n\n\n    \nW\nFeb 1\nLec 6\n\n\n\n\n\n\n\n\n\n    \nF\nFeb 3\nLec 7\n\n\n\n\n\n\n\n\n\n    5\nM\nFeb 6\nLab\n\n\n\n\n\n\n\n\n\n    \nW\nFeb 8\nLec 8\n\n\n\n\n\n\n\n\n\n    \nF\nFeb 10\nLec 9\n\n\n\n\n\n\n\n\n\n    6\nM\nFeb 13\nLab\n\n\n\n\n\n\n\n\n\n    \nW\nFeb 15\nLec 10\n\n\n\n\n\n\n\n\n\n    \nF\nFeb 17\nLec 11\n\n\n\n\n\n\n\n\n\n    7\nM\nFeb 20\nLab\n\n\n\n\n\n\n\n\n\n    \nW\nFeb 22\nLec 12\n\n\n\n\n\n\n\n\n\n    \nF\nFeb 24\nLec 13\n\n\n\n\n\n\n\n\n\n    8\nM\nFeb 27\nLab\n\n\n\n\n\n\n\n\n\n    \nW\nMar 1\nLec 14\n\n\n\n\n\n\n\n\n\n    \nF\nMar 3\nLec 15\n\n\n\n\n\n\n\n\n\n    9\nM\nMar 6\nLab\n\n\n\n\n\n\n\n\n\n    \nW\nMar 8\nLec 16\n\n\n\n\n\n\n\n\n\n    \nF\nMar 10\nLec 17\n\n\n\n\n\n\n\n\n\n    10\nM\nMar 13\n\nNo class -- Spring Break\n\n\n\n\n\n\n\n\n    \nW\nMar 15\n\nNo class -- Spring Break\n\n\n\n\n\n\n\n\n    \nF\nMar 17\n\nNo class -- Spring Break\n\n\n\n\n\n\n\n\n    11\nM\nMar 20\nLab\n\n\n\n\n\n\n\n\n\n    \nW\nMar 22\nLec 18\n\n\n\n\n\n\n\n\n\n    \nF\nMar 24\nLec 19\n\n\n\n\n\n\n\n\n\n    12\nM\nMar 27\nLab\n\n\n\n\n\n\n\n\n\n    \nW\nMar 29\nLec 20\n\n\n\n\n\n\n\n\n\n    \nF\nMar 31\nLec 21\n\n\n\n\n\n\n\n\n\n    13\nM\nApr 3\nLab\n\n\n\n\n\n\n\n\n\n    \nW\nApr 5\nLec 22\n\n\n\n\n\n\n\n\n\n    \nF\nApr 7\nLec 23\n\n\n\n\n\n\n\n\n\n    14\nM\nApr 10\nLab\n\n\n\n\n\n\n\n\n\n    \nW\nApr 12\nLec 24\n\n\n\n\n\n\n\n\n\n    \nF\nApr 14\nLec 25\n\n\n\n\n\n\n\n\n\n    15\nM\nApr 17\nLab\n\n\n\n\n\n\n\n\n\n    \nW\nApr 19\nLec 26\n\n\n\n\n\n\n\n\n\n    \nF\nApr 21\nLec 27\n\n\n\n\n\n\n\n\n\n    16\nM\nApr 24\nLab\n\n\n\n\n\n\n\n\n\n    \nW\nApr 26\nLec 28"
  },
  {
    "objectID": "ae/ae-02.html#get-to-know-the-data",
    "href": "ae/ae-02.html#get-to-know-the-data",
    "title": "Intro statistics and plotting",
    "section": "Get to know the data",
    "text": "Get to know the data\n\nExercise 1:\nLook at the data, how many observations are there? How many variables?\n[answer here]\n\n\ndistinct() and count()\nLet’s use distinct to find the number of different time points water was sampled.\n\ndistinct(flint, draw)\n\n# A tibble: 3 × 1\n  draw  \n  <chr> \n1 first \n2 second\n3 third \n\n\nHow many unique homes are in the data set?\n\nflint |>\n  distinct(id)\n\n# A tibble: 269 × 1\n      id\n   <dbl>\n 1     1\n 2     2\n 3     4\n 4     5\n 5     6\n 6     7\n 7     8\n 8     9\n 9    12\n10    13\n# … with 259 more rows\n\n\n\nA note on pipes |> and %>%."
  },
  {
    "objectID": "ae/ae-03.html",
    "href": "ae/ae-03.html",
    "title": "Visualizing various types of data",
    "section": "",
    "text": "Join GitHub organization if you haven’t already\nThis ae is not due for a grade, but when drop/add ends, aes will be graded for completion. You turn in your aes by committing to GitHub."
  },
  {
    "objectID": "ae/ae-03.html#getting-started",
    "href": "ae/ae-03.html#getting-started",
    "title": "Visualizing various types of data",
    "section": "Getting started",
    "text": "Getting started\nClone your ae-3-username repo from the GitHub organization. If you don’t have an ae-3-username repo, you have not yet accepted your course org invite. You can still clone the public repo but note that you won’t be able to push."
  },
  {
    "objectID": "ae/ae-03.html#today",
    "href": "ae/ae-03.html#today",
    "title": "Visualizing various types of data",
    "section": "Today",
    "text": "Today\nBy the end of today you will…\n\ncreate and interpret scatter plots, bar plots, stacked bar plots, facet plots and be able to look up and use other ggplot geometries"
  },
  {
    "objectID": "ae/ae-03.html#load-packages",
    "href": "ae/ae-03.html#load-packages",
    "title": "Visualizing various types of data",
    "section": "Load packages",
    "text": "Load packages\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(viridis) # we'll use to customize colors"
  },
  {
    "objectID": "ae/ae-03.html#plots",
    "href": "ae/ae-03.html#plots",
    "title": "Visualizing various types of data",
    "section": "Plots",
    "text": "Plots\nThe procedure used to construct plots can be summarized using the code below.\n\nggplot(data = [data set], \n       mapping = aes(x = [x-variable], y = [y-variable])) +\n   geom_xxx() +\n   geom_xxx() + \n  other options\n\n\nExample: bar plot\n\nggplot(data = penguins, \n       mapping = aes(x = species)) +\n  geom_bar() +\n  labs(x = \"Species\", y = \"Count\", title = \"Palmer penguin species\")\n\n\n\n\n\n\nExample: stacked bar plot\n\npenguins |>\n  filter(!is.na(sex)) |>\nggplot(mapping = aes(x = species, fill = sex)) +\n  geom_bar(position = \"fill\") +\n  labs(x = \"Species\", y = \"Count\", title = \"Palmer penguin species\")\n\n\n\n\n\nExercise 1\n\ntry with and without position = \"fill\". What does this argument do?\n\n\n\n\nAesthetics\nAn aesthetic is a visual property in your plot that is derived from the data.\n\nshape\ncolor\nsize\nalpha (transparency)\n\nWe can map a variable in our data set to a color, a size, a transparency, and so on. The aesthetics that can be used with each geom_ can be found in the documentation.\nHere we are going to use the viridis package, which has more color-blind accessible colors. scale_color_viridis specifies which colors you want to use. You can learn more about the options here.\nOther sources that can be helpful in devising accessible color schemes include Color Brewer, the Wes Anderson package, and the cividis package.\nThis visualization shows a scatterplot of bill length (x variable) and flipper length (y variable). Using the viridis function, we make points for male penguins purple and female penguins yellow. We also add axes labels and a title.\n\nggplot(data = penguins, \n       mapping = aes(x = bill_length_mm, y = flipper_length_mm,\n                     color = sex)) + \n   geom_point() + \n   labs(title = \"Flipper length vs bill length\",\n        x = \"Bill length (mm)\", y = \"Flipper length (mm)\") + \n        scale_color_viridis(discrete=TRUE, option = \"D\", name=\"Sex\")\n\nWarning: Removed 11 rows containing missing values (geom_point).\n\n\n\n\n\nIf you want to change, for exaple, color or fill for all points regardless of the data, you can pass the argument color = or fill = to the geometry itself. **Properties of the plot that are based on the data must be passed to the aes() function.\n\nExercise 2\n\nCreate a new code chunk and paste the code above into it. Remove the scale_color_viridis layer. Next change the above color to \"steelblue\". Since you are hard-coding the color of all the points, this must happen inside the geometry not the aesthetic. On the other hand, color = sex only works inside aes().\n\n\n\nExercise 3\n\nWhat will the visualization look like below? Write your answer down before running the code.\n\n\nggplot(data = penguins, \n       mapping = aes(x = bill_length_mm, y = flipper_length_mm,\n                     shape = sex)) + \n   geom_point() + \n   labs(title = \"Flipper length vs bill length\",\n        x = \"Bill length (mm)\", y = \"Flipper length (mm)\") + \n        scale_color_viridis(discrete = TRUE, option = \"D\", name=\"Sex\")\n\n\n\n\nA note on colors\nTo work with the viridis color palettes…\n\nscale_color_viridis() to change color\nscale_fill_viridis() to change fill\nargument discrete = TRUE to use a discrete color palette\nargument discrete = FALSE to use a continuous color palette\n\nTo use your own custom color palettes, you can use scale_color_manual() and scale_fill_manual(), but more on this later.\n\n\nFaceting\nWe can use smaller plots to display different subsets of the data using faceting. This is helpful to visualize \\(>2\\) variables and examine conditional relationships.\n\npenguins |>\n  ggplot(aes(x = bill_length_mm, flipper_length_mm, color = island)) +\n  geom_point() +\n  facet_wrap(~ species) +\n  labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\", color = \"Island\")\n\nWarning: Removed 2 rows containing missing values (geom_point).\n\n\n\n\n\n\npenguins |>\n  ggplot(aes(x = bill_length_mm, flipper_length_mm, color = species)) +\n  geom_point() +\n  facet_wrap(~ island) +\n  labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\", color = \"Island\") +\n  scale_color_viridis(discrete = TRUE)\n\nWarning: Removed 2 rows containing missing values (geom_point)."
  },
  {
    "objectID": "ae/ae-03.html#ggplot-activity",
    "href": "ae/ae-03.html#ggplot-activity",
    "title": "Visualizing various types of data",
    "section": "ggplot activity",
    "text": "ggplot activity\n\n# code here"
  },
  {
    "objectID": "ae/ae-03.html#additional-resources",
    "href": "ae/ae-03.html#additional-resources",
    "title": "Visualizing various types of data",
    "section": "Additional resources",
    "text": "Additional resources\n\nFind more ggplot geometries at https://ggplot2.tidyverse.org/reference/"
  },
  {
    "objectID": "prepare/prep5.html",
    "href": "prepare/prep5.html",
    "title": "Prepare",
    "section": "",
    "text": "R4DS: Chp 20 - Joins - Sections 20.1 - 20.4\n\n⌨️ Watch:\n\nWorking with multiple data frames"
  },
  {
    "objectID": "prepare/prep4.html",
    "href": "prepare/prep4.html",
    "title": "Prepare",
    "section": "",
    "text": "R4DS: Chp 4 - Data transformation\nIMS: Chp 5 - Exploring numerical data\n\n⌨️ Watch:\n\nGrammar of data wrangling\nWorking with a single data frame"
  },
  {
    "objectID": "prepare/prep3.html",
    "href": "prepare/prep3.html",
    "title": "Prepare",
    "section": "",
    "text": "IMS: Chp 4 - Exploring categorical data\nIMS: Chp 5 - Exploring numerical data\n\n⌨️ Watch:\n\nVisualizing numerical data\nVisualizing categorical data"
  }
]