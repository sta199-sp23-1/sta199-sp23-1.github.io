{
  "hash": "5f8b8d617c7830bf985688072f5be7ae",
  "result": {
    "markdown": "---\ntitle: \"Welcome to STA 199\"\nauthor: \"Dr. Alexander Fisher\"\ndate: \"January 13, 2023\"\nformat: \n    revealjs:\n      smaller: true\n---\n\n\n## Meet the professor\n\n\n::: {.cell}\n\n:::\n\n\n::: columns\n::: {.column width=\"50%\"}\n-   Alexander Fisher\n-   [alexander.fisher\\@duke.edu](alexander.fisher@duke.edu)\n-   [Office hours](https://docs.google.com/spreadsheets/d/16gf9dQ_41V628vKvFdS95JBOUKYSjuxJBo7OzPye-SI/edit?usp=sharing): Wednesday 1:30-3:30pm in Old Chem 207\n-   A little bit about my research...\n:::\n\n::: {.column width=\"50%\"}\n::: fragment\n![](images/alignment.png){fig-align=\"center\" width=\"260\"}\n\n![](images/basic_tree.png){fig-align=\"center\" width=\"320\"}\n:::\n:::\n:::\n\n## Why data science?\n\n**Data science** turns data into knowledge.\n\n. . .\n\n###### Examples\n\n. . .\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/examples.png)\n:::\n\n::: {.column width=\"50%\"}\n![](images/challenger.jpg)\n:::\n:::\n\n## Course overview\n\n![](images/intersection.png)\n\n. . .\n\n::: callout-important\nNo programming experience required.\n:::\n\n## Learning objectives\n\nBy the end of this course you will be able to...\n\n-   learn to explore, visualize, and analyze data in a reproducible manner\n-   gain experience in data wrangling and munging, exploratory data analysis, predictive modeling, and data visualization\n-   work on problems and case studies inspired by and based on real-world questions and data\n-   learn to effectively communicate results through written assignments and project presentation\n-   develop your own question about a data set of your choosing and use techniques from this class to answer the question\n\n## Assessments\n\n-   Prepare: short videos, reading assignments, and lectures.\n-   Practice: **application exercises**\n-   Perform: **labs**, **homework**, **exams**, and the **project**.\n\n| Category              | Percentage |\n|-----------------------|------------|\n| Homework              | 30%        |\n| Labs                  | 15%        |\n| Project               | 15%        |\n| Exam 01               | 18%        |\n| Exam 02               | 18%        |\n| Application Exercises | 4%         |\n\n# Course Policies\n\n## Community\n\nUphold the **Duke Community Standard**:\n\n> I will not lie, cheat, or steal in my academic endeavors;\n>\n> I will conduct myself honorably in all my endeavors; and\n>\n> I will act if the Standard is compromised.\n\nAny violations in academic honesty standards as outlined in the Duke Community Standard and those specific to this course will automatically result in a 0 for the assignment and will be reported to the Office of Student Conduct for further action.\n\n### Learning environment\n\n-   Create a learning environment that is welcoming, inclusive, and accessible to everyone.\n-   Respect and honor each other.\n\n. . .\n\n### Team work policy\n\nThe final project and several labs will be completed in teams.\nAll group members are expected to participate equally.\nCommit history may be used to give individual team members different grades.\nYour grade may differ from the rest of your group.\n\n## Late policy\n\n-   Homeworks and labs can be turned in within 72 hours of the deadline for grade penalty (5% off per day).\n\n-   Exams and the final project cannot be turned in late and can only be excused under exceptional circumstances.\n\n-   The Duke policy for illness requires a short-term illness report or a letter from the Dean; except in emergencies, all other absenteeism must be approved in advance (e.g., an athlete who must miss class may be excused by prior arrangement for specific days).\n    For emergencies, email notification is needed at the first reasonable time.\n\n-   All exemptions will be handled by course coordinator, Ed Tam, at [sta199\\@duke.edu](sta199@duke.edu)\n\n-   Last minute coding/rendering issues will not be granted extensions.\n\n## Course toolkit\n\n-   course website: <https://sta199-sp23-1.github.io/>\n-   course organization (on GitHub): <https://github.com/sta199-sp23-1>\n-   slack: <https://sta199-sp23-001.slack.com>\n\n## Communication and missing class\n\nIf you have questions about homework/lab exercises, debugging, or any question about course materials\n\n-   come to [office hours](https://docs.google.com/spreadsheets/d/16gf9dQ_41V628vKvFdS95JBOUKYSjuxJBo7OzPye-SI/edit?usp=sharing)\n-   post to a public channel in slack.\n\nWhen you need help debugging, it is essential you provide a reproducible example of the code that caused the error.\nScreenshots, or pasting a short snippet of the offending code is helpful!\n\n. . .\n\n::: callout-warning\nThe teaching team will not debug via email.\n:::\n\n. . .\n\nWhen you miss a class:\n\n-   watch the recorded lecture on Sakai\n-   come to office hours or post in a public channel of slack if you have questions\n\n## Jump in\n\n-   Check your email / sakai announcements for slack invite.\n-   Post on slack\n-   Accept your [course organization invite](https://github.com/orgs/sta199-sp23-1/)\n\n![](images/github2-02.png)\n\n-   Don't have an invite?\n    Follow the lab 0 instructions to create a `lab-0-username` repo [here](https://sta199-sp23-1.github.io/slides/lab0-welcome.html#/title-slide).\n\n. . . \n\n- Demo: [ae1](https://sta199-sp23-1.github.io/ae/ae-01.html)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}