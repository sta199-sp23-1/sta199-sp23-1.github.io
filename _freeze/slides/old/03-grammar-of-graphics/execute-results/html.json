{
  "hash": "546f48cad48bd2e147b5d4959c2754b9",
  "result": {
    "markdown": "---\ntitle: \"Grammar of graphics\"\nsubtitle: \"Lecture 3\"\ndate: \"September 6, 2022\"\nformat: revealjs\n---\n\n\n# Warm up\n\n\n::: {.cell}\n\n:::\n\n\n## Announcements\n\n-   Office hours start this week\n-   \"Graded\" AEs also start this week -- commit and push to your repo within 3 days of AE\n\n## **Examining data visualization** {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\nDiscuss the following for the visualization.\n\n-   What is the visualization trying to show?\n\n-   What is effective, i.e. what is done well?\n\n-   What is ineffective, i.e. what could be improved?\n\n-   What are you curious about after looking at the visualization?\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_63c76da8\" style=\"bottom:0;left:0;\" data-warnwhen=\"0\">\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">04</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n![Source: [Twitter](https://twitter.com/reina_sabah/status/1291509085855260672)](images/03/female-heights.png){fig-align=\"center\"}\n:::\n:::\n\n## Questions from the prepare materials?\n\n\n```{=html}\n<iframe src=\"https://app.sli.do/event/wCtRaWXjUCSQGm1untvmE5/embed/polls/8a814dd9-a20e-4a10-911c-cde825e98c35\" width=\"900\" height=\"600\"></iframe>\n```\n\n# Application exercise\n\n## `ae-01`\n\n::: appex\n-   Go to the course [GitHub org](https://github.com/sta199-f22-1) and find your `ae-01` (repo name will be suffixed with your GitHub name).\n-   Clone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.\n-   Render, commit, and push your edits by the AE deadline -- 3 days from today.\n:::\n\n## Recap of AE {.smaller}\n\n-   Construct plots with `ggplot()`.\n-   Layers of ggplots are separated by `+`s.\n-   The formula is (almost) always as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()\n```\n:::\n\n\n-   Aesthetic attributes of a geometries (color, size, transparency, etc.) can be **map**ped to variables in the data or **set** by the user, e.g. `color = binary` vs. `color = \"pink\"`.\n-   Use `facet_wrap()` when faceting (creating small multiples) by one variable and `facet_grid()` when faceting by two variables.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.3.5/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.3.5/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}