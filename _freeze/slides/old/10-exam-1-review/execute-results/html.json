{
  "hash": "3972a51b8bf98c8cc46bb831369a2bb2",
  "result": {
    "markdown": "---\ntitle: \"Exam 1 Review\"\nsubtitle: \"Lecture 10\"\ndate: \"September 29, 2022\"\nformat: revealjs\n---\n\n\n# Warm up\n\n\n::: {.cell}\n\n:::\n\n\n## While you wait for class to begin...\n\nOpen your `ae-07` project in RStudio, render your document, and commit and push.\n\n## Announcements {.smaller}\n\n-   Exam 1 is released on today at noon and is due at 2pm on Monday.\n\n    -   No TA OH during the exam.\n\n    -   I will have OH 4-5pm on Friday on Zoom: [bit.ly/minezoom](https://bit.ly/minezoom)\n\n    -   Any clarification questions must be **emailed to me** only.\n\n    -   No Slack use during the exam, even about non-exam related questions.\n\n# From last time\n\n## Continue from last time: `ae-07`\n\n::: appex\n-   Go to your container and open your `ae-07` project.\n-   Render, commit, and push.\n\n::: callout-important\nYou might see an error.\nRead it and do as it says!\n:::\n\n-   Pull.\n\n-   Once again, render, commit, and push.\n:::\n\n# Exam 1 review\n\n## Logistics questions {.smaller}\n\n-   **Can we use outside sources for our code on the exam as long as we cite where it's from.**\n\nYes!\nHowever, you should be striving the solve the questions in the style that we learned.\nFor example, ggplot2 is not the only plotting package in R.\nBut we expect you to use ggplot2 when making plots, not another system.\n\n. . .\n\n-   **Will content on lab 3 be on the exam? If so, will we be able to access an answer key at some point during the exam period?**\n\nYes, will be posted Friday at midnight.\n\n. . .\n\n-   **When asked to replicate a graph, should we also adjust fig height/width?**\n\nYes, though you shouldn't worry about matching it exactly.\nMore that it should be legible and if the plot you're replicating is wider than taller, the plot you're submitting should be as well.\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n## Operators in R: `<-` vs. `=` {.smaller}\n\n-   `<-`: assignment\n-   `=`: equals\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# good\nx <- 2\n\n# works, but bad\nx = 2\n\n# doesn't work\ndf <- df |>\n  mutate(x <- 2)\n\n# good\ndf <- df |>\n  mutate(x = 2)\n```\n:::\n\n\n## Operators in R: `=` vs. `==` vs. `%in%` {.smaller}\n\n-   `==`: is equal to\n-   `%in%`: in\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx = c(1, 2, 3)\ny = c(3, 4, 5)\n\n# do elements in x equal those in y?\n# check if each element in x is equal to the \n# corresponding element in y\nx == y\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE FALSE FALSE\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# are any elements in x also in y?\n# check if any element in x is equal to any element in y\nx %in% y\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE FALSE  TRUE\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set x equal to y\nx = y\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3 4 5\n```\n:::\n:::\n\n\n## `%in%` vs `==` {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- tibble(\n  x = c(1, 2, 3, 4),\n  y = c(\"a\", \"b\", \"c\", \"d\")\n  )\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n      x y    \n  <dbl> <chr>\n1     1 a    \n2     2 b    \n3     3 c    \n4     4 d    \n```\n:::\n\n```{.r .cell-code}\n# Filter for x is 2\ndf |>\n  filter(x == 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n      x y    \n  <dbl> <chr>\n1     2 b    \n```\n:::\n:::\n\n\n## `%in%` vs `==` {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for x is 2 or 3\ndf |>\n  filter(x == c(2, 3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 2\n# … with 2 variables: x <dbl>, y <chr>\n```\n:::\n\n```{.r .cell-code}\n# Filter for x is 2 or 3\ndf |>\n  filter(x %in% c(2, 3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n      x y    \n  <dbl> <chr>\n1     2 b    \n2     3 c    \n```\n:::\n:::\n\n\n## Operators in R: `|>` vs. `%>%`\n\n-   `|>`: pipe operator (newer -- what we've been using in class)\n-   `%>%`: pipe operator (older -- what you see in the videos)\n-   They *effectively* do the same thing\n\n## Interpreting data visualizations I {.smaller}\n\n::: question\nProvide a 1-2 sentence interpretation of the relationship between city and highway mileage of cars.\n:::\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  mpg,\n  aes(x = cty, y = hwy)\n) +\n  geom_jitter(alpha = 0.5) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(\n    x = \"City MPG\", \n    y = \"Highway MPG\"\n  )\n```\n\n::: {.cell-output-display}\n![](10-exam-1-review_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n## Interpreting data visualizations II {.smaller}\n\n::: question\nProvide a 1-2 sentence interpretation of the relationship between city and highway mileage of cars, taking into consideration whether they're 4 wheel drive, front wheel drive, or rear wheel drive.\n:::\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  mpg,\n  aes(x = cty, y = hwy, color = drv)\n) +\n  geom_jitter(alpha = 0.5) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(\n    x = \"City MPG\", \n    y = \"Highway MPG\"\n  )\n```\n\n::: {.cell-output-display}\n![](10-exam-1-review_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n## `geom_jitter()` vs. `geom_point()` {.smaller}\n\n::: question\nThe same dataset is plotted with `geom_jitter()` and `geom_point()` below.\nWhy do the two plots look different?\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-exam-1-review_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-exam-1-review_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## `distinct()` {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg |>\n  select(cty, hwy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 234 × 2\n     cty   hwy\n   <int> <int>\n 1    18    29\n 2    21    29\n 3    20    31\n 4    21    30\n 5    16    26\n 6    18    26\n 7    18    27\n 8    18    26\n 9    16    25\n10    20    28\n# … with 224 more rows\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg |>\n  distinct(cty, hwy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 78 × 2\n     cty   hwy\n   <int> <int>\n 1    18    29\n 2    21    29\n 3    20    31\n 4    21    30\n 5    16    26\n 6    18    26\n 7    18    27\n 8    16    25\n 9    20    28\n10    19    27\n# … with 68 more rows\n```\n:::\n:::\n\n:::\n:::\n\n## Working with categorical data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntshirts <- tibble(\n  size = c(\"Large\", \"Medium\", \"Large\", \"Small\", \"Small\", \"Medium\", \"Small\", \"X-Large\", \"X-Small\"),\n  price = c(10, 15, 12, 18, 22, 13, 67, 12, 10)\n)\n\nggplot(tshirts, aes(x = size)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](10-exam-1-review_files/figure-revealjs/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n\n## `fct_relevel()`\n\nReorder levels based on an order you provide\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntshirts |>\n  mutate(size = fct_relevel(size, \"X-Small\", \"Small\", \"Medium\", \"Large\", \"X-Large\")) |>\n  ggplot(aes(x = size)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](10-exam-1-review_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n\n## `fct_reorder()`\n\nReorder levels based on another variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntshirts |>\n  mutate(size = fct_reorder(size, price, mean)) |>\n  ggplot(aes(x = size)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](10-exam-1-review_files/figure-revealjs/unnamed-chunk-34-1.png){width=960}\n:::\n:::\n\n\n## `fct_other()`\n\nLump some levels to \"Other\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntshirts |>\n  mutate(size = fct_other(size, keep = c(\"Small\", \"Medium\", \"Large\"))) |>\n  ggplot(aes(x = size)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](10-exam-1-review_files/figure-revealjs/unnamed-chunk-36-1.png){width=960}\n:::\n:::\n\n\n## Pivoting and joining\n\nLet's visit [https://www.garrickadenbuie.com/project/tidyexplain](https://www.garrickadenbuie.com/project/tidyexplain/)!\n",
    "supporting": [
      "10-exam-1-review_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}