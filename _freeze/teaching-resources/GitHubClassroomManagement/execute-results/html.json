{
  "hash": "a8efeecdf1e43a435c31b8c94a684161",
  "result": {
    "markdown": "---\ntitle: \"GitHub Classroom Management\"\nauthor: \"Alexander Fisher\"\nformat: html\neval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ghclass)\nlibrary(tidyverse)\n```\n:::\n\n\nEach code chunk below is designed to be self-contained (no dependency between chunks).\n\n## To make new repos\n\n<!-- ############################################## -->\n\n<!-- #### To make new repos -->\n\n<!-- ############################################## -->\n\n1.  Create a new repo in the organization called \"lab1\" with a `README.md`\n2.  Push to \"lab1\": `lab1.qmd`, `data/any_relevant_data.csv` and optionally `lab1.Rproj`.\n3.  Select the repository, click \"Settings\" and check \"Template repository\".\n4.  Follow the code below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# initial assignment creation\norg = \"sta199-sp23-1\"\nusernames = ghclass::org_members(org)\n\n## edit this:\nassignment_template_repo = \"lab0_template\"\n\nghclass::org_create_assignment(\n  org = org,\n  repo = paste0(assignment_template_repo, \"-\", usernames),\n  user = usernames,\n  source_repo = paste0(org, \"/\", assignment_template_repo)\n)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\nFeel free to test lab creation on my dummy account \"fishswish\" or on your own account with the code below\n\n\n::: {.cell}\n\n```{.r .cell-code}\norg = \"sta199-sp23-1\"\nusernames = \"fishswish\"\nassignment_template_repo = \"lab0_template\"\nghclass::org_create_assignment(\n  org = org,\n  repo = paste0(assignment_template_repo, \"-\", usernames),\n  user = usernames,\n  source_repo = paste0(org, \"/\", assignment_template_repo)\n)\n```\n:::\n\n\nIt's possible some people are not in the organization and will need to be have additional repos created manually following the steps below:\n\n1.  go to `template repo` and click the green \"Use this template\" -\\> \"Create a new repository\" -\\> name it \"lab-x-their_github_username\" -\\> leave \"Private\" selected and click \"Create repository from template\"\n\n2.  next in the new repo go to \"Settings\" -\\> \"Collaborators and Teams\" -\\> click the green \"Add people\" button and type in their GitHub username.\n\n3.  next make sure to go to the \"People\" section of the organization and select \"Invite member\" so they join the organization too.\n    Owning a repo in the org just makes them an outside collaborator.\n    They still have to actually join the org\n\n## Oops. File management after you create repos\n\nThe magic happens in `repo_add_file()`.\nBe sure to edit/check each item below, specifically:\n\n-   `org` as appropriate\n-   `repos_to_modify` object\n-   arguments to `repo_add_file()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\norg = \"sta199-sp23-1\"\nusernames = ghclass::org_members(org)\n\n# get all existing labX repos\nrepos_to_modify = org_repos(org, filter = \"lab0-\") # edit this \"filter\"\n\nghclass::repo_add_file(repo = repos_to_modify,\n                       branch = \"main\",\n                       repo_folder = \"data/\", # edit this to be path to folder in repo\n                       message = \"commit message here\", # update to be a meaningful commit message\n                       file = \"~/Desktop/class/data/file.csv\", # update local path to the file you want to add\n                       overwrite = FALSE) # if you want to overwrite or not\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}