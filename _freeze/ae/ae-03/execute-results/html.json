{
  "hash": "8ecf350270e3ce6a29791a404a5f32e9",
  "result": {
    "markdown": "---\ntitle: \"Visualizing various types of data\"\nsubtitle: \"STA 199\"\nformat: html\n---\n\n\n## Bulletin\n\n-   Join [GitHub organization](https://github.com/sta199-sp23-1) if you haven't already\n-   This `ae` is not due for a grade, but when drop/add ends, aes will be graded for completion. You turn in your `aes` by committing to GitHub.\n\n## Getting started\n\nClone *your* `ae3-username` repo from the [GitHub organization](https://github.com/sta199-sp23-1/).\nIf you don't have an `ae3-username` repo, you have not yet accepted your course org invite.\nYou can still clone the *public repo* but note that you won't be able to push.\n\n## Today\n\nBy the end of today you will...\n\n- create and interpret scatter plots, bar plots, stacked bar plots, facet plots and be able to look up and use other ggplot geometries\n\nBut first, we'll finish [ae2](/ae/ae-02.html)\n\n## Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(viridis) # we'll use to customize colors\n```\n:::\n\n\n\n## Plots\n\nThe procedure used to construct plots can be summarized using the code below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = [data set], \n       mapping = aes(x = [x-variable], y = [y-variable])) +\n   geom_xxx() +\n   geom_xxx() + \n  other options\n```\n:::\n\n\n### Example: bar plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, \n       mapping = aes(x = species)) +\n  geom_bar() +\n  labs(x = \"Species\", y = \"Count\", title = \"Palmer penguin species\")\n```\n\n::: {.cell-output-display}\n![](ae-03_files/figure-html/ex-bar-plot-1.png){width=672}\n:::\n:::\n\n\n### Example: stacked bar plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  filter(!is.na(sex)) |>\nggplot(mapping = aes(x = species, fill = sex)) +\n  geom_bar(position = \"fill\") +\n  labs(x = \"Species\", y = \"Count\", title = \"Palmer penguin species\")\n```\n\n::: {.cell-output-display}\n![](ae-03_files/figure-html/bar-plot-fill-1.png){width=672}\n:::\n:::\n\n\n\n#### Exercise 1 \n\n- try with and without `position = \"fill\"`. What does this argument do?\n\n### Aesthetics\n\nAn aesthetic is a visual property in your plot that is **derived from the data**.\n\n- shape\n- color\n- size\n- alpha (transparency)\n\nWe can map a variable in our data set to a color, a size, a transparency, and so on. The aesthetics that can be used with each `geom_` can be found in the documentation.\n\nHere we are going to use the viridis package, which has more color-blind accessible colors. `scale_color_viridis` specifies which colors you want to use. You can learn more about the options [here](https://www.rdocumentation.org/packages/viridis/versions/0.5.1/topics/scale_color_viridis).\n\nOther sources that can be helpful in devising accessible color schemes include [Color Brewer](https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3), the [Wes Anderson package](https://github.com/karthik/wesanderson), and the [cividis package](https://github.com/marcosci/cividis).\n\nThis visualization shows a scatterplot of bill length (x variable) and flipper length (y variable). Using the viridis function, we make points for male penguins purple and female penguins yellow. We also add axes labels and a title.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, \n       mapping = aes(x = bill_length_mm, y = flipper_length_mm,\n                     color = sex)) + \n   geom_point() + \n   labs(title = \"Flipper length vs bill length\",\n        x = \"Bill length (mm)\", y = \"Flipper length (mm)\") + \n        scale_color_viridis(discrete=TRUE, option = \"D\", name=\"Sex\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 11 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](ae-03_files/figure-html/aesthetic-1-1.png){width=672}\n:::\n:::\n\n\nIf you want to change, for exaple, color or fill for *all points* regardless of the data, you can pass the argument `color = ` or `fill = ` to the geometry itself. **Properties of the plot that are based on the data must be passed to the `aes()` function.\n\n#### Exercise 2\n\n- Create a new code chunk and paste the code above into it. Remove the `scale_color_viridis` layer. Next change the above color to `\"steelblue\"`. Since you are hard-coding the color of all the points, this must happen *inside the geometry* not the aesthetic. On the other hand, `color = sex` only works inside `aes()`. \n\n#### Exercise 3\n\n- What will the visualization look like below? Write your answer \ndown before running the code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, \n       mapping = aes(x = bill_length_mm, y = flipper_length_mm,\n                     shape = sex)) + \n   geom_point() + \n   labs(title = \"Flipper length vs bill length\",\n        x = \"Bill length (mm)\", y = \"Flipper length (mm)\") + \n        scale_color_viridis(discrete = TRUE, option = \"D\", name=\"Sex\")\n```\n:::\n\n\n\n### A note on colors\n\nTo work with the `viridis` color palettes...\n\n- `scale_color_viridis()` to change `color`\n- `scale_fill_viridis()` to change `fill`\n- argument `discrete = TRUE` to use a discrete color palette\n- argument `discrete = FALSE` to use a continuous color palette\n\nTo use your own custom color palettes, you can use `scale_color_manual()` and `scale_fill_manual()`, but more on this later.\n\n### Faceting\n\nWe can use smaller plots to display different subsets of the data using faceting. This is helpful to visualize $>2$ variables and examine conditional relationships.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  ggplot(aes(x = bill_length_mm, flipper_length_mm, color = island)) +\n  geom_point() +\n  facet_wrap(~ species) +\n  labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\", color = \"Island\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](ae-03_files/figure-html/faceting-1-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  ggplot(aes(x = bill_length_mm, flipper_length_mm, color = species)) +\n  geom_point() +\n  facet_wrap(~ island) +\n  labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\", color = \"Species\") +\n  scale_color_viridis(discrete = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](ae-03_files/figure-html/faceting-2-1.png){width=672}\n:::\n:::\n\n\n## `ggplot` activity\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\n## Additional resources\n\n- Find more ggplot geometries at [https://ggplot2.tidyverse.org/reference/](https://ggplot2.tidyverse.org/reference/)\n\n\n",
    "supporting": [
      "ae-03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}