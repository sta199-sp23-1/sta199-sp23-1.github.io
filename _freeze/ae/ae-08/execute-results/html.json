{
  "hash": "d433cfdb5282b11b548748ac642da84b",
  "result": {
    "markdown": "---\ntitle: \"Spatial data\"\nsubtitle: \"STA 199\"\neditor: source\nformat: html\n---\n\n\n## Bulletin\n\n-   this `ae` is due for grade (48 hours from class). To turn in, simply push to GitHub\n-   check your `ae` grades in Sakai\n-   [lab-3](/labs/lab-3.html) due Friday at 5:00pm\n-   [exam 1](/exams/exam1.html) released Friday at 5:00pm\n\n## Getting started\n\nClone *your* `ae8-username` repo from the [GitHub organization](https://github.com/sta199-sp23-1/).\n\n## Today\n\nBy the end of today you will...\n\n- understand spatial data frame structure\n- be able to create a visualization from a spatial data frame\n\n\n## Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\n```\n:::\n\n\n## Notes\n\n**Spatial data is different.**\n\nOur typical \"tidy\" dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# … with 224 more rows\n```\n:::\n:::\n\n\nA new simple feature object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnc <- st_read(\"data/nc_regvoters.shp\", quiet = TRUE)\nnc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 100 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965\nGeodetic CRS:  NAD27\nFirst 10 features:\n      county   dem   rep lib  unaf  male female  total\n1   ALAMANCE 38209 35967 670 35196 44651  54529 110042\n2  ALEXANDER  4772 11750 123  7967 10947  11768  24612\n3  ALLEGHANY  2030  3005  33  2466  3319   3548   7534\n4      ANSON  9130  2858  38  3599  5800   6980  15625\n5       ASHE  4261  8804 102  6232  8609   9525  19399\n6      AVERY  1343  6994  55  3673  5283   5829  12065\n7   BEAUFORT 10883 11873 124  9426 13591  16127  32306\n8     BERTIE  8178  1629  36  2835  5310   6610  12678\n9     BLADEN  9847  5005  77  6784  9472  11227  21713\n10 BRUNSWICK 26797 46557 618 42602 48199  55644 116574\n                         geometry\n1  MULTIPOLYGON (((-79.24619 3...\n2  MULTIPOLYGON (((-81.10889 3...\n3  MULTIPOLYGON (((-81.23989 3...\n4  MULTIPOLYGON (((-79.91995 3...\n5  MULTIPOLYGON (((-81.47276 3...\n6  MULTIPOLYGON (((-81.94135 3...\n7  MULTIPOLYGON (((-77.10377 3...\n8  MULTIPOLYGON (((-76.78307 3...\n9  MULTIPOLYGON (((-78.2615 34...\n10 MULTIPOLYGON (((-78.65572 3...\n```\n:::\n:::\n\n\n#### Exercise 1\n\nWhat differences do you observe when comparing a typical tidy\ndata frame to the new simple feature object?\n\n### Simple features\n\nA **simple feature** is a standard, formal way to describe how real-world \nspatial objects (country, building, tree, road, etc) can be represented by a \ncomputer. \n\nThe package `sf` implements simple features and other spatial functionality \nusing **tidy** principles. Simple features have a geometry type. Common choices\nare shown in the slides associated with today's lecture. \n\nSimple features are stored in a data frame, with the geographic information \nin a column called `geometry`. Simple features can contain both spatial and\nnon-spatial data.\n\nAll functions in the `sf` package helpfully begin `st_`.\n\n### `sf` and `ggplot`\n\nTo read simple features from a file or database use the function `st_read()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnc <- st_read(\"data/nc_regvoters.shp\", quiet = TRUE)\n```\n:::\n\n\nNotice `nc` contains both spatial and nonspatial information.\n\nWe can build up a visualization layer-by-layer beginning with `ggplot`. Let's \nstart by making a basic plot of North Carolina counties.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnc |>\nggplot() +\n  geom_sf() +\n  labs(title = \"North Carolina counties\")\n```\n\n::: {.cell-output-display}\n![](ae-08_files/figure-html/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\nNow adjust the theme with `theme_bw()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(nc) +\n  geom_sf() +\n  labs(title = \"North Carolina counties with theme\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ae-08_files/figure-html/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\nNow adjust `color` in `geom_sf` to change the color of the county borders.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(nc) +\n  geom_sf(color = \"darkgreen\") +\n  labs(title = \"North Carolina counties with theme and aesthetics\") + \n  theme_bw() \n```\n\n::: {.cell-output-display}\n![](ae-08_files/figure-html/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\nThen increase the width of the county borders using `size`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(nc) +\n  geom_sf(color = \"darkgreen\", size = 1.5) +\n  labs(title = \"North Carolina counties with theme and aesthetics\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ae-08_files/figure-html/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\nFill the counties by specifying a `fill` argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(nc) +\n  geom_sf(color = \"darkgreen\", size = 1.5, fill = \"orange\") +\n  labs(title = \"North Carolina counties with theme and aesthetics\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ae-08_files/figure-html/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\nFinally, adjust the transparency using `alpha`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(nc) +\n  geom_sf(color = \"darkgreen\", size = 1.5, fill = \"orange\", alpha = 0.50) +\n  labs(title = \"North Carolina counties with theme and aesthetics\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ae-08_files/figure-html/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n\n### North Carolina Registered Voters\n\nThe `nc` data was obtained from the [NC Board of Elections](https://vt.ncsbe.gov/RegStat/) website and contains statistics on NC registered voters as of September 4, 2021.\n\nThe data set contains the following variables on all North Carolina counties, categories provided by the NCSBE:\n\n- `county`: county name\n- `dem`: total number registered Democrats\n- `rep`: total number registered Republicans\n- `lib`: total number registered Libertarians\n- `unaf`: total number unaffiliated\n- `male`: total number male voters\n- `female`: total number female voters\n- `total`: total number of registered voters in county\n- `geometry`: geographic coordinates of the county\n\nLet's use the NCBSE data to generate a **choropleth map** of the number of registered voters by county.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(nc) +\n  geom_sf(aes(fill = total)) + \n  labs(title = \"Number of Registered Voters by County\",\n       fill = \"# voters\") + \n  theme_bw() \n```\n\n::: {.cell-output-display}\n![](ae-08_files/figure-html/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\nIt is sometimes helpful to pick diverging colors,\n[colorbrewer2](http://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3)\ncan help.\n\nOne way to set fill colors is with `scale_fill_gradient()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(nc) +\n  geom_sf(aes(fill = total)) +\n  scale_fill_gradient(low = \"#fee8c8\", high = \"#7f0000\") +\n  labs(title = \"The Triangle and Charlotte have the Most Voters\",\n       fill = \"# cases\") + \n  theme_bw() \n```\n\n::: {.cell-output-display}\n![](ae-08_files/figure-html/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n### Challenges\n\n1. Different types of data exist (raster and vector).\n\n2. The coordinate reference system (CRS) matters.\n\n3. Manipulating spatial data objects is similar, but not identical to\nmanipulating data frames. \n\n## `dplyr`\n\n`sf` objects plays nicely with our earlier data wrangling functions from \n`dplyr`.\n\n### Example \n\nMaybe you are interested in the percentage of registered democrats/republicans in a county.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnc |>\n  mutate(pct_dem = dem / total,\n         pct_rep = rep / total) |>\n  select(pct_dem, pct_rep)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 100 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965\nGeodetic CRS:  NAD27\nFirst 10 features:\n     pct_dem   pct_rep                       geometry\n1  0.3472220 0.3268479 MULTIPOLYGON (((-79.24619 3...\n2  0.1938892 0.4774094 MULTIPOLYGON (((-81.10889 3...\n3  0.2694452 0.3988585 MULTIPOLYGON (((-81.23989 3...\n4  0.5843200 0.1829120 MULTIPOLYGON (((-79.91995 3...\n5  0.2196505 0.4538378 MULTIPOLYGON (((-81.47276 3...\n6  0.1113137 0.5796933 MULTIPOLYGON (((-81.94135 3...\n7  0.3368724 0.3675169 MULTIPOLYGON (((-77.10377 3...\n8  0.6450544 0.1284903 MULTIPOLYGON (((-76.78307 3...\n9  0.4535071 0.2305071 MULTIPOLYGON (((-78.2615 34...\n10 0.2298712 0.3993772 MULTIPOLYGON (((-78.65572 3...\n```\n:::\n:::\n\n\nGeometries are \"sticky\". They are kept until deliberately dropped using \n`st_drop_geometry`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnc |> \n  select(county, total) |> \n  st_drop_geometry()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          county  total\n1       ALAMANCE 110042\n2      ALEXANDER  24612\n3      ALLEGHANY   7534\n4          ANSON  15625\n5           ASHE  19399\n6          AVERY  12065\n7       BEAUFORT  32306\n8         BERTIE  12678\n9         BLADEN  21713\n10     BRUNSWICK 116574\n11      BUNCOMBE 201401\n12         BURKE  57481\n13      CABARRUS 148489\n14      CALDWELL  53537\n15        CAMDEN   7646\n16      CARTERET  52097\n17       CASWELL  15195\n18       CATAWBA 107060\n19       CHATHAM  57602\n20      CHEROKEE  22010\n21        CHOWAN   9685\n22          CLAY   9129\n23     CLEVELAND  66186\n24      COLUMBUS  35646\n25        CRAVEN  68989\n26    CUMBERLAND 201336\n27     CURRITUCK  21189\n28          DARE  30151\n29      DAVIDSON 111819\n30         DAVIE  31265\n31        DUPLIN  30586\n32        DURHAM 228967\n33     EDGECOMBE  33798\n34       FORSYTH 263103\n35      FRANKLIN  47475\n36        GASTON 150351\n37         GATES   8050\n38        GRAHAM   5944\n39     GRANVILLE  39468\n40        GREENE  10565\n41      GUILFORD 366867\n42       HALIFAX  36047\n43       HARNETT  79170\n44       HAYWOOD  45241\n45     HENDERSON  85808\n46      HERTFORD  14308\n47          HOKE  32002\n48          HYDE   3003\n49       IREDELL 129972\n50       JACKSON  28551\n51      JOHNSTON 144074\n52         JONES   6826\n53           LEE  37792\n54        LENOIR  35854\n55       LINCOLN  63412\n56         MACON  26868\n57       MADISON  16636\n58        MARTIN  15977\n59      MCDOWELL  29049\n60   MECKLENBURG 773683\n61      MITCHELL  11004\n62    MONTGOMERY  16821\n63         MOORE  72611\n64          NASH  66185\n65   NEW HANOVER 172138\n66   NORTHAMPTON  13139\n67        ONSLOW 107577\n68        ORANGE 105638\n69       PAMLICO   9157\n70    PASQUOTANK  27127\n71        PENDER  45024\n72    PERQUIMANS   9813\n73        PERSON  27017\n74          PITT 113718\n75          POLK  15772\n76      RANDOLPH  93805\n77      RICHMOND  27216\n78       ROBESON  69785\n79    ROCKINGHAM  60497\n80         ROWAN  95376\n81    RUTHERFORD  45278\n82       SAMPSON  37263\n83      SCOTLAND  20153\n84        STANLY  42752\n85        STOKES  31547\n86         SURRY  46850\n87         SWAIN   9774\n88  TRANSYLVANIA  25854\n89       TYRRELL   2268\n90         UNION 161006\n91         VANCE  28412\n92          WAKE 780519\n93        WARREN  12940\n94    WASHINGTON   8050\n95       WATAUGA  43127\n96         WAYNE  73786\n97        WILKES  43527\n98        WILSON  54424\n99        YADKIN  24494\n100       YANCEY  14197\n```\n:::\n:::\n\n\n#### Exercise 2\n\n(1) Construct an effective visualization investigating the per county percentage of unaffiliated voters in NC. Use `#f7fbff` as \"low\" on the color gradient and `#08306b` as \"high\". Which county has the highest percentage of unaffiliated voters? (You might want to use Google here.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\n(2) Write a brief research question that you could answer with this data set and then investigate it here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\n(3) What are limitations of your visualizations above?\n\n\n### Additional Resources\n\n- [Simple features in `R`](https://r-spatial.github.io/sf/)\n- [Coordinate references systems](https://www.nceas.ucsb.edu/sites/default/files/2020-04/OverviewCoordinateReferenceSystems.pdf)\n- [Geographic data in `R`](https://geocompr.robinlovelace.net/spatial-class.html)",
    "supporting": [
      "ae-08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}