{
  "hash": "dff8ab5bab671ded1de7af9f8e46dde3",
  "result": {
    "markdown": "---\ntitle: \"Troubleshooting / Review\"\nsubtitle: \"STA 199\"\neditor: source\nformat: pdf\nexecute:\n  error: true\n---\n\n\n## Bulletin\n\n-   this `ae` is **not due for grade**. No need to push your solutions.\n-   [lab-3](/labs/lab-3.html) due today at 5:00pm\n-   [exam 1](/exams/exam1.html) released today at 5:00pm\n-   checkout the [cheat sheets](https://sta199-sp23-1.github.io/computing-cheatsheets.html) on the website\n\n## Getting started\n\nClone *your* `ae9-username` repo from the [GitHub organization](https://github.com/sta199-sp23-1/).\n\n## Today\n\nBy the end of today you will...\n\n- debug code\n\n## Data\n\nIn this `ae` we will work within `mpg` data set within the `ggplot2` package.\n\n## Notes\n\nAlmost none of the code below runs. It's your job to figure out why.\n\n#### Exercise 1\n\nLet's load the library that contains the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\nand then explicitly place the data into our environment:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(mpg)\n```\n:::\n\n\nand finally glimpse the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mpg)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in glimpse(mpg): could not find function \"glimpse\"\n```\n:::\n:::\n\n\n*write here what went wrong*\n\nNext we'll mutate a column called `2avg` that reports the average of both city and highway miles per gallon.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nmpg |> \n  mutate(2avg = (cty + hwy) / 2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: <text>:3:11: unexpected symbol\n2: mpg |> \n3:   mutate(2avg\n             ^\n```\n:::\n:::\n\n\n*what went wrong?*\n\nNext, before we continue further, we want to make sure our document renders to “pdf”. Change the `format` to PDF in the YAML at the top of the document and render. What goes wrong?\n\n*what went wrong?*\n\nWe next decide to print the five most fuel efficient highway cars to the screen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg2 = mpg |>\n  arrange(desc(hwy)) |>\n  head(5)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(mpg, desc(hwy)): could not find function \"arrange\"\n```\n:::\n:::\n\n\n*what went wrong?*\n\nNext, we want to plot `cty` vs `hwy` fuel efficiency. If you run into something you haven't encountered, read the documentation with `?` e.g. `?geom_abline` and scroll to the bottom to find an example of the code in action.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg = mpg |>\n  ggplot(aes(x = cty, y = hwy)) + \n  geom_point()\n\nmpg |>\n  ggplot(aes(x = cty, y = hwy)) + \n  geom_point() +\n  geom_abline(y = x)\n```\n:::\n\n\n*what went wrong?*\n\n\n\n\n## Debug\n\nDebug the following code chunks.\n\n#### Exercise 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg |>\n  ggplot(aes(x = hwy, y = count)) + \n  geom_histogram() + \n  labs(x = \"Highway MPG\", title = \"Histogram of fuel economy\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg\n  ggplot(aes(x = as.factor(cyl), y = cty))\n  geom_boxplot() +\n  labs(x = \"Cylinders\", title = \"Box plot of city MPG by engine size\")\n```\n:::\n\n\n- why doe we need `as.factor()` above?\n\n#### Exercise 3\n\n- When in doubt, comment out! A trick to figuring out what went wrong with your code is to try running it line by line, commenting out the rest (CMD + SHIFT + C : mac), (CTRL + SHIFT + C : windows).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg |>\n  ggplot(aes(x = year, cty))) |>\n  geom_boxplot()\n  labs(x = Year,\n       y = \"City MPG\" title = \"Fuel efficiency by year\"} +\n    \"theme_bw\"()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf = data.frame(x = c(1, 2, NA, 5, 55, 32, 19, 12, 43, 6, 41, 3),\n                y = rep(c(\"A\", \"B\"), 6))\n\nglimpse(df)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in glimpse(df): could not find function \"glimpse\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  summarize(mean(x))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summarize(df, mean(x)): could not find function \"summarize\"\n```\n:::\n:::\n\n\n\n\n## YAML errors\n\nThe YAML at the top of the document and the **code chunk specific** YAML matters.\n\nYAML below\n\n```\n#| label:codeChunk1\n```\n\nwill result in an error due to incorrect spacing around `:`\n\n`ERROR: Validation of YAML cell metadata failed.`\n\n`ERROR: Render failed due to invalid YAML.`\n\nAlso, you can't have two code chunks with the same label.\n\n## Directories\n\n### Where is the data?\n\nR has a host of functions to read in various types of data. From JSON to CSV to XML, there's a function to load it and a package to interact with it. \n\nMost commonly, in this course, we will encounter comma separated values (CSV) files and excel files (e.g. with extension `.xslx`). A couple easy ways to read these in:\n\n- To read `.csv` files, `readr::read_csv()`\n- To read `.xlsx` files, `readxl::read_xlsx()`\n\nThe notation `x::y()` means that the function `y()` is found within the package `x` and can be loaded with `library(x)`. `readr` is one of the core sub-packages of the `tidyverse`. \n\nMost often, you will open a project and the path to the data will be **relative** to the project folder.\n\n\n### Why can't I push my `.qmd` file to GitHub?\n\n- Are you in the appropriate directory? AKA does the project you have open (upper right) match the quarto file you are working in?\n\n- Did you save the changes in your file? If you haven't changed the file, you can't commit changes.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}