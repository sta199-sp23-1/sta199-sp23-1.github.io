{
  "hash": "1efbce3d5f5e7da8a9d160307cb83831",
  "result": {
    "markdown": "---\ntitle: \"Project tips\"\nsubtitle: \"STA 199\"\nexecute:\n  echo: true\n  warning: true\n  message: true\nformat: \n  html:\n    fig-width: 7\n    fig-height: 5\nbibliography: references.bib\n---\n\n\n## Bulletin\n\n-   this `ae` is **not** due for grade.\n-   exam 2 released today\n\n## Getting started\n\nClone *your* `ae24-username` repo from the [GitHub organization](https://github.com/sta199-sp23-1/).\n\n## Today\n\nBy the end of today you will practice a few quarto/markdown tricks to polish your report and simplify your presentation.\nSpecifically we will discuss:\n\n-   code chunk settings\n-   citations\n-   `kable()` tables\n-   quarto presentations\n\n## Project logistics\n\n-   Presentations are a required component of the final project and it's expected all group members will be there.\n\n-   The final project is a website.\n\n    -   You can keep or delete the \"Proposal\" page.\n    -   You can add additional pages if you wish, e.g. an \"Abstract\" page\n    -   The Presentation, Report and About pages are required.\n    - You will turn in your slides, report (whole website) by pushing to GitHub\n    - You will additionally turn in your report via Gradescope.\n\n## Code chunk settings\n\nSome options available for customizing output (see [quarto documenation](https://quarto.org/docs/computations/execution-options.html) for more detail).\n\n| Option    | Description                                                                                                                                 |\n|------------|------------------------------------------------------------|\n| `eval`    | Evaluate the code chunk (if `false`, just echos the code into the output)                                                                   |\n| `echo`    | Include the source code in output                                                                                                           |\n| `warning` | Include warnings in the output                                                                                                              |\n| `message` | Whether to preserve messages emitted by message() (similar to the option warning)                                                           |\n| `include` | Catch all for preventing any output (code or results) from being included (e.g. `include: false` suppresses all output from the code block) |\n\nThese options can be applied globally (the whole document) or locally (a specific code chunk).\nGlobal settings are controlled in the YAML (see the top of the document) while local code chunk options can be applied with `#|` (see example below).\n\n#### Exercise 1\n\nIn the code chunk below:\n\n-   set `warning` to false\n-   set `echo` to false\n\nand re-render.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ ggplot2 3.3.5      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.1.4      ✔ stringr 1.4.0 \n✔ readr   2.1.1      ✔ forcats 0.5.1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(knitr)\n```\n:::\n\n\nIn addition to code chunks, figures have settings as well.\n\nWe can set captions and an `alt` attributes using `#| fig-cap:` and `#| fig-alt:` respectively.\n`alt` captions specify \"alternate text\" for an image.\nAlternative text appears if an image cannot be displayed and is also read by screen-readers.\n\nAdditional figure options include\n\n| Option       | Description                                                                         |\n|------------|------------------------------------------------------------|\n| `fig-width`  | figure width in inches                                                              |\n| `fig-height` | figure height in inches                                                             |\n| `fig.align`  | e.g. `fig.align: center` centers figure alignment                                   |\n| `fig.asp`    | changes figure height based on aspect ratio with width                              |\n| `out.width`  | sets figure width relative to text (1000 = 100% text width), e.g. `out.width: 1000` |\n\nIn all cases above, we can again set options locally or globally.\nNote: local options override global options.\n\n#### Exercise 2\n\nAdd a figure caption to the figure below.\nNext, change the output width to be 50% of the text.\nFinally, align the figure with the center of the page.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars %>%\n  ggplot(aes(x = height)) +\n  geom_density() +\n  labs(x = \"Height (cm)\", y = \"Density\") +\n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 6 rows containing non-finite values (stat_density).\n```\n:::\n\n::: {.cell-output-display}\n![](ae-24_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n#### Project specific notes\n\nFor the project, you will set the option `echo: FALSE` and `warning: FALSE` to hide all code and warnings in your final report.\n\n**Suggestion**: make your figures consistently themed, e.g. use similar figure size/aspect ratio and color scheme throughout your report.\nChange the default gray background, see [themes](https://ggplot2.tidyverse.org/reference/ggtheme.html).\n\n#### Exercise 3\n\nChange the global code chunk settings so the document is formatted as your final project will be.\nRender and take a look at the updated PDF.\n\n## Citations\n\nYour report will include citations, e.g. the data source, previous research, and other sources as needed.\nAt a minimum, you should have a citation for the data source.\n\nAll of your bibliography entries will be stored in a `.bib` file.\nThe entries of the bibliography are stored using BibTex, i.e., a format to store citations in LaTeX.\nLet's take a look at `references.bib`.\n\nIn addition to the .bib file:\n\n-   Include `bibliography: references.bib` in the YAML.\n-   At the end of the report, include `## References`. This will list all of the references at the end of the document.\n\n### Citation examples\n\n1.  In @wickham2016package, the authors focus present the grammar of graphics package `ggplot2` for R.\n\n2.  Within the grammar of graphics, `ggplot()` is the first layer of any plot [@wickham2016package].\n\n#### Exercise 4\n\n-   Add a citation for *tidytuesday* to this document. Hint: check out the `tidytuesday` [GitHub page](https://github.com/rfordatascience/tidytuesday).\n\n## Links\n\nAdd URLs to your document using the following syntax:\n\n[DISPLAYED TEXT](FULL%20URL)\n\n## Neat kable table\n\n-   Calculate the mean, median, and standard deviation of `mass`. Display the results.\n\n#### Exercise 5\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\n-   Let's neatly display the results using the `kable` function from the **knitr** package. We will\n    -   Display results to 2 decimal places\n    -   Customize column names\n    -   Add a caption\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## add code\n```\n:::\n\n\n## Presentations (demo)\n",
    "supporting": [
      "ae-24_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}