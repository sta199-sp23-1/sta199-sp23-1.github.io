{
  "hash": "7140b78469373ce02530deb8877549be",
  "result": {
    "markdown": "---\ntitle: \"Central limit theorem II\"\nsubtitle: \"STA 199\"\neditor: source\nformat: html\nexecute:\n  error: true\n---\n\n\n## Bulletin\n\n-   this `ae` is **due for grade**. Push your completed ae to GitHub within 48 hours to receive credit\n- [homework 4](/hw/hw-4.html) due Friday\n\n## Getting started\n\nClone *your* `ae20-username` repo from the [GitHub organization](https://github.com/sta199-sp23-1/).\n\n\n\n## Today\n\nBy the end of today you will...\n\n- Use CLT to construct confidence intervals\n\n## Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\n```\n:::\n\n\n## Load Data: Pokemon\n\nWe will be using the `pokemon` data set, which contains information about 42 randomly selected Pokemon (from all generations). You may load in the data set with the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npokemon = read_csv(\"https://sta101.github.io/static/appex/data/pokemon.csv\")\n```\n:::\n\n\nIn this analysis, we will use CLT-based inference to draw conclusions about the mean height among all Pokemon species.\n\n#### Exercise 1\n\nLet's start by looking at the distribution of `height_m`, the typical height in meters for a Pokemon species, using a visualization and summary statistics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = pokemon, aes(x = height_m)) +\n  geom_histogram(binwidth = 0.25, fill = \"steelblue\", color = \"black\") + \n  labs(x = \"Height (in meters)\", \n       y = \"Distributon of Pokemon heights\")\n```\n\n::: {.cell-output-display}\n![](ae-20_files/figure-html/height-histogram-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npokemon %>%\n  summarise(mean_height = mean(height_m), \n            sd_height = sd(height_m), \n            n_pokemon = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  mean_height sd_height n_pokemon\n        <dbl>     <dbl>     <int>\n1       0.929     0.497        42\n```\n:::\n:::\n\n\nIn the previous lecture we were given the mean, $\\mu$, and standard deviation, $\\sigma$, of the population. That is unrealistic in practice (if we knew $\\mu$ and $\\sigma$, we wouldn't need to do statistical inference!).\n\nToday we will start on using the Central Limit Theorem to draw conclusions about the $\\mu$, the mean height in the population of Pokemon.\n\n-   What is the point estimate for $\\mu$, i.e., the \"best guess\" for the mean height of all Pokemon?\n\n-   What is the point estimate for $\\sigma$, i.e., the \"best guess\" for the standard deviation of the distribution of Pokemon heights?\n\n#### Exercise 2\n\nBefore moving forward, let's check the conditions required to apply the Central Limit Theorem. Are the following conditions met:\n\n-   Independence?\n-   Sample size/distribution?\n\n\n#### Central limit theorem\n\nRemember, when the independence and sample size assumptions are met, the central limit theorem states\n\n\n$$\n\\bar{x} \\sim N(\\mu, \\sigma / \\sqrt{n})\n$$\n\n\nIf we know $\\sigma$, we can construct a symmetric confidence interval for the true mean easily using `qnorm()`.\n\nFor example, if the true standard deviation in pokemon height is 0.4 meters, then to construct a 95% confidence interval:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxbar = pokemon %>%\n  summarize(xbar = mean(height_m)) %>%\n  pull(xbar)\n\nqnorm(c(0.025, 0.975), mean = xbar, sd = 0.4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1445858 1.7125570\n```\n:::\n:::\n\n\nThis can be equivalently expressed\n\n\n::: {.cell}\n\n```{.r .cell-code}\nzscore = qnorm(0.025)\nxbar + zscore*0.4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1445858\n```\n:::\n\n```{.r .cell-code}\nxbar - zscore*0.4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.712557\n```\n:::\n:::\n\n\nwhere we use the fact that we can write any normal distribution as a linear combination of a standard normal. For example,\n\nif $X \\sim N(0.928, .4)$, then $X = .4Z + 0.928$ where $Z$ is standard normal, in other words $Z \\sim N(0, 1)$.\n\nIn general, the confidence interval can be written as \n\n\n$$\n\\bar{x} \\pm z^* \\times \\sigma\n$$\n\nwhere $z^*$ is the quantile of a standard normal distribution associated with our level of confidence.\n\nWhat about when we don't know $\\sigma$?\n\n### Practical confidence intervals\n\nWe don't know the true population mean $\\mu$ and standard deviation $\\sigma$, how do we use CLT to construct a confidence interval?\n\nWe approximate $\\mu$ by $\\bar{x}$ and $\\sigma$ by the same standard deviation $s$. However $s$ may be smaller than $\\sigma$ and our confidence interval could be too narrow, for example, run the code below to compute the standard deviation of three draws from a standard normal.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(6)\nsamples = rnorm(3, mean = 0, sd = 1)\nsd(samples)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7543284\n```\n:::\n:::\n\n\nThis was just for 1 random seed. If you remove the seed and repeat the simulation, you will find that $s$ is sometimes above and sometimes below the true standard deviation.\n\nTo account for this uncertainty, we will use a distribution with thicker tails. This sampling distribution is called a **t-distribution**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = data.frame(x = c(0 - 1*3, 0 + 1*3)), aes(x = x)) +\n  stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\n                color = \"black\") +\n  stat_function(fun = dt, args = list(df = 3),\n                color = \"red\",lty = 2) + theme_bw() +\n  labs(title = \"Black solid line = normal, Red dotted line = t-distribution\")\n```\n\n::: {.cell-output-display}\n![](ae-20_files/figure-html/t-versus-normal-1.png){width=672}\n:::\n:::\n\n\nThe t-distribution has a bell shape but the extra thick tails help us correct for the variability introduced by using $s$ instead of $\\sigma$.\n\nThe t-distribution, like the standard normal, is always centered at zero. Therefore, the t-distribution has only a single parameter: degrees of freedom. The degrees of freedom describes the precise form of the bell-shaped t-distribution. In general, we'll use a t-distribution with $df=n−1$ to model the sample mean when the sample size is $n$.\n\nWe can use `qt` and `pt` to find quantiles and probabilities respectively under the t-distribution.\n\n### Confidence interval\nTo construct our \npractical confidence interval (where we don't know $\\sigma$) we use the t-distribution:\n\n\n$$\n\\bar{x} \\pm t^*_{n-1} \\times \\frac{s}{\\sqrt{n}}\n$$\n\n\n#### Exercise 3\n\n- Calculate the 95% confidence interval for pokemon height using the t-distribution.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\nHow does this compare to a 95% bootstrap confidence interval?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n",
    "supporting": [
      "ae-20_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}